

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 30 19:29:02 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59     0000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F1519 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95     0000                     	;# 
    96     0001                     	;# 
    97     0002                     	;# 
    98     0003                     	;# 
    99     0004                     	;# 
   100     0005                     	;# 
   101     0006                     	;# 
   102     0007                     	;# 
   103     0008                     	;# 
   104     0009                     	;# 
   105     000A                     	;# 
   106     000B                     	;# 
   107     000C                     	;# 
   108     000D                     	;# 
   109     000E                     	;# 
   110     000F                     	;# 
   111     0010                     	;# 
   112     0011                     	;# 
   113     0012                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0016                     	;# 
   117     0017                     	;# 
   118     0018                     	;# 
   119     0019                     	;# 
   120     001A                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     008C                     	;# 
   124     008D                     	;# 
   125     008E                     	;# 
   126     008F                     	;# 
   127     0090                     	;# 
   128     0091                     	;# 
   129     0092                     	;# 
   130     0095                     	;# 
   131     0096                     	;# 
   132     0097                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0110                     	;# 
   145     0116                     	;# 
   146     0117                     	;# 
   147     011D                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     018E                     	;# 
   151     018F                     	;# 
   152     0190                     	;# 
   153     0191                     	;# 
   154     0191                     	;# 
   155     0192                     	;# 
   156     0193                     	;# 
   157     0193                     	;# 
   158     0194                     	;# 
   159     0195                     	;# 
   160     0196                     	;# 
   161     0197                     	;# 
   162     0199                     	;# 
   163     019A                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019C                     	;# 
   169     019C                     	;# 
   170     019D                     	;# 
   171     019E                     	;# 
   172     019F                     	;# 
   173     020D                     	;# 
   174     0210                     	;# 
   175     0211                     	;# 
   176     0211                     	;# 
   177     0212                     	;# 
   178     0212                     	;# 
   179     0213                     	;# 
   180     0213                     	;# 
   181     0214                     	;# 
   182     0214                     	;# 
   183     0215                     	;# 
   184     0215                     	;# 
   185     0215                     	;# 
   186     0216                     	;# 
   187     0216                     	;# 
   188     0217                     	;# 
   189     0217                     	;# 
   190     0291                     	;# 
   191     0291                     	;# 
   192     0292                     	;# 
   193     0293                     	;# 
   194     0298                     	;# 
   195     0298                     	;# 
   196     0299                     	;# 
   197     029A                     	;# 
   198     0394                     	;# 
   199     0395                     	;# 
   200     0396                     	;# 
   201     0FE4                     	;# 
   202     0FE5                     	;# 
   203     0FE6                     	;# 
   204     0FE7                     	;# 
   205     0FE8                     	;# 
   206     0FE9                     	;# 
   207     0FEA                     	;# 
   208     0FEB                     	;# 
   209     0FED                     	;# 
   210     0FEE                     	;# 
   211     0FEF                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     008C                     	;# 
   241     008D                     	;# 
   242     008E                     	;# 
   243     008F                     	;# 
   244     0090                     	;# 
   245     0091                     	;# 
   246     0092                     	;# 
   247     0095                     	;# 
   248     0096                     	;# 
   249     0097                     	;# 
   250     0099                     	;# 
   251     009A                     	;# 
   252     009B                     	;# 
   253     009B                     	;# 
   254     009C                     	;# 
   255     009D                     	;# 
   256     009E                     	;# 
   257     010C                     	;# 
   258     010D                     	;# 
   259     010E                     	;# 
   260     010F                     	;# 
   261     0110                     	;# 
   262     0116                     	;# 
   263     0117                     	;# 
   264     011D                     	;# 
   265     018C                     	;# 
   266     018D                     	;# 
   267     018E                     	;# 
   268     018F                     	;# 
   269     0190                     	;# 
   270     0191                     	;# 
   271     0191                     	;# 
   272     0192                     	;# 
   273     0193                     	;# 
   274     0193                     	;# 
   275     0194                     	;# 
   276     0195                     	;# 
   277     0196                     	;# 
   278     0197                     	;# 
   279     0199                     	;# 
   280     019A                     	;# 
   281     019B                     	;# 
   282     019B                     	;# 
   283     019B                     	;# 
   284     019B                     	;# 
   285     019C                     	;# 
   286     019C                     	;# 
   287     019D                     	;# 
   288     019E                     	;# 
   289     019F                     	;# 
   290     020D                     	;# 
   291     0210                     	;# 
   292     0211                     	;# 
   293     0211                     	;# 
   294     0212                     	;# 
   295     0212                     	;# 
   296     0213                     	;# 
   297     0213                     	;# 
   298     0214                     	;# 
   299     0214                     	;# 
   300     0215                     	;# 
   301     0215                     	;# 
   302     0215                     	;# 
   303     0216                     	;# 
   304     0216                     	;# 
   305     0217                     	;# 
   306     0217                     	;# 
   307     0291                     	;# 
   308     0291                     	;# 
   309     0292                     	;# 
   310     0293                     	;# 
   311     0298                     	;# 
   312     0298                     	;# 
   313     0299                     	;# 
   314     029A                     	;# 
   315     0394                     	;# 
   316     0395                     	;# 
   317     0396                     	;# 
   318     0FE4                     	;# 
   319     0FE5                     	;# 
   320     0FE6                     	;# 
   321     0FE7                     	;# 
   322     0FE8                     	;# 
   323     0FE9                     	;# 
   324     0FEA                     	;# 
   325     0FEB                     	;# 
   326     0FED                     	;# 
   327     0FEE                     	;# 
   328     0FEF                     	;# 
   329                           
   330                           	psect	idataCOMMON
   331     07FD                     __pidataCOMMON:
   332                           
   333                           ;initializer for isr@meas
   334     07FD  3401               	retlw	1
   335     0011                     _PIR1bits	set	17
   336     0016                     _TMR1L	set	22
   337     0017                     _TMR1H	set	23
   338     0015                     _TMR0	set	21
   339     000B                     _INTCONbits	set	11
   340     000C                     _PORTAbits	set	12
   341     000E                     _PORTCbits	set	14
   342     001B                     _PR2	set	27
   343     001C                     _T2CON	set	28
   344     0019                     _T1GCON	set	25
   345     0018                     _T1CON	set	24
   346     000B                     _INTCON	set	11
   347     000F                     _PORTD	set	15
   348     000E                     _PORTC	set	14
   349     000D                     _PORTB	set	13
   350     000C                     _PORTA	set	12
   351     008E                     _TRISCbits	set	142
   352     0095                     _OPTION_REG	set	149
   353     0091                     _PIE1	set	145
   354     008F                     _TRISD	set	143
   355     008E                     _TRISC	set	142
   356     008D                     _TRISB	set	141
   357     008C                     _TRISA	set	140
   358     0099                     _OSCCON	set	153
   359     0199                     _RCREG	set	409
   360     019A                     _TXREG	set	410
   361     019D                     _RCSTAbits	set	413
   362     019E                     _TXSTAbits	set	414
   363     019B                     _SPBRG	set	411
   364     018F                     _ANSELD	set	399
   365     018E                     _ANSELC	set	398
   366     018D                     _ANSELB	set	397
   367     018C                     _ANSELA	set	396
   368     0396                     _IOCBF	set	918
   369     0395                     _IOCBN	set	917
   370                           
   371                           	psect	stringtext1
   372     1800                     __pstringtext1:
   373     1800                     STR_1:
   374     1800  3450               	retlw	80	;'P'
   375     1801  3449               	retlw	73	;'I'
   376     1802  3443               	retlw	67	;'C'
   377     1803  3420               	retlw	32	;' '
   378     1804  3449               	retlw	73	;'I'
   379     1805  344E               	retlw	78	;'N'
   380     1806  3449               	retlw	73	;'I'
   381     1807  3454               	retlw	84	;'T'
   382     1808  3420               	retlw	32	;' '
   383     1809  344F               	retlw	79	;'O'
   384     180A  344B               	retlw	75	;'K'
   385     180B  3421               	retlw	33	;'!'
   386     180C  340A               	retlw	10
   387     180D  340D               	retlw	13
   388     180E  3400               	retlw	0
   389                           
   390                           	psect	stringtext2
   391     180F                     __pstringtext2:
   392     180F                     STR_6:
   393     180F  3449               	retlw	73	;'I'
   394     1810  344E               	retlw	78	;'N'
   395     1811  3446               	retlw	70	;'F'
   396     1812  3449               	retlw	73	;'I'
   397     1813  344E               	retlw	78	;'N'
   398     1814  3449               	retlw	73	;'I'
   399     1815  3454               	retlw	84	;'T'
   400     1816  3459               	retlw	89	;'Y'
   401     1817  3400               	retlw	0
   402                           
   403                           	psect	stringtext3
   404     1818                     __pstringtext3:
   405     1818                     STR_5:
   406     1818  3469               	retlw	105	;'i'
   407     1819  346E               	retlw	110	;'n'
   408     181A  3466               	retlw	102	;'f'
   409     181B  3469               	retlw	105	;'i'
   410     181C  346E               	retlw	110	;'n'
   411     181D  3469               	retlw	105	;'i'
   412     181E  3474               	retlw	116	;'t'
   413     181F  3479               	retlw	121	;'y'
   414     1820  3400               	retlw	0
   415                           
   416                           	psect	stringtext4
   417     1821                     __pstringtext4:
   418     1821                     STR_11:
   419     1821  344E               	retlw	78	;'N'
   420     1822  3441               	retlw	65	;'A'
   421     1823  344E               	retlw	78	;'N'
   422     1824  3400               	retlw	0
   423                           
   424                           	psect	stringtext5
   425     1825                     __pstringtext5:
   426     1825                     STR_7:
   427     1825  3469               	retlw	105	;'i'
   428     1826  346E               	retlw	110	;'n'
   429     1827  3466               	retlw	102	;'f'
   430     1828  3400               	retlw	0
   431                           
   432                           	psect	stringtext6
   433     1829                     __pstringtext6:
   434     1829                     STR_10:
   435     1829  346E               	retlw	110	;'n'
   436     182A  3461               	retlw	97	;'a'
   437     182B  346E               	retlw	110	;'n'
   438     182C  3400               	retlw	0
   439                           
   440                           	psect	stringtext7
   441     182D                     __pstringtext7:
   442     182D                     STR_2:
   443     182D  342C               	retlw	44	;','
   444     182E  3400               	retlw	0
   445                           
   446                           	psect	stringtext8
   447     0000                     __pstringtext8:
   448     180E                     
   449                           	psect	cinit
   450     00B7                     start_initialization:	
   451                           ; #config settings
   452                           
   453     00B7                     __initialization:
   454                           
   455                           ; Initialize objects allocated to COMMON
   456     00B7  3187  27FD  3180   	fcall	__pidataCOMMON	;fetch initializer
   457     00BA  00FD               	movwf	__pdataCOMMON& (0+127)
   458                           
   459                           ; Clear objects allocated to COMMON
   460     00BB  01FA               	clrf	__pbssCOMMON& (0+127)
   461     00BC  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   462     00BD  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   463                           
   464                           ; Clear objects allocated to BANK0
   465     00BE  01EA               	clrf	__pbssBANK0& (0+127)
   466     00BF  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   467     00C0  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   468                           
   469                           ; Clear objects allocated to BANK1
   470     00C1  30A0               	movlw	low __pbssBANK1
   471     00C2  0084               	movwf	4
   472     00C3  3000               	movlw	high __pbssBANK1
   473     00C4  0085               	movwf	5
   474     00C5  3025               	movlw	37
   475     00C6  3187  27F7  3180   	fcall	clear_ram0
   476                           
   477                           ; Clear objects allocated to BANK2
   478     00C9  3020               	movlw	low __pbssBANK2
   479     00CA  0084               	movwf	4
   480     00CB  3001               	movlw	high __pbssBANK2
   481     00CC  0085               	movwf	5
   482     00CD  3032               	movlw	50
   483     00CE  3187  27F7  3180   	fcall	clear_ram0
   484     00D1                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487     00D1                     __end_of__initialization:
   488     00D1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   489     00D2  0020               	movlb	0
   490     00D3  3180  28D5         	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMMON
   493     007A                     __pbssCOMMON:
   494     007A                     UARTreadString@i:
   495     007A                     	ds	2
   496     007C                     _bzzEn:
   497     007C                     	ds	1
   498                           
   499                           	psect	dataCOMMON
   500     007D                     __pdataCOMMON:
   501     007D                     isr@meas:
   502     007D                     	ds	1
   503                           
   504                           	psect	bssBANK0
   505     006A                     __pbssBANK0:
   506     006A                     isr@bzzPasses:
   507     006A                     	ds	2
   508     006C                     strtok_single@src:
   509     006C                     	ds	1
   510                           
   511                           	psect	bssBANK1
   512     00A0                     __pbssBANK1:
   513     00A0                     _us_us:
   514     00A0                     	ds	16
   515     00B0                     debugSS@revMillis_420:
   516     00B0                     	ds	4
   517     00B4                     debugSS@prevMillis:
   518     00B4                     	ds	4
   519     00B8                     _prevMillis:
   520     00B8                     	ds	4
   521     00BC                     _millis:
   522     00BC                     	ds	4
   523     00C0                     _speed:
   524     00C0                     	ds	4
   525     00C4                     _GPSRDY:
   526     00C4                     	ds	1
   527                           
   528                           	psect	bssBANK2
   529     0120                     __pbssBANK2:
   530     0120                     _NMEASentence:
   531     0120                     	ds	50
   532                           
   533                           	psect	clrtext
   534     07F7                     clear_ram0:	
   535                           ;	Called with FSR0 containing the base address, and
   536                           ;	WREG with the size to clear
   537                           
   538     07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   539     07F8                     clrloop0:
   540     07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   541     07F9  3101               	addfsr 0,1
   542     07FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   543     07FB  2FF8               	goto	clrloop0	;have we reached the end yet?
   544     07FC  3400               	retlw	0	;all done for this memory range, return
   545                           
   546                           	psect	cstackBANK1
   547     00C5                     __pcstackBANK1:
   548     00C5                     ??_main:
   549                           
   550                           ; 1 bytes @ 0x0
   551     00C5                     	ds	8
   552     00CD                     main@ledIntenD:
   553                           
   554                           ; 4 bytes @ 0x8
   555     00CD                     	ds	4
   556     00D1                     main@ledIntenP:
   557                           
   558                           ; 4 bytes @ 0xC
   559     00D1                     	ds	4
   560     00D5                     main@bzzTime:
   561                           
   562                           ; 4 bytes @ 0x10
   563     00D5                     	ds	4
   564                           
   565                           	psect	cstackCOMMON
   566     0070                     __pcstackCOMMON:
   567     0070                     ?_beginSecuence:
   568     0070                     ?_UARTreadString:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_main:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_isr:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     UARTreadString@bufSize:	
   578                           ; 1 bytes @ 0x0
   579                           
   580                           
   581                           ; 1 bytes @ 0x0
   582     0070                     	ds	1
   583     0071                     ??_UARTreadString:
   584                           
   585                           ; 1 bytes @ 0x1
   586     0071                     	ds	1
   587     0072                     UARTreadString@buf:
   588                           
   589                           ; 1 bytes @ 0x2
   590     0072                     	ds	1
   591     0073                     UARTreadString@tmp_392:
   592                           
   593                           ; 1 bytes @ 0x3
   594     0073                     	ds	1
   595     0074                     ??_isr:
   596                           
   597                           ; 1 bytes @ 0x4
   598     0074                     	ds	2
   599     0076                     _isr$244:
   600                           
   601                           ; 2 bytes @ 0x6
   602     0076                     	ds	2
   603     0078                     isr@i:
   604                           
   605                           ; 2 bytes @ 0x8
   606     0078                     	ds	2
   607                           
   608                           	psect	cstackBANK0
   609     0020                     __pcstackBANK0:
   610     0020                     ?___fleq:
   611     0020                     ?___flge:	
   612                           ; 1 bit 
   613                           
   614     0020                     ?_UARTsendString:	
   615                           ; 1 bit 
   616                           
   617     0020                     ??_beginSecuence:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0020                     ?__Umul8_16:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0020                     ?_strchr:	
   624                           ; 2 bytes @ 0x0
   625                           
   626     0020                     ?_isspace:	
   627                           ; 2 bytes @ 0x0
   628                           
   629     0020                     ?_isdigit:	
   630                           ; 2 bytes @ 0x0
   631                           
   632     0020                     ?_islower:	
   633                           ; 2 bytes @ 0x0
   634                           
   635     0020                     ?___wmul:	
   636                           ; 2 bytes @ 0x0
   637                           
   638     0020                     ?___lwdiv:	
   639                           ; 2 bytes @ 0x0
   640                           
   641     0020                     ?_nanf:	
   642                           ; 2 bytes @ 0x0
   643                           
   644     0020                     ?___lmul:	
   645                           ; 4 bytes @ 0x0
   646                           
   647     0020                     ?___flneg:	
   648                           ; 4 bytes @ 0x0
   649                           
   650     0020                     ?___fldiv:	
   651                           ; 4 bytes @ 0x0
   652                           
   653     0020                     ?___xxtofl:	
   654                           ; 4 bytes @ 0x0
   655                           
   656     0020                     __Umul8_16@multiplicand:	
   657                           ; 4 bytes @ 0x0
   658                           
   659     0020                     UARTsendString@str:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0020                     ___wmul@multiplier:	
   663                           ; 2 bytes @ 0x0
   664                           
   665     0020                     ___lwdiv@divisor:	
   666                           ; 2 bytes @ 0x0
   667                           
   668     0020                     strchr@s:	
   669                           ; 2 bytes @ 0x0
   670                           
   671     0020                     isdigit@c:	
   672                           ; 2 bytes @ 0x0
   673                           
   674     0020                     isspace@c:	
   675                           ; 2 bytes @ 0x0
   676                           
   677     0020                     nanf@s:	
   678                           ; 2 bytes @ 0x0
   679                           
   680     0020                     islower@c:	
   681                           ; 2 bytes @ 0x0
   682                           
   683     0020                     ___lmul@multiplier:	
   684                           ; 2 bytes @ 0x0
   685                           
   686     0020                     ___fleq@ff1:	
   687                           ; 4 bytes @ 0x0
   688                           
   689     0020                     ___flge@ff1:	
   690                           ; 4 bytes @ 0x0
   691                           
   692     0020                     ___flneg@f1:	
   693                           ; 4 bytes @ 0x0
   694                           
   695     0020                     ___fldiv@a:	
   696                           ; 4 bytes @ 0x0
   697                           
   698     0020                     ___xxtofl@val:	
   699                           ; 4 bytes @ 0x0
   700                           
   701                           
   702                           ; 4 bytes @ 0x0
   703     0020                     	ds	1
   704     0021                     beginSecuence@i:
   705                           
   706                           ; 2 bytes @ 0x1
   707     0021                     	ds	1
   708     0022                     ??__Umul8_16:
   709     0022                     ??_isspace:	
   710                           ; 1 bytes @ 0x2
   711                           
   712     0022                     ??_isdigit:	
   713                           ; 1 bytes @ 0x2
   714                           
   715     0022                     ??_islower:	
   716                           ; 1 bytes @ 0x2
   717                           
   718     0022                     UARTsendString@max_length:	
   719                           ; 1 bytes @ 0x2
   720                           
   721     0022                     ___wmul@multiplicand:	
   722                           ; 1 bytes @ 0x2
   723                           
   724     0022                     ___lwdiv@dividend:	
   725                           ; 2 bytes @ 0x2
   726                           
   727     0022                     strchr@c:	
   728                           ; 2 bytes @ 0x2
   729                           
   730                           
   731                           ; 2 bytes @ 0x2
   732     0022                     	ds	1
   733     0023                     ??_UARTsendString:
   734                           
   735                           ; 1 bytes @ 0x3
   736     0023                     	ds	1
   737     0024                     ??_strchr:
   738     0024                     ??_nanf:	
   739                           ; 1 bytes @ 0x4
   740                           
   741     0024                     ??___wmul:	
   742                           ; 1 bytes @ 0x4
   743                           
   744     0024                     ??___flneg:	
   745                           ; 1 bytes @ 0x4
   746                           
   747     0024                     ??___lwdiv:	
   748                           ; 1 bytes @ 0x4
   749                           
   750     0024                     ??___xxtofl:	
   751                           ; 1 bytes @ 0x4
   752                           
   753     0024                     _isspace$834:	
   754                           ; 1 bytes @ 0x4
   755                           
   756     0024                     UARTsendString@i:	
   757                           ; 1 bytes @ 0x4
   758                           
   759     0024                     ___wmul@product:	
   760                           ; 2 bytes @ 0x4
   761                           
   762     0024                     __Umul8_16@product:	
   763                           ; 2 bytes @ 0x4
   764                           
   765     0024                     ___lmul@multiplicand:	
   766                           ; 2 bytes @ 0x4
   767                           
   768     0024                     ___fleq@ff2:	
   769                           ; 4 bytes @ 0x4
   770                           
   771     0024                     ___flge@ff2:	
   772                           ; 4 bytes @ 0x4
   773                           
   774     0024                     ___fldiv@b:	
   775                           ; 4 bytes @ 0x4
   776                           
   777     0024                     nanf@u:	
   778                           ; 4 bytes @ 0x4
   779                           
   780                           
   781                           ; 4 bytes @ 0x4
   782     0024                     	ds	1
   783     0025                     ___lwdiv@quotient:
   784                           
   785                           ; 2 bytes @ 0x5
   786     0025                     	ds	1
   787     0026                     ?_isxdigit:
   788     0026                     ?_toupper:	
   789                           ; 2 bytes @ 0x6
   790                           
   791     0026                     __Umul8_16@word_mpld:	
   792                           ; 2 bytes @ 0x6
   793                           
   794     0026                     isxdigit@c:	
   795                           ; 2 bytes @ 0x6
   796                           
   797     0026                     toupper@c:	
   798                           ; 2 bytes @ 0x6
   799                           
   800                           
   801                           ; 2 bytes @ 0x6
   802     0026                     	ds	1
   803     0027                     ?_strcspn:
   804     0027                     ___lwdiv@counter:	
   805                           ; 2 bytes @ 0x7
   806                           
   807     0027                     strcspn@c:	
   808                           ; 1 bytes @ 0x7
   809                           
   810                           
   811                           ; 2 bytes @ 0x7
   812     0027                     	ds	1
   813     0028                     ?_us_to_cm:
   814     0028                     ??_isxdigit:	
   815                           ; 1 bytes @ 0x8
   816                           
   817     0028                     ??_toupper:	
   818                           ; 1 bytes @ 0x8
   819                           
   820     0028                     ??___lmul:	
   821                           ; 1 bytes @ 0x8
   822                           
   823     0028                     ??___fleq:	
   824                           ; 1 bytes @ 0x8
   825                           
   826     0028                     ??___flge:	
   827                           ; 1 bytes @ 0x8
   828                           
   829     0028                     ??___fldiv:	
   830                           ; 1 bytes @ 0x8
   831                           
   832     0028                     __Umul8_16@multiplier:	
   833                           ; 1 bytes @ 0x8
   834                           
   835     0028                     ___xxtofl@sign:	
   836                           ; 1 bytes @ 0x8
   837                           
   838     0028                     us_to_cm@us:	
   839                           ; 1 bytes @ 0x8
   840                           
   841     0028                     ___lmul@product:	
   842                           ; 2 bytes @ 0x8
   843                           
   844                           
   845                           ; 4 bytes @ 0x8
   846     0028                     	ds	1
   847     0029                     ??_strcspn:
   848     0029                     ?___flmul:	
   849                           ; 1 bytes @ 0x9
   850                           
   851     0029                     ___xxtofl@exp:	
   852                           ; 4 bytes @ 0x9
   853                           
   854     0029                     ___flmul@b:	
   855                           ; 1 bytes @ 0x9
   856                           
   857                           
   858                           ; 4 bytes @ 0x9
   859     0029                     	ds	1
   860     002A                     ?_prom_us:
   861     002A                     ??_us_to_cm:	
   862                           ; 1 bytes @ 0xA
   863                           
   864     002A                     prom_us@us1:	
   865                           ; 1 bytes @ 0xA
   866                           
   867     002A                     ___xxtofl@arg:	
   868                           ; 2 bytes @ 0xA
   869                           
   870                           
   871                           ; 4 bytes @ 0xA
   872     002A                     	ds	1
   873     002B                     strcspn@i:
   874                           
   875                           ; 2 bytes @ 0xB
   876     002B                     	ds	1
   877     002C                     ?___aldiv:
   878     002C                     _isxdigit$846:	
   879                           ; 4 bytes @ 0xC
   880                           
   881     002C                     prom_us@us2:	
   882                           ; 1 bytes @ 0xC
   883                           
   884     002C                     ___aldiv@divisor:	
   885                           ; 2 bytes @ 0xC
   886                           
   887                           
   888                           ; 4 bytes @ 0xC
   889     002C                     	ds	1
   890     002D                     strcspn@s:
   891     002D                     ___fldiv@rem:	
   892                           ; 1 bytes @ 0xD
   893                           
   894     002D                     ___flmul@a:	
   895                           ; 4 bytes @ 0xD
   896                           
   897                           
   898                           ; 4 bytes @ 0xD
   899     002D                     	ds	1
   900     002E                     ??_prom_us:
   901     002E                     ?_strpbrk:	
   902                           ; 1 bytes @ 0xE
   903                           
   904     002E                     strpbrk@b:	
   905                           ; 1 bytes @ 0xE
   906                           
   907                           
   908                           ; 2 bytes @ 0xE
   909     002E                     	ds	2
   910     0030                     ??_strpbrk:
   911     0030                     ___aldiv@dividend:	
   912                           ; 1 bytes @ 0x10
   913                           
   914                           
   915                           ; 4 bytes @ 0x10
   916     0030                     	ds	1
   917     0031                     ??___flmul:
   918     0031                     ___fldiv@sign:	
   919                           ; 1 bytes @ 0x11
   920                           
   921     0031                     strpbrk@s:	
   922                           ; 1 bytes @ 0x11
   923                           
   924                           
   925                           ; 1 bytes @ 0x11
   926     0031                     	ds	1
   927     0032                     ?_strtok_single:
   928     0032                     strtok_single@delims:	
   929                           ; 1 bytes @ 0x12
   930                           
   931     0032                     ___fldiv@new_exp:	
   932                           ; 2 bytes @ 0x12
   933                           
   934                           
   935                           ; 2 bytes @ 0x12
   936     0032                     	ds	2
   937     0034                     ??_strtok_single:
   938     0034                     ??___aldiv:	
   939                           ; 1 bytes @ 0x14
   940                           
   941     0034                     ___fldiv@grs:	
   942                           ; 1 bytes @ 0x14
   943                           
   944                           
   945                           ; 4 bytes @ 0x14
   946     0034                     	ds	1
   947     0035                     strtok_single@ret:
   948     0035                     ___aldiv@counter:	
   949                           ; 1 bytes @ 0x15
   950                           
   951                           
   952                           ; 1 bytes @ 0x15
   953     0035                     	ds	1
   954     0036                     strtok_single@p:
   955     0036                     ___aldiv@sign:	
   956                           ; 1 bytes @ 0x16
   957                           
   958     0036                     ___flmul@sign:	
   959                           ; 1 bytes @ 0x16
   960                           
   961                           
   962                           ; 1 bytes @ 0x16
   963     0036                     	ds	1
   964     0037                     strtok_single@str:
   965     0037                     ___aldiv@quotient:	
   966                           ; 1 bytes @ 0x17
   967                           
   968     0037                     ___flmul@grs:	
   969                           ; 4 bytes @ 0x17
   970                           
   971                           
   972                           ; 4 bytes @ 0x17
   973     0037                     	ds	1
   974     0038                     ___fldiv@bexp:
   975                           
   976                           ; 1 bytes @ 0x18
   977     0038                     	ds	1
   978     0039                     ___fldiv@aexp:
   979                           
   980                           ; 1 bytes @ 0x19
   981     0039                     	ds	2
   982     003B                     ?_UARTinit:
   983     003B                     ?_map:	
   984                           ; 1 bytes @ 0x1B
   985                           
   986     003B                     ___flmul@aexp:	
   987                           ; 4 bytes @ 0x1B
   988                           
   989     003B                     UARTinit@baud_rate:	
   990                           ; 1 bytes @ 0x1B
   991                           
   992     003B                     map@x:	
   993                           ; 4 bytes @ 0x1B
   994                           
   995                           
   996                           ; 4 bytes @ 0x1B
   997     003B                     	ds	1
   998     003C                     ___flmul@bexp:
   999                           
  1000                           ; 1 bytes @ 0x1C
  1001     003C                     	ds	1
  1002     003D                     ___flmul@prod:
  1003                           
  1004                           ; 4 bytes @ 0x1D
  1005     003D                     	ds	2
  1006     003F                     UARTinit@BRGH:
  1007     003F                     map@in_min:	
  1008                           ; 1 bytes @ 0x1F
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x1F
  1012     003F                     	ds	1
  1013     0040                     ??_UARTinit:
  1014                           
  1015                           ; 1 bytes @ 0x20
  1016     0040                     	ds	1
  1017     0041                     ___flmul@temp:
  1018                           
  1019                           ; 2 bytes @ 0x21
  1020     0041                     	ds	2
  1021     0043                     ?_strtof:
  1022     0043                     strtof@res:	
  1023                           ; 4 bytes @ 0x23
  1024                           
  1025     0043                     map@in_max:	
  1026                           ; 1 bytes @ 0x23
  1027                           
  1028                           
  1029                           ; 4 bytes @ 0x23
  1030     0043                     	ds	4
  1031     0047                     ??_strtof:
  1032     0047                     map@out_min:	
  1033                           ; 1 bytes @ 0x27
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x27
  1037     0047                     	ds	4
  1038     004B                     map@out_max:
  1039                           
  1040                           ; 4 bytes @ 0x2B
  1041     004B                     	ds	4
  1042     004F                     ??_map:
  1043     004F                     strtof@digit:	
  1044                           ; 1 bytes @ 0x2F
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x2F
  1048     004F                     	ds	1
  1049     0050                     strtof@flags:
  1050                           
  1051                           ; 1 bytes @ 0x30
  1052     0050                     	ds	1
  1053     0051                     strtof@expon:
  1054                           
  1055                           ; 2 bytes @ 0x31
  1056     0051                     	ds	2
  1057     0053                     strtof@eexp:
  1058                           
  1059                           ; 2 bytes @ 0x33
  1060     0053                     	ds	2
  1061     0055                     strtof@_u:
  1062                           
  1063                           ; 4 bytes @ 0x35
  1064     0055                     	ds	4
  1065     0059                     strtof@i:
  1066                           
  1067                           ; 1 bytes @ 0x39
  1068     0059                     	ds	1
  1069     005A                     strtof@s:
  1070                           
  1071                           ; 1 bytes @ 0x3A
  1072     005A                     	ds	1
  1073     005B                     ?_atof:
  1074                           
  1075                           ; 4 bytes @ 0x3B
  1076     005B                     	ds	4
  1077     005F                     ??_atof:
  1078     005F                     atof@s:	
  1079                           ; 1 bytes @ 0x3F
  1080                           
  1081                           
  1082                           ; 1 bytes @ 0x3F
  1083     005F                     	ds	1
  1084     0060                     ?_updateSpeed:
  1085     0060                     updateSpeed@v:	
  1086                           ; 1 bytes @ 0x40
  1087                           
  1088                           
  1089                           ; 1 bytes @ 0x40
  1090     0060                     	ds	1
  1091     0061                     updateSpeed@string:
  1092                           
  1093                           ; 1 bytes @ 0x41
  1094     0061                     	ds	1
  1095     0062                     ??_updateSpeed:
  1096                           
  1097                           ; 1 bytes @ 0x42
  1098     0062                     	ds	1
  1099     0063                     updateSpeed@temp:
  1100                           
  1101                           ; 4 bytes @ 0x43
  1102     0063                     	ds	4
  1103     0067                     updateSpeed@i:
  1104                           
  1105                           ; 2 bytes @ 0x47
  1106     0067                     	ds	2
  1107     0069                     updateSpeed@DRDY:
  1108                           
  1109                           ; 1 bytes @ 0x49
  1110     0069                     	ds	1
  1111                           
  1112                           	psect	maintext
  1113     00D5                     __pmaintext:	
  1114 ;;
  1115 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1116 ;;
  1117 ;; *************** function _main *****************
  1118 ;; Defined at:
  1119 ;;		line 43 in file "main.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  ledIntenP       4   12[BANK1 ] long 
  1124 ;;  ledIntenD       4    8[BANK1 ] long 
  1125 ;;  bzzTime         4   16[BANK1 ] long 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : B1F/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1136 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1137 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1138 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  1139 ;;Total ram usage:       20 bytes
  1140 ;; Hardware stack levels required when called: 7
  1141 ;; This function calls:
  1142 ;;		_UARTinit
  1143 ;;		_UARTsendString
  1144 ;;		___flge
  1145 ;;		_beginSecuence
  1146 ;;		_map
  1147 ;;		_prom_us
  1148 ;;		_updateSpeed
  1149 ;;		_us_to_cm
  1150 ;; This function is called by:
  1151 ;;		Startup code after reset
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     00D5                     _main:	
  1156                           ;psect for function _main
  1157                           
  1158     00D5                     l3638:	
  1159                           ;incstack = 0
  1160                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1161                           
  1162                           
  1163                           ;main.c: 44:     OSCCON = 0x6A;
  1164     00D5  306A               	movlw	106
  1165     00D6  0021               	movlb	1	; select bank1
  1166     00D7  0099               	movwf	25	;volatile
  1167     00D8                     l3640:
  1168                           
  1169                           ;main.c: 45:     TRISA = 0x00;
  1170     00D8  018C               	clrf	12	;volatile
  1171     00D9                     l3642:
  1172                           
  1173                           ;main.c: 46:     TRISB = 0xFF;
  1174     00D9  30FF               	movlw	255
  1175     00DA  008D               	movwf	13	;volatile
  1176                           
  1177                           ;main.c: 47:     TRISC = 0x00;
  1178     00DB  018E               	clrf	14	;volatile
  1179                           
  1180                           ;main.c: 48:     TRISD = 0x00;
  1181     00DC  018F               	clrf	15	;volatile
  1182                           
  1183                           ;main.c: 49:     ANSELA = 0x00;
  1184     00DD  0023               	movlb	3	; select bank3
  1185     00DE  018C               	clrf	12	;volatile
  1186                           
  1187                           ;main.c: 50:     ANSELB = 0x00;
  1188     00DF  018D               	clrf	13	;volatile
  1189                           
  1190                           ;main.c: 51:     ANSELC = 0x00;
  1191     00E0  018E               	clrf	14	;volatile
  1192                           
  1193                           ;main.c: 52:     ANSELD = 0x00;
  1194     00E1  018F               	clrf	15	;volatile
  1195                           
  1196                           ;main.c: 53:     PORTA = 0x00;
  1197     00E2  0020               	movlb	0	; select bank0
  1198     00E3  018C               	clrf	12	;volatile
  1199                           
  1200                           ;main.c: 54:     PORTB = 0x00;
  1201     00E4  018D               	clrf	13	;volatile
  1202                           
  1203                           ;main.c: 55:     PORTC = 0x00;
  1204     00E5  018E               	clrf	14	;volatile
  1205                           
  1206                           ;main.c: 56:     PORTD = 0x00;
  1207     00E6  018F               	clrf	15	;volatile
  1208     00E7                     l3644:
  1209                           
  1210                           ;main.c: 58:     INTCON = 0xE8;
  1211     00E7  30E8               	movlw	232
  1212     00E8  008B               	movwf	11	;volatile
  1213     00E9                     l3646:
  1214                           
  1215                           ;main.c: 59:     PIE1 = 0x22;
  1216     00E9  3022               	movlw	34
  1217     00EA  0021               	movlb	1	; select bank1
  1218     00EB  0091               	movwf	17	;volatile
  1219     00EC                     l3648:
  1220                           
  1221                           ;main.c: 60:     IOCBN = 0b11111111;
  1222     00EC  30FF               	movlw	255
  1223     00ED  0027               	movlb	7	; select bank7
  1224     00EE  0095               	movwf	21	;volatile
  1225     00EF                     l3650:
  1226                           
  1227                           ;main.c: 62:     OPTION_REG = 0xC6;
  1228     00EF  30C6               	movlw	198
  1229     00F0  0021               	movlb	1	; select bank1
  1230     00F1  0095               	movwf	21	;volatile
  1231     00F2                     l3652:
  1232                           
  1233                           ;main.c: 63:     T1CON = 0x01;
  1234     00F2  3001               	movlw	1
  1235     00F3  0020               	movlb	0	; select bank0
  1236     00F4  0098               	movwf	24	;volatile
  1237     00F5                     l3654:
  1238                           
  1239                           ;main.c: 64:     T1GCON = 0xE1;
  1240     00F5  30E1               	movlw	225
  1241     00F6  0099               	movwf	25	;volatile
  1242     00F7                     l3656:
  1243                           
  1244                           ;main.c: 66:     T2CON = 0x3C;
  1245     00F7  303C               	movlw	60
  1246     00F8  009C               	movwf	28	;volatile
  1247     00F9                     l3658:
  1248                           
  1249                           ;main.c: 67:     PR2 = 125;
  1250     00F9  307D               	movlw	125
  1251     00FA  009B               	movwf	27	;volatile
  1252     00FB                     l3660:
  1253                           
  1254                           ;main.c: 69:     UARTinit(9600, 1);
  1255     00FB  3000               	movlw	0
  1256     00FC  00BE               	movwf	UARTinit@baud_rate+3
  1257     00FD  3000               	movlw	0
  1258     00FE  00BD               	movwf	UARTinit@baud_rate+2
  1259     00FF  3025               	movlw	37
  1260     0100  00BC               	movwf	UARTinit@baud_rate+1
  1261     0101  3080               	movlw	128
  1262     0102  00BB               	movwf	UARTinit@baud_rate
  1263     0103  01BF               	clrf	UARTinit@BRGH
  1264     0104  0ABF               	incf	UARTinit@BRGH,f
  1265     0105  3196  2682  3180   	fcall	_UARTinit
  1266     0108                     l3662:
  1267                           
  1268                           ;main.c: 70:     UARTsendString("PIC INIT OK!\n\r", 24);
  1269     0108  3000               	movlw	low (STR_1| (0+32768))
  1270     0109  0020               	movlb	0	; select bank0
  1271     010A  00A0               	movwf	UARTsendString@str
  1272     010B  3098               	movlw	high (STR_1| (0+32768))
  1273     010C  00A1               	movwf	UARTsendString@str+1
  1274     010D  3018               	movlw	24
  1275     010E  00A2               	movwf	UARTsendString@max_length
  1276     010F  3194  243A  3180   	fcall	_UARTsendString
  1277     0112                     l3664:
  1278                           
  1279                           ;main.c: 71:     beginSecuence();
  1280     0112  3194  24D6  3180   	fcall	_beginSecuence
  1281     0115                     l3666:
  1282                           
  1283                           ;main.c: 74:         updateSpeed(&GPSRDY, &speed, NMEASentence);
  1284     0115  30C0               	movlw	(low (_speed| 0))& (0+255)
  1285     0116  0020               	movlb	0	; select bank0
  1286     0117  00E0               	movwf	updateSpeed@v
  1287     0118  3020               	movlw	(low (_NMEASentence| (0+256)))& (0+255)
  1288     0119  00E1               	movwf	updateSpeed@string
  1289     011A  30C4               	movlw	(low (_GPSRDY| 0))& (0+255)
  1290     011B  3188  2016  3180   	fcall	_updateSpeed
  1291     011E                     l3668:
  1292                           
  1293                           ;main.c: 76:         if (speed <= 10){
  1294     011E  3041               	movlw	65
  1295     011F  0020               	movlb	0	; select bank0
  1296     0120  00A3               	movwf	___flge@ff1+3
  1297     0121  3020               	movlw	32
  1298     0122  00A2               	movwf	___flge@ff1+2
  1299     0123  3000               	movlw	0
  1300     0124  00A1               	movwf	___flge@ff1+1
  1301     0125  3000               	movlw	0
  1302     0126  00A0               	movwf	___flge@ff1
  1303     0127  0021               	movlb	1	; select bank1
  1304     0128  0843               	movf	(_speed+3)^(0+128),w
  1305     0129  0020               	movlb	0	; select bank0
  1306     012A  00A7               	movwf	___flge@ff2+3
  1307     012B  0021               	movlb	1	; select bank1
  1308     012C  0842               	movf	(_speed+2)^(0+128),w
  1309     012D  0020               	movlb	0	; select bank0
  1310     012E  00A6               	movwf	___flge@ff2+2
  1311     012F  0021               	movlb	1	; select bank1
  1312     0130  0841               	movf	(_speed+1)^(0+128),w
  1313     0131  0020               	movlb	0	; select bank0
  1314     0132  00A5               	movwf	___flge@ff2+1
  1315     0133  0021               	movlb	1	; select bank1
  1316     0134  0840               	movf	_speed^(0+128),w
  1317     0135  0020               	movlb	0	; select bank0
  1318     0136  00A4               	movwf	___flge@ff2
  1319     0137  3196  26E5  3180   	fcall	___flge
  1320     013A  1C03               	btfss	3,0
  1321     013B  293D               	goto	u4961
  1322     013C  293E               	goto	u4960
  1323     013D                     u4961:
  1324     013D  29E2               	goto	l3684
  1325     013E                     u4960:
  1326     013E                     l3670:
  1327     013E                     l3672:
  1328                           
  1329                           ;main.c: 78:             bzzTime = map(prom_us(us_to_cm(us_us[0]-1000), us_to_cm(us_us[1
      +                          ])), 50, 200, 40, 1500);
  1330     013E  0021               	movlb	1	; select bank1
  1331     013F  0820               	movf	_us_us^(0+128),w
  1332     0140  3E18               	addlw	24
  1333     0141  0020               	movlb	0	; select bank0
  1334     0142  00A8               	movwf	us_to_cm@us
  1335     0143  30FC               	movlw	252
  1336     0144  0021               	movlb	1	; select bank1
  1337     0145  3D21               	addwfc	(_us_us+1)^(0+128),w
  1338     0146  0020               	movlb	0	; select bank0
  1339     0147  00A9               	movwf	us_to_cm@us+1
  1340     0148  3192  22FF  3180   	fcall	_us_to_cm
  1341     014B  0021               	movlb	1	; select bank1
  1342     014C  00C5               	movwf	??_main^(0+128)
  1343     014D  01C6               	clrf	(??_main^(0+128)+1)
  1344     014E  0845               	movf	??_main^(0+128),w
  1345     014F  0020               	movlb	0	; select bank0
  1346     0150  00AA               	movwf	prom_us@us1
  1347     0151  0021               	movlb	1	; select bank1
  1348     0152  0846               	movf	(??_main+1)^(0+128),w
  1349     0153  0020               	movlb	0	; select bank0
  1350     0154  00AB               	movwf	prom_us@us1+1
  1351     0155  0021               	movlb	1	; select bank1
  1352     0156  0823               	movf	((_us_us+1)^(0+128)+2),w
  1353     0157  0020               	movlb	0	; select bank0
  1354     0158  00A9               	movwf	us_to_cm@us+1
  1355     0159  0021               	movlb	1	; select bank1
  1356     015A  0822               	movf	(_us_us^(0+128)+2),w
  1357     015B  0020               	movlb	0	; select bank0
  1358     015C  00A8               	movwf	us_to_cm@us
  1359     015D  3192  22FF  3180   	fcall	_us_to_cm
  1360     0160  0021               	movlb	1	; select bank1
  1361     0161  00C7               	movwf	(??_main+2)^(0+128)
  1362     0162  01C8               	clrf	((??_main+2)^(0+128)+1)
  1363     0163  0847               	movf	(??_main+2)^(0+128),w
  1364     0164  0020               	movlb	0	; select bank0
  1365     0165  00AC               	movwf	prom_us@us2
  1366     0166  0021               	movlb	1	; select bank1
  1367     0167  0848               	movf	(??_main+3)^(0+128),w
  1368     0168  0020               	movlb	0	; select bank0
  1369     0169  00AD               	movwf	prom_us@us2+1
  1370     016A  3192  22E8  3180   	fcall	_prom_us
  1371     016D  0021               	movlb	1	; select bank1
  1372     016E  00C9               	movwf	(??_main+4)^(0+128)
  1373     016F  01CA               	clrf	((??_main+4)^(0+128)+1)
  1374     0170  01CB               	clrf	((??_main+4)^(0+128)+2)
  1375     0171  01CC               	clrf	((??_main+4)^(0+128)+3)
  1376     0172  084C               	movf	(??_main+7)^(0+128),w
  1377     0173  0020               	movlb	0	; select bank0
  1378     0174  00BE               	movwf	map@x+3
  1379     0175  0021               	movlb	1	; select bank1
  1380     0176  084B               	movf	(??_main+6)^(0+128),w
  1381     0177  0020               	movlb	0	; select bank0
  1382     0178  00BD               	movwf	map@x+2
  1383     0179  0021               	movlb	1	; select bank1
  1384     017A  084A               	movf	(??_main+5)^(0+128),w
  1385     017B  0020               	movlb	0	; select bank0
  1386     017C  00BC               	movwf	map@x+1
  1387     017D  0021               	movlb	1	; select bank1
  1388     017E  0849               	movf	(??_main+4)^(0+128),w
  1389     017F  0020               	movlb	0	; select bank0
  1390     0180  00BB               	movwf	map@x
  1391     0181  3000               	movlw	0
  1392     0182  00C2               	movwf	map@in_min+3
  1393     0183  3000               	movlw	0
  1394     0184  00C1               	movwf	map@in_min+2
  1395     0185  3000               	movlw	0
  1396     0186  00C0               	movwf	map@in_min+1
  1397     0187  3032               	movlw	50
  1398     0188  00BF               	movwf	map@in_min
  1399     0189  3000               	movlw	0
  1400     018A  00C6               	movwf	map@in_max+3
  1401     018B  3000               	movlw	0
  1402     018C  00C5               	movwf	map@in_max+2
  1403     018D  3000               	movlw	0
  1404     018E  00C4               	movwf	map@in_max+1
  1405     018F  30C8               	movlw	200
  1406     0190  00C3               	movwf	map@in_max
  1407     0191  3000               	movlw	0
  1408     0192  00CA               	movwf	map@out_min+3
  1409     0193  3000               	movlw	0
  1410     0194  00C9               	movwf	map@out_min+2
  1411     0195  3000               	movlw	0
  1412     0196  00C8               	movwf	map@out_min+1
  1413     0197  3028               	movlw	40
  1414     0198  00C7               	movwf	map@out_min
  1415     0199  3000               	movlw	0
  1416     019A  00CE               	movwf	map@out_max+3
  1417     019B  3000               	movlw	0
  1418     019C  00CD               	movwf	map@out_max+2
  1419     019D  3005               	movlw	5
  1420     019E  00CC               	movwf	map@out_max+1
  1421     019F  30DC               	movlw	220
  1422     01A0  00CB               	movwf	map@out_max
  1423     01A1  3196  2620  3180   	fcall	_map
  1424     01A4  0020               	movlb	0	; select bank0
  1425     01A5  083E               	movf	?_map+3,w
  1426     01A6  0021               	movlb	1	; select bank1
  1427     01A7  00D8               	movwf	(main@bzzTime+3)^(0+128)
  1428     01A8  0020               	movlb	0	; select bank0
  1429     01A9  083D               	movf	?_map+2,w
  1430     01AA  0021               	movlb	1	; select bank1
  1431     01AB  00D7               	movwf	(main@bzzTime+2)^(0+128)
  1432     01AC  0020               	movlb	0	; select bank0
  1433     01AD  083C               	movf	?_map+1,w
  1434     01AE  0021               	movlb	1	; select bank1
  1435     01AF  00D6               	movwf	(main@bzzTime+1)^(0+128)
  1436     01B0  0020               	movlb	0	; select bank0
  1437     01B1  083B               	movf	?_map,w
  1438     01B2  0021               	movlb	1	; select bank1
  1439     01B3  00D5               	movwf	main@bzzTime^(0+128)
  1440     01B4                     l3674:
  1441                           
  1442                           ;main.c: 79:             if ((millis - prevMillis) >= bzzTime){
  1443     01B4  0838               	movf	_prevMillis^(0+128),w
  1444     01B5  023C               	subwf	_millis^(0+128),w
  1445     01B6  00C5               	movwf	??_main^(0+128)
  1446     01B7  0839               	movf	(_prevMillis+1)^(0+128),w
  1447     01B8  3B3D               	subwfb	(_millis+1)^(0+128),w
  1448     01B9  00C6               	movwf	(??_main^(0+128)+1)
  1449     01BA  083A               	movf	(_prevMillis+2)^(0+128),w
  1450     01BB  3B3E               	subwfb	(_millis+2)^(0+128),w
  1451     01BC  00C7               	movwf	(??_main^(0+128)+2)
  1452     01BD  083B               	movf	(_prevMillis+3)^(0+128),w
  1453     01BE  3B3F               	subwfb	(_millis+3)^(0+128),w
  1454     01BF  00C8               	movwf	(??_main^(0+128)+3)
  1455     01C0  0858               	movf	(main@bzzTime+3)^(0+128),w
  1456     01C1  0248               	subwf	(??_main+3)^(0+128),w
  1457     01C2  1D03               	skipz
  1458     01C3  29CE               	goto	u4975
  1459     01C4  0857               	movf	(main@bzzTime+2)^(0+128),w
  1460     01C5  0247               	subwf	(??_main+2)^(0+128),w
  1461     01C6  1D03               	skipz
  1462     01C7  29CE               	goto	u4975
  1463     01C8  0856               	movf	(main@bzzTime+1)^(0+128),w
  1464     01C9  0246               	subwf	(??_main+1)^(0+128),w
  1465     01CA  1D03               	skipz
  1466     01CB  29CE               	goto	u4975
  1467     01CC  0855               	movf	main@bzzTime^(0+128),w
  1468     01CD  0245               	subwf	??_main^(0+128),w
  1469     01CE                     u4975:
  1470     01CE  1C03               	skipc
  1471     01CF  29D1               	goto	u4971
  1472     01D0  29D2               	goto	u4970
  1473     01D1                     u4971:
  1474     01D1  29DC               	goto	l3680
  1475     01D2                     u4970:
  1476     01D2                     l3676:
  1477                           
  1478                           ;main.c: 80:                 bzzEn = 1;
  1479     01D2  01FC               	clrf	_bzzEn
  1480     01D3  0AFC               	incf	_bzzEn,f
  1481     01D4                     l3678:
  1482                           
  1483                           ;main.c: 81:                 prevMillis = millis;
  1484     01D4  083F               	movf	(_millis+3)^(0+128),w
  1485     01D5  00BB               	movwf	(_prevMillis+3)^(0+128)
  1486     01D6  083E               	movf	(_millis+2)^(0+128),w
  1487     01D7  00BA               	movwf	(_prevMillis+2)^(0+128)
  1488     01D8  083D               	movf	(_millis+1)^(0+128),w
  1489     01D9  00B9               	movwf	(_prevMillis+1)^(0+128)
  1490     01DA  083C               	movf	_millis^(0+128),w
  1491     01DB  00B8               	movwf	_prevMillis^(0+128)
  1492     01DC                     l3680:
  1493                           
  1494                           ;main.c: 83:             if (bzzTime < 0){
  1495     01DC  1FD8               	btfss	(main@bzzTime+3)^(0+128),7
  1496     01DD  29DF               	goto	u4981
  1497     01DE  29E0               	goto	u4980
  1498     01DF                     u4981:
  1499     01DF  29E2               	goto	l3684
  1500     01E0                     u4980:
  1501     01E0                     l3682:
  1502                           
  1503                           ;main.c: 84:                 PORTCbits.RC1 = 1;
  1504     01E0  0020               	movlb	0	; select bank0
  1505     01E1  148E               	bsf	14,1	;volatile
  1506     01E2                     l3684:
  1507                           
  1508                           ;main.c: 89:         if (speed >= 50){
  1509     01E2  0021               	movlb	1	; select bank1
  1510     01E3  0843               	movf	(_speed+3)^(0+128),w
  1511     01E4  0020               	movlb	0	; select bank0
  1512     01E5  00A3               	movwf	___flge@ff1+3
  1513     01E6  0021               	movlb	1	; select bank1
  1514     01E7  0842               	movf	(_speed+2)^(0+128),w
  1515     01E8  0020               	movlb	0	; select bank0
  1516     01E9  00A2               	movwf	___flge@ff1+2
  1517     01EA  0021               	movlb	1	; select bank1
  1518     01EB  0841               	movf	(_speed+1)^(0+128),w
  1519     01EC  0020               	movlb	0	; select bank0
  1520     01ED  00A1               	movwf	___flge@ff1+1
  1521     01EE  0021               	movlb	1	; select bank1
  1522     01EF  0840               	movf	_speed^(0+128),w
  1523     01F0  0020               	movlb	0	; select bank0
  1524     01F1  00A0               	movwf	___flge@ff1
  1525     01F2  3042               	movlw	66
  1526     01F3  00A7               	movwf	___flge@ff2+3
  1527     01F4  3048               	movlw	72
  1528     01F5  00A6               	movwf	___flge@ff2+2
  1529     01F6  3000               	movlw	0
  1530     01F7  00A5               	movwf	___flge@ff2+1
  1531     01F8  3000               	movlw	0
  1532     01F9  00A4               	movwf	___flge@ff2
  1533     01FA  3196  26E5  3180   	fcall	___flge
  1534     01FD  1C03               	btfss	3,0
  1535     01FE  2A00               	goto	u4991
  1536     01FF  2A01               	goto	u4990
  1537     0200                     u4991:
  1538     0200  2A32               	goto	l99
  1539     0201                     u4990:
  1540     0201                     l3686:
  1541                           
  1542                           ;main.c: 91:             if (us_to_cm(us_us[2]) <= 175){
  1543     0201  0021               	movlb	1	; select bank1
  1544     0202  0825               	movf	((_us_us+1)^(0+128)+4),w
  1545     0203  0020               	movlb	0	; select bank0
  1546     0204  00A9               	movwf	us_to_cm@us+1
  1547     0205  0021               	movlb	1	; select bank1
  1548     0206  0824               	movf	(_us_us^(0+128)+4),w
  1549     0207  0020               	movlb	0	; select bank0
  1550     0208  00A8               	movwf	us_to_cm@us
  1551     0209  3192  22FF  3180   	fcall	_us_to_cm
  1552     020C  0021               	movlb	1	; select bank1
  1553     020D  00C5               	movwf	??_main^(0+128)
  1554     020E  30B0               	movlw	176
  1555     020F  0245               	subwf	??_main^(0+128),w
  1556     0210  1803               	skipnc
  1557     0211  2A13               	goto	u5001
  1558     0212  2A14               	goto	u5000
  1559     0213                     u5001:
  1560     0213  2A17               	goto	l100
  1561     0214                     u5000:
  1562     0214                     l3688:
  1563                           
  1564                           ;main.c: 92:                 PORTAbits.RA6 = 1;
  1565     0214  0020               	movlb	0	; select bank0
  1566     0215  170C               	bsf	12,6	;volatile
  1567                           
  1568                           ;main.c: 93:             } else {
  1569     0216  2A19               	goto	l3690
  1570     0217                     l100:
  1571                           
  1572                           ;main.c: 94:                 PORTAbits.RA6 = 0;
  1573     0217  0020               	movlb	0	; select bank0
  1574     0218  130C               	bcf	12,6	;volatile
  1575     0219                     l3690:
  1576                           
  1577                           ;main.c: 97:             if (us_to_cm(us_us[3]) <= 175){
  1578     0219  0021               	movlb	1	; select bank1
  1579     021A  0827               	movf	((_us_us+1)^(0+128)+6),w
  1580     021B  0020               	movlb	0	; select bank0
  1581     021C  00A9               	movwf	us_to_cm@us+1
  1582     021D  0021               	movlb	1	; select bank1
  1583     021E  0826               	movf	(_us_us^(0+128)+6),w
  1584     021F  0020               	movlb	0	; select bank0
  1585     0220  00A8               	movwf	us_to_cm@us
  1586     0221  3192  22FF  3180   	fcall	_us_to_cm
  1587     0224  0021               	movlb	1	; select bank1
  1588     0225  00C5               	movwf	??_main^(0+128)
  1589     0226  30B0               	movlw	176
  1590     0227  0245               	subwf	??_main^(0+128),w
  1591     0228  1803               	skipnc
  1592     0229  2A2B               	goto	u5011
  1593     022A  2A2C               	goto	u5010
  1594     022B                     u5011:
  1595     022B  2A2F               	goto	l102
  1596     022C                     u5010:
  1597     022C                     l3692:
  1598                           
  1599                           ;main.c: 98:                 PORTAbits.RA7 = 1;
  1600     022C  0020               	movlb	0	; select bank0
  1601     022D  178C               	bsf	12,7	;volatile
  1602                           
  1603                           ;main.c: 99:             } else {
  1604     022E  2A35               	goto	l3694
  1605     022F                     l102:
  1606                           
  1607                           ;main.c: 100:                 PORTAbits.RA7 = 0;
  1608     022F  0020               	movlb	0	; select bank0
  1609     0230  138C               	bcf	12,7	;volatile
  1610     0231  2A35               	goto	l3694
  1611     0232                     l99:
  1612                           
  1613                           ;main.c: 103:             PORTAbits.RA7 = 0;
  1614     0232  0020               	movlb	0	; select bank0
  1615     0233  138C               	bcf	12,7	;volatile
  1616                           
  1617                           ;main.c: 104:             PORTAbits.RA6 = 0;
  1618     0234  130C               	bcf	12,6	;volatile
  1619     0235                     l3694:
  1620                           
  1621                           ;main.c: 108:         if (speed <= 50){
  1622     0235  3042               	movlw	66
  1623     0236  00A3               	movwf	___flge@ff1+3
  1624     0237  3048               	movlw	72
  1625     0238  00A2               	movwf	___flge@ff1+2
  1626     0239  3000               	movlw	0
  1627     023A  00A1               	movwf	___flge@ff1+1
  1628     023B  3000               	movlw	0
  1629     023C  00A0               	movwf	___flge@ff1
  1630     023D  0021               	movlb	1	; select bank1
  1631     023E  0843               	movf	(_speed+3)^(0+128),w
  1632     023F  0020               	movlb	0	; select bank0
  1633     0240  00A7               	movwf	___flge@ff2+3
  1634     0241  0021               	movlb	1	; select bank1
  1635     0242  0842               	movf	(_speed+2)^(0+128),w
  1636     0243  0020               	movlb	0	; select bank0
  1637     0244  00A6               	movwf	___flge@ff2+2
  1638     0245  0021               	movlb	1	; select bank1
  1639     0246  0841               	movf	(_speed+1)^(0+128),w
  1640     0247  0020               	movlb	0	; select bank0
  1641     0248  00A5               	movwf	___flge@ff2+1
  1642     0249  0021               	movlb	1	; select bank1
  1643     024A  0840               	movf	_speed^(0+128),w
  1644     024B  0020               	movlb	0	; select bank0
  1645     024C  00A4               	movwf	___flge@ff2
  1646     024D  3196  26E5  3180   	fcall	___flge
  1647     0250  1C03               	btfss	3,0
  1648     0251  2A53               	goto	u5021
  1649     0252  2A54               	goto	u5020
  1650     0253                     u5021:
  1651     0253  2B5D               	goto	l105
  1652     0254                     u5020:
  1653     0254                     l3696:
  1654     0254  3000               	movlw	0
  1655     0255  0021               	movlb	1	; select bank1
  1656     0256  00D4               	movwf	(main@ledIntenP+3)^(0+128)
  1657     0257  3000               	movlw	0
  1658     0258  00D3               	movwf	(main@ledIntenP+2)^(0+128)
  1659     0259  3000               	movlw	0
  1660     025A  00D2               	movwf	(main@ledIntenP+1)^(0+128)
  1661     025B  3000               	movlw	0
  1662     025C  00D1               	movwf	main@ledIntenP^(0+128)
  1663     025D                     l3698:
  1664                           
  1665                           ;main.c: 110:             ledIntenD = map(us_to_cm(us_us[4]), 50, 150, 0, 2);
  1666     025D  0829               	movf	((_us_us+1)^(0+128)+8),w
  1667     025E  0020               	movlb	0	; select bank0
  1668     025F  00A9               	movwf	us_to_cm@us+1
  1669     0260  0021               	movlb	1	; select bank1
  1670     0261  0828               	movf	(_us_us^(0+128)+8),w
  1671     0262  0020               	movlb	0	; select bank0
  1672     0263  00A8               	movwf	us_to_cm@us
  1673     0264  3192  22FF  3180   	fcall	_us_to_cm
  1674     0267  0021               	movlb	1	; select bank1
  1675     0268  00C5               	movwf	??_main^(0+128)
  1676     0269  01C6               	clrf	(??_main^(0+128)+1)
  1677     026A  01C7               	clrf	(??_main^(0+128)+2)
  1678     026B  01C8               	clrf	(??_main^(0+128)+3)
  1679     026C  0848               	movf	(??_main+3)^(0+128),w
  1680     026D  0020               	movlb	0	; select bank0
  1681     026E  00BE               	movwf	map@x+3
  1682     026F  0021               	movlb	1	; select bank1
  1683     0270  0847               	movf	(??_main+2)^(0+128),w
  1684     0271  0020               	movlb	0	; select bank0
  1685     0272  00BD               	movwf	map@x+2
  1686     0273  0021               	movlb	1	; select bank1
  1687     0274  0846               	movf	(??_main+1)^(0+128),w
  1688     0275  0020               	movlb	0	; select bank0
  1689     0276  00BC               	movwf	map@x+1
  1690     0277  0021               	movlb	1	; select bank1
  1691     0278  0845               	movf	??_main^(0+128),w
  1692     0279  0020               	movlb	0	; select bank0
  1693     027A  00BB               	movwf	map@x
  1694     027B  3000               	movlw	0
  1695     027C  00C2               	movwf	map@in_min+3
  1696     027D  3000               	movlw	0
  1697     027E  00C1               	movwf	map@in_min+2
  1698     027F  3000               	movlw	0
  1699     0280  00C0               	movwf	map@in_min+1
  1700     0281  3032               	movlw	50
  1701     0282  00BF               	movwf	map@in_min
  1702     0283  3000               	movlw	0
  1703     0284  00C6               	movwf	map@in_max+3
  1704     0285  3000               	movlw	0
  1705     0286  00C5               	movwf	map@in_max+2
  1706     0287  3000               	movlw	0
  1707     0288  00C4               	movwf	map@in_max+1
  1708     0289  3096               	movlw	150
  1709     028A  00C3               	movwf	map@in_max
  1710     028B  3000               	movlw	0
  1711     028C  00CA               	movwf	map@out_min+3
  1712     028D  3000               	movlw	0
  1713     028E  00C9               	movwf	map@out_min+2
  1714     028F  3000               	movlw	0
  1715     0290  00C8               	movwf	map@out_min+1
  1716     0291  3000               	movlw	0
  1717     0292  00C7               	movwf	map@out_min
  1718     0293  3000               	movlw	0
  1719     0294  00CE               	movwf	map@out_max+3
  1720     0295  3000               	movlw	0
  1721     0296  00CD               	movwf	map@out_max+2
  1722     0297  3000               	movlw	0
  1723     0298  00CC               	movwf	map@out_max+1
  1724     0299  3002               	movlw	2
  1725     029A  00CB               	movwf	map@out_max
  1726     029B  3196  2620  3180   	fcall	_map
  1727     029E  0020               	movlb	0	; select bank0
  1728     029F  083E               	movf	?_map+3,w
  1729     02A0  0021               	movlb	1	; select bank1
  1730     02A1  00D0               	movwf	(main@ledIntenD+3)^(0+128)
  1731     02A2  0020               	movlb	0	; select bank0
  1732     02A3  083D               	movf	?_map+2,w
  1733     02A4  0021               	movlb	1	; select bank1
  1734     02A5  00CF               	movwf	(main@ledIntenD+2)^(0+128)
  1735     02A6  0020               	movlb	0	; select bank0
  1736     02A7  083C               	movf	?_map+1,w
  1737     02A8  0021               	movlb	1	; select bank1
  1738     02A9  00CE               	movwf	(main@ledIntenD+1)^(0+128)
  1739     02AA  0020               	movlb	0	; select bank0
  1740     02AB  083B               	movf	?_map,w
  1741     02AC  0021               	movlb	1	; select bank1
  1742     02AD  00CD               	movwf	main@ledIntenD^(0+128)
  1743     02AE                     l3700:
  1744                           
  1745                           ;main.c: 111:             ledIntenP = map(us_to_cm(us_us[6]), 50, 150, 0, 2);
  1746     02AE  082D               	movf	((_us_us+1)^(0+128)+12),w
  1747     02AF  0020               	movlb	0	; select bank0
  1748     02B0  00A9               	movwf	us_to_cm@us+1
  1749     02B1  0021               	movlb	1	; select bank1
  1750     02B2  082C               	movf	(_us_us^(0+128)+12),w
  1751     02B3  0020               	movlb	0	; select bank0
  1752     02B4  00A8               	movwf	us_to_cm@us
  1753     02B5  3192  22FF  3180   	fcall	_us_to_cm
  1754     02B8  0021               	movlb	1	; select bank1
  1755     02B9  00C5               	movwf	??_main^(0+128)
  1756     02BA  01C6               	clrf	(??_main^(0+128)+1)
  1757     02BB  01C7               	clrf	(??_main^(0+128)+2)
  1758     02BC  01C8               	clrf	(??_main^(0+128)+3)
  1759     02BD  0848               	movf	(??_main+3)^(0+128),w
  1760     02BE  0020               	movlb	0	; select bank0
  1761     02BF  00BE               	movwf	map@x+3
  1762     02C0  0021               	movlb	1	; select bank1
  1763     02C1  0847               	movf	(??_main+2)^(0+128),w
  1764     02C2  0020               	movlb	0	; select bank0
  1765     02C3  00BD               	movwf	map@x+2
  1766     02C4  0021               	movlb	1	; select bank1
  1767     02C5  0846               	movf	(??_main+1)^(0+128),w
  1768     02C6  0020               	movlb	0	; select bank0
  1769     02C7  00BC               	movwf	map@x+1
  1770     02C8  0021               	movlb	1	; select bank1
  1771     02C9  0845               	movf	??_main^(0+128),w
  1772     02CA  0020               	movlb	0	; select bank0
  1773     02CB  00BB               	movwf	map@x
  1774     02CC  3000               	movlw	0
  1775     02CD  00C2               	movwf	map@in_min+3
  1776     02CE  3000               	movlw	0
  1777     02CF  00C1               	movwf	map@in_min+2
  1778     02D0  3000               	movlw	0
  1779     02D1  00C0               	movwf	map@in_min+1
  1780     02D2  3032               	movlw	50
  1781     02D3  00BF               	movwf	map@in_min
  1782     02D4  3000               	movlw	0
  1783     02D5  00C6               	movwf	map@in_max+3
  1784     02D6  3000               	movlw	0
  1785     02D7  00C5               	movwf	map@in_max+2
  1786     02D8  3000               	movlw	0
  1787     02D9  00C4               	movwf	map@in_max+1
  1788     02DA  3096               	movlw	150
  1789     02DB  00C3               	movwf	map@in_max
  1790     02DC  3000               	movlw	0
  1791     02DD  00CA               	movwf	map@out_min+3
  1792     02DE  3000               	movlw	0
  1793     02DF  00C9               	movwf	map@out_min+2
  1794     02E0  3000               	movlw	0
  1795     02E1  00C8               	movwf	map@out_min+1
  1796     02E2  3000               	movlw	0
  1797     02E3  00C7               	movwf	map@out_min
  1798     02E4  3000               	movlw	0
  1799     02E5  00CE               	movwf	map@out_max+3
  1800     02E6  3000               	movlw	0
  1801     02E7  00CD               	movwf	map@out_max+2
  1802     02E8  3000               	movlw	0
  1803     02E9  00CC               	movwf	map@out_max+1
  1804     02EA  3002               	movlw	2
  1805     02EB  00CB               	movwf	map@out_max
  1806     02EC  3196  2620  3180   	fcall	_map
  1807     02EF  0020               	movlb	0	; select bank0
  1808     02F0  083E               	movf	?_map+3,w
  1809     02F1  0021               	movlb	1	; select bank1
  1810     02F2  00D4               	movwf	(main@ledIntenP+3)^(0+128)
  1811     02F3  0020               	movlb	0	; select bank0
  1812     02F4  083D               	movf	?_map+2,w
  1813     02F5  0021               	movlb	1	; select bank1
  1814     02F6  00D3               	movwf	(main@ledIntenP+2)^(0+128)
  1815     02F7  0020               	movlb	0	; select bank0
  1816     02F8  083C               	movf	?_map+1,w
  1817     02F9  0021               	movlb	1	; select bank1
  1818     02FA  00D2               	movwf	(main@ledIntenP+1)^(0+128)
  1819     02FB  0020               	movlb	0	; select bank0
  1820     02FC  083B               	movf	?_map,w
  1821     02FD  0021               	movlb	1	; select bank1
  1822     02FE  00D1               	movwf	main@ledIntenP^(0+128)
  1823                           
  1824                           ;main.c: 112:             switch (ledIntenD){
  1825     02FF  2B14               	goto	l3704
  1826     0300                     l107:	
  1827                           ;main.c: 113:                 case 0:
  1828                           
  1829                           
  1830                           ;main.c: 114:                     PORTAbits.RA3 = 0;
  1831     0300  0020               	movlb	0	; select bank0
  1832     0301  118C               	bcf	12,3	;volatile
  1833                           
  1834                           ;main.c: 115:                     PORTAbits.RA5 = 1;
  1835     0302  168C               	bsf	12,5	;volatile
  1836                           
  1837                           ;main.c: 116:                     PORTAbits.RA4 = 0;
  1838     0303  120C               	bcf	12,4	;volatile
  1839                           
  1840                           ;main.c: 117:                     break;
  1841     0304  2B42               	goto	l3708
  1842     0305                     l109:	
  1843                           ;main.c: 118:                 case 1:
  1844                           
  1845                           
  1846                           ;main.c: 119:                     PORTAbits.RA3 = 1;
  1847     0305  0020               	movlb	0	; select bank0
  1848     0306  158C               	bsf	12,3	;volatile
  1849                           
  1850                           ;main.c: 120:                     PORTAbits.RA5 = 1;
  1851     0307  168C               	bsf	12,5	;volatile
  1852                           
  1853                           ;main.c: 121:                     PORTAbits.RA4 = 0;
  1854     0308  120C               	bcf	12,4	;volatile
  1855                           
  1856                           ;main.c: 122:                     break;
  1857     0309  2B42               	goto	l3708
  1858     030A                     l110:	
  1859                           ;main.c: 123:                 case 2:
  1860                           
  1861                           
  1862                           ;main.c: 124:                     PORTAbits.RA3 = 1;
  1863     030A  0020               	movlb	0	; select bank0
  1864     030B  158C               	bsf	12,3	;volatile
  1865                           
  1866                           ;main.c: 125:                     PORTAbits.RA5 = 0;
  1867     030C  128C               	bcf	12,5	;volatile
  1868                           
  1869                           ;main.c: 126:                     PORTAbits.RA4 = 0;
  1870     030D  120C               	bcf	12,4	;volatile
  1871                           
  1872                           ;main.c: 127:                     break;
  1873     030E  2B42               	goto	l3708
  1874     030F                     l111:	
  1875                           ;main.c: 128:                 default:
  1876                           
  1877                           
  1878                           ;main.c: 129:                     PORTAbits.RA3 = 1;
  1879     030F  0020               	movlb	0	; select bank0
  1880     0310  158C               	bsf	12,3	;volatile
  1881                           
  1882                           ;main.c: 130:                     PORTAbits.RA5 = 1;
  1883     0311  168C               	bsf	12,5	;volatile
  1884                           
  1885                           ;main.c: 131:                     PORTAbits.RA4 = 1;
  1886     0312  160C               	bsf	12,4	;volatile
  1887                           
  1888                           ;main.c: 132:                     break;
  1889     0313  2B42               	goto	l3708
  1890     0314                     l3704:
  1891                           
  1892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1893                           ; Switch size 1, requested type "simple"
  1894                           ; Number of cases is 1, Range of values is 0 to 0
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; simple_byte            4     3 (average)
  1898                           ; direct_byte            8     6 (fixed)
  1899                           ; jumptable            260     6 (fixed)
  1900                           ;	Chosen strategy is simple_byte
  1901     0314  0850               	movf	(main@ledIntenD+3)^(0+128),w
  1902     0315  3A00               	xorlw	0	; case 0
  1903     0316  1903               	skipnz
  1904     0317  2B29               	goto	l3996
  1905     0318  2B0F               	goto	l111
  1906     0319                     l3994:
  1907                           
  1908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1909                           ; Switch size 1, requested type "simple"
  1910                           ; Number of cases is 1, Range of values is 0 to 0
  1911                           ; switch strategies available:
  1912                           ; Name         Instructions Cycles
  1913                           ; simple_byte            4     3 (average)
  1914                           ; direct_byte            8     6 (fixed)
  1915                           ; jumptable            260     6 (fixed)
  1916                           ;	Chosen strategy is simple_byte
  1917     0319  084E               	movf	(main@ledIntenD+1)^(0+128),w
  1918     031A  3A00               	xorlw	0	; case 0
  1919     031B  1903               	skipnz
  1920     031C  2B1E               	goto	l3998
  1921     031D  2B0F               	goto	l111
  1922     031E                     l3998:
  1923                           
  1924                           ; Switch size 1, requested type "simple"
  1925                           ; Number of cases is 3, Range of values is 0 to 2
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte           10     6 (average)
  1929                           ; direct_byte           12     6 (fixed)
  1930                           ; jumptable            260     6 (fixed)
  1931                           ;	Chosen strategy is simple_byte
  1932     031E  084D               	movf	main@ledIntenD^(0+128),w
  1933     031F  3A00               	xorlw	0	; case 0
  1934     0320  1903               	skipnz
  1935     0321  2B00               	goto	l107
  1936     0322  3A01               	xorlw	1	; case 1
  1937     0323  1903               	skipnz
  1938     0324  2B05               	goto	l109
  1939     0325  3A03               	xorlw	3	; case 2
  1940     0326  1903               	skipnz
  1941     0327  2B0A               	goto	l110
  1942     0328  2B0F               	goto	l111
  1943     0329                     l3996:
  1944                           
  1945                           ; Switch size 1, requested type "simple"
  1946                           ; Number of cases is 1, Range of values is 0 to 0
  1947                           ; switch strategies available:
  1948                           ; Name         Instructions Cycles
  1949                           ; simple_byte            4     3 (average)
  1950                           ; direct_byte            8     6 (fixed)
  1951                           ; jumptable            260     6 (fixed)
  1952                           ;	Chosen strategy is simple_byte
  1953     0329  084F               	movf	(main@ledIntenD+2)^(0+128),w
  1954     032A  3A00               	xorlw	0	; case 0
  1955     032B  1903               	skipnz
  1956     032C  2B19               	goto	l3994
  1957     032D  2B0F               	goto	l111
  1958     032E                     l113:	
  1959                           ;main.c: 135:                 case 0:
  1960                           
  1961                           
  1962                           ;main.c: 136:                     PORTAbits.RA0 = 0;
  1963     032E  0020               	movlb	0	; select bank0
  1964     032F  100C               	bcf	12,0	;volatile
  1965                           
  1966                           ;main.c: 137:                     PORTAbits.RA2 = 1;
  1967     0330  150C               	bsf	12,2	;volatile
  1968                           
  1969                           ;main.c: 138:                     PORTAbits.RA1 = 0;
  1970     0331  108C               	bcf	12,1	;volatile
  1971                           
  1972                           ;main.c: 139:                     break;
  1973     0332  2915               	goto	l3666
  1974     0333                     l115:	
  1975                           ;main.c: 140:                 case 1:
  1976                           
  1977                           
  1978                           ;main.c: 141:                     PORTAbits.RA0 = 1;
  1979     0333  0020               	movlb	0	; select bank0
  1980     0334  140C               	bsf	12,0	;volatile
  1981                           
  1982                           ;main.c: 142:                     PORTAbits.RA2 = 1;
  1983     0335  150C               	bsf	12,2	;volatile
  1984                           
  1985                           ;main.c: 143:                     PORTAbits.RA1 = 0;
  1986     0336  108C               	bcf	12,1	;volatile
  1987                           
  1988                           ;main.c: 144:                     break;
  1989     0337  2915               	goto	l3666
  1990     0338                     l116:	
  1991                           ;main.c: 145:                 case 2:
  1992                           
  1993                           
  1994                           ;main.c: 146:                     PORTAbits.RA0 = 1;
  1995     0338  0020               	movlb	0	; select bank0
  1996     0339  140C               	bsf	12,0	;volatile
  1997                           
  1998                           ;main.c: 147:                     PORTAbits.RA2 = 0;
  1999     033A  110C               	bcf	12,2	;volatile
  2000                           
  2001                           ;main.c: 148:                     PORTAbits.RA1 = 0;
  2002     033B  108C               	bcf	12,1	;volatile
  2003                           
  2004                           ;main.c: 149:                     break;
  2005     033C  2915               	goto	l3666
  2006     033D                     l117:	
  2007                           ;main.c: 150:                 default:
  2008                           
  2009                           
  2010                           ;main.c: 151:                     PORTAbits.RA0 = 1;
  2011     033D  0020               	movlb	0	; select bank0
  2012     033E  140C               	bsf	12,0	;volatile
  2013                           
  2014                           ;main.c: 152:                     PORTAbits.RA2 = 1;
  2015     033F  150C               	bsf	12,2	;volatile
  2016                           
  2017                           ;main.c: 153:                     PORTAbits.RA1 = 1;
  2018     0340  148C               	bsf	12,1	;volatile
  2019                           
  2020                           ;main.c: 154:                     break;
  2021     0341  2915               	goto	l3666
  2022     0342                     l3708:
  2023                           
  2024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2025                           ; Switch size 1, requested type "simple"
  2026                           ; Number of cases is 1, Range of values is 0 to 0
  2027                           ; switch strategies available:
  2028                           ; Name         Instructions Cycles
  2029                           ; simple_byte            4     3 (average)
  2030                           ; direct_byte            8     6 (fixed)
  2031                           ; jumptable            260     6 (fixed)
  2032                           ;	Chosen strategy is simple_byte
  2033     0342  0021               	movlb	1	; select bank1
  2034     0343  0854               	movf	(main@ledIntenP+3)^(0+128),w
  2035     0344  3A00               	xorlw	0	; case 0
  2036     0345  1903               	skipnz
  2037     0346  2B58               	goto	l4002
  2038     0347  2B3D               	goto	l117
  2039     0348                     l4000:
  2040                           
  2041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2042                           ; Switch size 1, requested type "simple"
  2043                           ; Number of cases is 1, Range of values is 0 to 0
  2044                           ; switch strategies available:
  2045                           ; Name         Instructions Cycles
  2046                           ; simple_byte            4     3 (average)
  2047                           ; direct_byte            8     6 (fixed)
  2048                           ; jumptable            260     6 (fixed)
  2049                           ;	Chosen strategy is simple_byte
  2050     0348  0852               	movf	(main@ledIntenP+1)^(0+128),w
  2051     0349  3A00               	xorlw	0	; case 0
  2052     034A  1903               	skipnz
  2053     034B  2B4D               	goto	l4004
  2054     034C  2B3D               	goto	l117
  2055     034D                     l4004:
  2056                           
  2057                           ; Switch size 1, requested type "simple"
  2058                           ; Number of cases is 3, Range of values is 0 to 2
  2059                           ; switch strategies available:
  2060                           ; Name         Instructions Cycles
  2061                           ; simple_byte           10     6 (average)
  2062                           ; direct_byte           12     6 (fixed)
  2063                           ; jumptable            260     6 (fixed)
  2064                           ;	Chosen strategy is simple_byte
  2065     034D  0851               	movf	main@ledIntenP^(0+128),w
  2066     034E  3A00               	xorlw	0	; case 0
  2067     034F  1903               	skipnz
  2068     0350  2B2E               	goto	l113
  2069     0351  3A01               	xorlw	1	; case 1
  2070     0352  1903               	skipnz
  2071     0353  2B33               	goto	l115
  2072     0354  3A03               	xorlw	3	; case 2
  2073     0355  1903               	skipnz
  2074     0356  2B38               	goto	l116
  2075     0357  2B3D               	goto	l117
  2076     0358                     l4002:
  2077                           
  2078                           ; Switch size 1, requested type "simple"
  2079                           ; Number of cases is 1, Range of values is 0 to 0
  2080                           ; switch strategies available:
  2081                           ; Name         Instructions Cycles
  2082                           ; simple_byte            4     3 (average)
  2083                           ; direct_byte            8     6 (fixed)
  2084                           ; jumptable            260     6 (fixed)
  2085                           ;	Chosen strategy is simple_byte
  2086     0358  0853               	movf	(main@ledIntenP+2)^(0+128),w
  2087     0359  3A00               	xorlw	0	; case 0
  2088     035A  1903               	skipnz
  2089     035B  2B48               	goto	l4000
  2090     035C  2B3D               	goto	l117
  2091     035D                     l105:
  2092                           
  2093                           ;main.c: 157:             PORTAbits.RA0 = 1;
  2094     035D  0020               	movlb	0	; select bank0
  2095     035E  140C               	bsf	12,0	;volatile
  2096                           
  2097                           ;main.c: 158:             PORTAbits.RA2 = 1;
  2098     035F  150C               	bsf	12,2	;volatile
  2099                           
  2100                           ;main.c: 159:             PORTAbits.RA1 = 1;
  2101     0360  148C               	bsf	12,1	;volatile
  2102                           
  2103                           ;main.c: 160:             PORTAbits.RA3 = 1;
  2104     0361  158C               	bsf	12,3	;volatile
  2105                           
  2106                           ;main.c: 161:             PORTAbits.RA5 = 1;
  2107     0362  168C               	bsf	12,5	;volatile
  2108                           
  2109                           ;main.c: 162:             PORTAbits.RA4 = 1;
  2110     0363  160C               	bsf	12,4	;volatile
  2111     0364  2915               	goto	l3666
  2112     0365  3180  28B5         	ljmp	start
  2113     0367                     __end_of_main:
  2114                           
  2115                           	psect	text1
  2116     12FF                     __ptext1:	
  2117 ;; *************** function _us_to_cm *****************
  2118 ;; Defined at:
  2119 ;;		line 100 in file "lib.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  us              2    8[BANK0 ] unsigned int 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      unsigned char 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 3
  2140 ;; This function calls:
  2141 ;;		___lwdiv
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147     12FF                     _us_to_cm:	
  2148                           ;psect for function _us_to_cm
  2149                           
  2150     12FF                     l3588:	
  2151                           ;incstack = 0
  2152                           ; Regs used in _us_to_cm: [wreg+status,2+status,0+pclath+cstack]
  2153                           
  2154                           
  2155                           ;lib.c: 101:     return us/58;
  2156     12FF  303A               	movlw	58
  2157     1300  0020               	movlb	0	; select bank0
  2158     1301  00A0               	movwf	___lwdiv@divisor
  2159     1302  3000               	movlw	0
  2160     1303  00A1               	movwf	___lwdiv@divisor+1
  2161     1304  0829               	movf	us_to_cm@us+1,w
  2162     1305  00A3               	movwf	___lwdiv@dividend+1
  2163     1306  0828               	movf	us_to_cm@us,w
  2164     1307  00A2               	movwf	___lwdiv@dividend
  2165     1308  3195  254E  3192   	fcall	___lwdiv
  2166     130B  0020               	movlb	0	; select bank0
  2167     130C  0820               	movf	?___lwdiv,w
  2168     130D                     l204:
  2169     130D  0008               	return
  2170     130E                     __end_of_us_to_cm:
  2171                           
  2172                           	psect	text2
  2173     154E                     __ptext2:	
  2174 ;; *************** function ___lwdiv *****************
  2175 ;; Defined at:
  2176 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  divisor         2    0[BANK0 ] unsigned int 
  2179 ;;  dividend        2    2[BANK0 ] unsigned int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  quotient        2    5[BANK0 ] unsigned int 
  2182 ;;  counter         1    7[BANK0 ] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2    0[BANK0 ] unsigned int 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2192 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2195 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2196 ;;Total ram usage:        8 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 2
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_us_to_cm
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206     154E                     ___lwdiv:	
  2207                           ;psect for function ___lwdiv
  2208                           
  2209     154E                     l3476:	
  2210                           ;incstack = 0
  2211                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2212                           
  2213     154E  0020               	movlb	0	; select bank0
  2214     154F  01A5               	clrf	___lwdiv@quotient
  2215     1550  01A6               	clrf	___lwdiv@quotient+1
  2216     1551                     l3478:
  2217     1551  0820               	movf	___lwdiv@divisor,w
  2218     1552  0421               	iorwf	___lwdiv@divisor+1,w
  2219     1553  1903               	btfsc	3,2
  2220     1554  2D56               	goto	u4721
  2221     1555  2D57               	goto	u4720
  2222     1556                     u4721:
  2223     1556  2D86               	goto	l3498
  2224     1557                     u4720:
  2225     1557                     l3480:
  2226     1557  01A7               	clrf	___lwdiv@counter
  2227     1558  0AA7               	incf	___lwdiv@counter,f
  2228     1559  2D63               	goto	l3486
  2229     155A                     l3482:
  2230     155A  3001               	movlw	1
  2231     155B                     u4735:
  2232     155B  35A0               	lslf	___lwdiv@divisor,f
  2233     155C  0DA1               	rlf	___lwdiv@divisor+1,f
  2234     155D  0B89               	decfsz	9,f
  2235     155E  2D5B               	goto	u4735
  2236     155F                     l3484:
  2237     155F  3001               	movlw	1
  2238     1560  00A4               	movwf	??___lwdiv
  2239     1561  0824               	movf	??___lwdiv,w
  2240     1562  07A7               	addwf	___lwdiv@counter,f
  2241     1563                     l3486:
  2242     1563  1FA1               	btfss	___lwdiv@divisor+1,7
  2243     1564  2D66               	goto	u4741
  2244     1565  2D67               	goto	u4740
  2245     1566                     u4741:
  2246     1566  2D5A               	goto	l3482
  2247     1567                     u4740:
  2248     1567                     l3488:
  2249     1567  3001               	movlw	1
  2250     1568                     u4755:
  2251     1568  35A5               	lslf	___lwdiv@quotient,f
  2252     1569  0DA6               	rlf	___lwdiv@quotient+1,f
  2253     156A  0B89               	decfsz	9,f
  2254     156B  2D68               	goto	u4755
  2255     156C  0821               	movf	___lwdiv@divisor+1,w
  2256     156D  0223               	subwf	___lwdiv@dividend+1,w
  2257     156E  1D03               	skipz
  2258     156F  2D72               	goto	u4765
  2259     1570  0820               	movf	___lwdiv@divisor,w
  2260     1571  0222               	subwf	___lwdiv@dividend,w
  2261     1572                     u4765:
  2262     1572  1C03               	skipc
  2263     1573  2D75               	goto	u4761
  2264     1574  2D76               	goto	u4760
  2265     1575                     u4761:
  2266     1575  2D7B               	goto	l3494
  2267     1576                     u4760:
  2268     1576                     l3490:
  2269     1576  0820               	movf	___lwdiv@divisor,w
  2270     1577  02A2               	subwf	___lwdiv@dividend,f
  2271     1578  0821               	movf	___lwdiv@divisor+1,w
  2272     1579  3BA3               	subwfb	___lwdiv@dividend+1,f
  2273     157A                     l3492:
  2274     157A  1425               	bsf	___lwdiv@quotient,0
  2275     157B                     l3494:
  2276     157B  3001               	movlw	1
  2277     157C                     u4775:
  2278     157C  36A1               	lsrf	___lwdiv@divisor+1,f
  2279     157D  0CA0               	rrf	___lwdiv@divisor,f
  2280     157E  0B89               	decfsz	9,f
  2281     157F  2D7C               	goto	u4775
  2282     1580                     l3496:
  2283     1580  3001               	movlw	1
  2284     1581  02A7               	subwf	___lwdiv@counter,f
  2285     1582  1D03               	btfss	3,2
  2286     1583  2D85               	goto	u4781
  2287     1584  2D86               	goto	u4780
  2288     1585                     u4781:
  2289     1585  2D67               	goto	l3488
  2290     1586                     u4780:
  2291     1586                     l3498:
  2292     1586  0826               	movf	___lwdiv@quotient+1,w
  2293     1587  00A1               	movwf	?___lwdiv+1
  2294     1588  0825               	movf	___lwdiv@quotient,w
  2295     1589  00A0               	movwf	?___lwdiv
  2296     158A                     l581:
  2297     158A  0008               	return
  2298     158B                     __end_of___lwdiv:
  2299                           
  2300                           	psect	text3
  2301     0816                     __ptext3:	
  2302 ;; *************** function _updateSpeed *****************
  2303 ;; Defined at:
  2304 ;;		line 108 in file "lib.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  DRDY            1    wreg     PTR unsigned char 
  2307 ;;		 -> GPSRDY(1), 
  2308 ;;  v               1   64[BANK0 ] PTR float 
  2309 ;;		 -> speed(4), 
  2310 ;;  string          1   65[BANK0 ] PTR unsigned char 
  2311 ;;		 -> NMEASentence(50), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  DRDY            1   73[BANK0 ] PTR unsigned char 
  2314 ;;		 -> GPSRDY(1), 
  2315 ;;  i               2   71[BANK0 ] int 
  2316 ;;  temp            4   67[BANK0 ] float 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      unsigned char 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2326 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;Total ram usage:       10 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 6
  2333 ;; This function calls:
  2334 ;;		___fleq
  2335 ;;		_atof
  2336 ;;		_strtok_single
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342     0816                     _updateSpeed:	
  2343                           ;psect for function _updateSpeed
  2344                           
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _updateSpeed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2348                           ;updateSpeed@DRDY stored from wreg
  2349     0816  0020               	movlb	0	; select bank0
  2350     0817  00E9               	movwf	updateSpeed@DRDY
  2351     0818                     l3562:
  2352                           
  2353                           ;lib.c: 109:     float temp;;lib.c: 110:     if (*DRDY){
  2354     0818  0869               	movf	updateSpeed@DRDY,w
  2355     0819  0086               	movwf	6
  2356     081A  0187               	clrf	7
  2357     081B  0801               	movf	1,w
  2358     081C  1903               	btfsc	3,2
  2359     081D  281F               	goto	u4881
  2360     081E  2820               	goto	u4880
  2361     081F                     u4881:
  2362     081F  2883               	goto	l214
  2363     0820                     u4880:
  2364     0820                     l3564:
  2365                           
  2366                           ;lib.c: 111:         *DRDY = 0;
  2367     0820  0869               	movf	updateSpeed@DRDY,w
  2368     0821  0086               	movwf	6
  2369     0822  0187               	clrf	7
  2370     0823  0181               	clrf	1
  2371     0824                     l3566:
  2372                           
  2373                           ;lib.c: 112:         strtok_single(string+6, ",");
  2374     0824  302D               	movlw	low (STR_2| (0+32768))
  2375     0825  00B2               	movwf	strtok_single@delims
  2376     0826  3098               	movlw	high (STR_2| (0+32768))
  2377     0827  00B3               	movwf	strtok_single@delims+1
  2378     0828  0861               	movf	updateSpeed@string,w
  2379     0829  3E06               	addlw	6
  2380     082A  3195  2512  3188   	fcall	_strtok_single
  2381     082D                     l3568:
  2382                           
  2383                           ;lib.c: 113:         for (int i = 0; i < 6; i++){
  2384     082D  0020               	movlb	0	; select bank0
  2385     082E  01E7               	clrf	updateSpeed@i
  2386     082F  01E8               	clrf	updateSpeed@i+1
  2387     0830                     l3574:
  2388                           
  2389                           ;lib.c: 114:             strtok_single(((void*)0), ",");
  2390     0830  302D               	movlw	low (STR_2| (0+32768))
  2391     0831  0020               	movlb	0	; select bank0
  2392     0832  00B2               	movwf	strtok_single@delims
  2393     0833  3098               	movlw	high (STR_2| (0+32768))
  2394     0834  00B3               	movwf	strtok_single@delims+1
  2395     0835  3000               	movlw	0
  2396     0836  3195  2512  3188   	fcall	_strtok_single
  2397     0839                     l3576:
  2398                           
  2399                           ;lib.c: 115:         }
  2400     0839  3001               	movlw	1
  2401     083A  0020               	movlb	0	; select bank0
  2402     083B  07E7               	addwf	updateSpeed@i,f
  2403     083C  3000               	movlw	0
  2404     083D  3DE8               	addwfc	updateSpeed@i+1,f
  2405     083E                     l3578:
  2406     083E  0868               	movf	updateSpeed@i+1,w
  2407     083F  3A80               	xorlw	128
  2408     0840  00E2               	movwf	??_updateSpeed
  2409     0841  3080               	movlw	128
  2410     0842  0262               	subwf	??_updateSpeed,w
  2411     0843  1D03               	skipz
  2412     0844  2847               	goto	u4895
  2413     0845  3006               	movlw	6
  2414     0846  0267               	subwf	updateSpeed@i,w
  2415     0847                     u4895:
  2416     0847  1C03               	skipc
  2417     0848  284A               	goto	u4891
  2418     0849  284B               	goto	u4890
  2419     084A                     u4891:
  2420     084A  2830               	goto	l3574
  2421     084B                     u4890:
  2422     084B                     l3580:
  2423                           
  2424                           ;lib.c: 116:         temp = atof(strtok_single(((void*)0), ","));
  2425     084B  302D               	movlw	low (STR_2| (0+32768))
  2426     084C  0020               	movlb	0	; select bank0
  2427     084D  00B2               	movwf	strtok_single@delims
  2428     084E  3098               	movlw	high (STR_2| (0+32768))
  2429     084F  00B3               	movwf	strtok_single@delims+1
  2430     0850  3000               	movlw	0
  2431     0851  3195  2512  3188   	fcall	_strtok_single
  2432     0854  3193  230E  3188   	fcall	_atof
  2433     0857  0020               	movlb	0	; select bank0
  2434     0858  085E               	movf	?_atof+3,w
  2435     0859  00E6               	movwf	updateSpeed@temp+3
  2436     085A  085D               	movf	?_atof+2,w
  2437     085B  00E5               	movwf	updateSpeed@temp+2
  2438     085C  085C               	movf	?_atof+1,w
  2439     085D  00E4               	movwf	updateSpeed@temp+1
  2440     085E  085B               	movf	?_atof,w
  2441     085F  00E3               	movwf	updateSpeed@temp
  2442     0860                     l3582:
  2443                           
  2444                           ;lib.c: 117:         if (temp != 0){
  2445     0860  0866               	movf	updateSpeed@temp+3,w
  2446     0861  00A3               	movwf	___fleq@ff1+3
  2447     0862  0865               	movf	updateSpeed@temp+2,w
  2448     0863  00A2               	movwf	___fleq@ff1+2
  2449     0864  0864               	movf	updateSpeed@temp+1,w
  2450     0865  00A1               	movwf	___fleq@ff1+1
  2451     0866  0863               	movf	updateSpeed@temp,w
  2452     0867  00A0               	movwf	___fleq@ff1
  2453     0868  3000               	movlw	0
  2454     0869  00A7               	movwf	___fleq@ff2+3
  2455     086A  3000               	movlw	0
  2456     086B  00A6               	movwf	___fleq@ff2+2
  2457     086C  3000               	movlw	0
  2458     086D  00A5               	movwf	___fleq@ff2+1
  2459     086E  3000               	movlw	0
  2460     086F  00A4               	movwf	___fleq@ff2
  2461     0870  3195  25D1  3188   	fcall	___fleq
  2462     0873  1803               	btfsc	3,0
  2463     0874  2876               	goto	u4901
  2464     0875  2877               	goto	u4900
  2465     0876                     u4901:
  2466     0876  2883               	goto	l214
  2467     0877                     u4900:
  2468     0877                     l3584:
  2469                           
  2470                           ;lib.c: 118:             *v = temp;
  2471     0877  0020               	movlb	0	; select bank0
  2472     0878  0860               	movf	updateSpeed@v,w
  2473     0879  0086               	movwf	6
  2474     087A  0187               	clrf	7
  2475     087B  0863               	movf	updateSpeed@temp,w
  2476     087C  3FC0               	movwi [0]fsr1
  2477     087D  0864               	movf	updateSpeed@temp+1,w
  2478     087E  3FC1               	movwi [1]fsr1
  2479     087F  0865               	movf	updateSpeed@temp+2,w
  2480     0880  3FC2               	movwi [2]fsr1
  2481     0881  0866               	movf	updateSpeed@temp+3,w
  2482     0882  3FC3               	movwi [3]fsr1
  2483     0883                     l214:
  2484     0883  0008               	return
  2485     0884                     __end_of_updateSpeed:
  2486                           
  2487                           	psect	text4
  2488     1512                     __ptext4:	
  2489 ;; *************** function _strtok_single *****************
  2490 ;; Defined at:
  2491 ;;		line 13 in file "lib.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  str             1    wreg     PTR unsigned char 
  2494 ;;		 -> NULL(0), NMEASentence(50), 
  2495 ;;  delims          2   18[BANK0 ] PTR const unsigned char 
  2496 ;;		 -> STR_4(2), STR_3(2), STR_2(2), 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  str             1   23[BANK0 ] PTR unsigned char 
  2499 ;;		 -> NULL(0), NMEASentence(50), 
  2500 ;;  p               1   22[BANK0 ] PTR unsigned char 
  2501 ;;		 -> NULL(0), NMEASentence(50), 
  2502 ;;  ret             1   21[BANK0 ] PTR unsigned char 
  2503 ;;		 -> NULL(0), NMEASentence(50), 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      PTR unsigned char 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;Total ram usage:        6 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 5
  2520 ;; This function calls:
  2521 ;;		_strpbrk
  2522 ;; This function is called by:
  2523 ;;		_updateSpeed
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527     1512                     _strtok_single:	
  2528                           ;psect for function _strtok_single
  2529                           
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _strtok_single: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2533                           ;strtok_single@str stored from wreg
  2534     1512  0020               	movlb	0	; select bank0
  2535     1513  00B7               	movwf	strtok_single@str
  2536     1514                     l3402:
  2537                           
  2538                           ;lib.c: 14:     static char *src = ((void*)0);;lib.c: 15:     char *p, *ret = 0;
  2539     1514  01B5               	clrf	strtok_single@ret
  2540     1515                     l3404:
  2541                           
  2542                           ;lib.c: 17:     if (str != ((void*)0))
  2543     1515  0837               	movf	strtok_single@str,w
  2544     1516  1903               	btfsc	3,2
  2545     1517  2D19               	goto	u4581
  2546     1518  2D1A               	goto	u4580
  2547     1519                     u4581:
  2548     1519  2D1C               	goto	l3408
  2549     151A                     u4580:
  2550     151A                     l3406:
  2551                           
  2552                           ;lib.c: 18:         src = str;
  2553     151A  0837               	movf	strtok_single@str,w
  2554     151B  00EC               	movwf	strtok_single@src
  2555     151C                     l3408:
  2556                           
  2557                           ;lib.c: 20:     if (src == ((void*)0))
  2558     151C  086C               	movf	strtok_single@src,w
  2559     151D  1D03               	btfss	3,2
  2560     151E  2D20               	goto	u4591
  2561     151F  2D21               	goto	u4590
  2562     1520                     u4591:
  2563     1520  2D23               	goto	l3414
  2564     1521                     u4590:
  2565     1521                     l3410:
  2566                           
  2567                           ;lib.c: 21:         return ((void*)0);
  2568     1521  3000               	movlw	0
  2569     1522  2D4D               	goto	l172
  2570     1523                     l3414:
  2571                           
  2572                           ;lib.c: 23:     if ((p = strpbrk(src, delims)) != ((void*)0)) {
  2573     1523  0833               	movf	strtok_single@delims+1,w
  2574     1524  00AF               	movwf	strpbrk@b+1
  2575     1525  0832               	movf	strtok_single@delims,w
  2576     1526  00AE               	movwf	strpbrk@b
  2577     1527  086C               	movf	strtok_single@src,w
  2578     1528  3193  2369  3195   	fcall	_strpbrk
  2579     152B  0020               	movlb	0	; select bank0
  2580     152C  00B6               	movwf	strtok_single@p
  2581     152D  0836               	movf	strtok_single@p,w
  2582     152E  1903               	btfsc	3,2
  2583     152F  2D31               	goto	u4601
  2584     1530  2D32               	goto	u4600
  2585     1531                     u4601:
  2586     1531  2D40               	goto	l3422
  2587     1532                     u4600:
  2588     1532                     l3416:
  2589                           
  2590                           ;lib.c: 24:         *p = 0;
  2591     1532  0836               	movf	strtok_single@p,w
  2592     1533  0086               	movwf	6
  2593     1534  3001               	movlw	1	; select bank2/3
  2594     1535  0087               	movwf	7
  2595     1536  0181               	clrf	1
  2596     1537                     l3418:
  2597                           
  2598                           ;lib.c: 25:         ret = src;
  2599     1537  086C               	movf	strtok_single@src,w
  2600     1538  00B5               	movwf	strtok_single@ret
  2601     1539                     l3420:
  2602                           
  2603                           ;lib.c: 26:         src = ++p;
  2604     1539  3001               	movlw	1
  2605     153A  00B4               	movwf	??_strtok_single
  2606     153B  0834               	movf	??_strtok_single,w
  2607     153C  07B6               	addwf	strtok_single@p,f
  2608     153D  0836               	movf	strtok_single@p,w
  2609     153E  00EC               	movwf	strtok_single@src
  2610                           
  2611                           ;lib.c: 27:     } else if (*src) {
  2612     153F  2D4C               	goto	l3428
  2613     1540                     l3422:
  2614     1540  086C               	movf	strtok_single@src,w
  2615     1541  0086               	movwf	6
  2616     1542  3001               	movlw	1	; select bank2/3
  2617     1543  0087               	movwf	7
  2618     1544  0801               	movf	1,w
  2619     1545  1903               	btfsc	3,2
  2620     1546  2D48               	goto	u4611
  2621     1547  2D49               	goto	u4610
  2622     1548                     u4611:
  2623     1548  2D4C               	goto	l3428
  2624     1549                     u4610:
  2625     1549                     l3424:
  2626                           
  2627                           ;lib.c: 28:         ret = src;
  2628     1549  086C               	movf	strtok_single@src,w
  2629     154A  00B5               	movwf	strtok_single@ret
  2630     154B                     l3426:
  2631                           
  2632                           ;lib.c: 29:         src = ((void*)0);
  2633     154B  01EC               	clrf	strtok_single@src
  2634     154C                     l3428:
  2635                           
  2636                           ;lib.c: 32:     return ret;
  2637     154C  0835               	movf	strtok_single@ret,w
  2638     154D                     l172:
  2639     154D  0008               	return
  2640     154E                     __end_of_strtok_single:
  2641                           
  2642                           	psect	text5
  2643     1369                     __ptext5:	
  2644 ;; *************** function _strpbrk *****************
  2645 ;; Defined at:
  2646 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strpbrk.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  s               1    wreg     PTR const unsigned char 
  2649 ;;		 -> NULL(0), NMEASentence(50), 
  2650 ;;  b               2   14[BANK0 ] PTR const unsigned char 
  2651 ;;		 -> STR_4(2), STR_3(2), STR_2(2), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  s               1   17[BANK0 ] PTR const unsigned char 
  2654 ;;		 -> NULL(0), NMEASentence(50), 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      PTR unsigned char 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;Total ram usage:        4 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 4
  2671 ;; This function calls:
  2672 ;;		_strcspn
  2673 ;; This function is called by:
  2674 ;;		_strtok_single
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678     1369                     _strpbrk:	
  2679                           ;psect for function _strpbrk
  2680                           
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in _strpbrk: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2684                           ;strpbrk@s stored from wreg
  2685     1369  0020               	movlb	0	; select bank0
  2686     136A  00B1               	movwf	strpbrk@s
  2687     136B                     l2978:
  2688     136B  082F               	movf	strpbrk@b+1,w
  2689     136C  00A8               	movwf	strcspn@c+1
  2690     136D  082E               	movf	strpbrk@b,w
  2691     136E  00A7               	movwf	strcspn@c
  2692     136F  0831               	movf	strpbrk@s,w
  2693     1370  3194  24A2  3193   	fcall	_strcspn
  2694     1373  0020               	movlb	0	; select bank0
  2695     1374  0827               	movf	?_strcspn,w
  2696     1375  00B0               	movwf	??_strpbrk
  2697     1376  0830               	movf	??_strpbrk,w
  2698     1377  07B1               	addwf	strpbrk@s,f
  2699     1378                     l2980:
  2700     1378  0831               	movf	strpbrk@s,w
  2701     1379  0086               	movwf	6
  2702     137A  3001               	movlw	1	; select bank2/3
  2703     137B  0087               	movwf	7
  2704     137C  0801               	movf	1,w
  2705     137D  1D03               	btfss	3,2
  2706     137E  2B80               	goto	u3631
  2707     137F  2B81               	goto	u3630
  2708     1380                     u3631:
  2709     1380  2B83               	goto	l2984
  2710     1381                     u3630:
  2711     1381                     l2982:
  2712     1381  3000               	movlw	0
  2713     1382  2B84               	goto	l766
  2714     1383                     l2984:
  2715     1383  0831               	movf	strpbrk@s,w
  2716     1384                     l766:
  2717     1384  0008               	return
  2718     1385                     __end_of_strpbrk:
  2719                           
  2720                           	psect	text6
  2721     14A2                     __ptext6:	
  2722 ;; *************** function _strcspn *****************
  2723 ;; Defined at:
  2724 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcspn.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  s               1    wreg     PTR const unsigned char 
  2727 ;;		 -> NULL(0), NMEASentence(50), 
  2728 ;;  c               2    7[BANK0 ] PTR const unsigned char 
  2729 ;;		 -> STR_4(2), STR_3(2), STR_2(2), 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2732 ;;		 -> NULL(0), NMEASentence(50), 
  2733 ;;  i               2   11[BANK0 ] unsigned int 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  2    7[BANK0 ] unsigned int 
  2736 ;; Registers used:
  2737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2744 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;Total ram usage:        7 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 3
  2750 ;; This function calls:
  2751 ;;		_strchr
  2752 ;; This function is called by:
  2753 ;;		_strpbrk
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757     14A2                     _strcspn:	
  2758                           ;psect for function _strcspn
  2759                           
  2760                           
  2761                           ;incstack = 0
  2762                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2763                           ;strcspn@s stored from wreg
  2764     14A2  0020               	movlb	0	; select bank0
  2765     14A3  00AD               	movwf	strcspn@s
  2766     14A4                     l2924:
  2767     14A4  01AB               	clrf	strcspn@i
  2768     14A5  01AC               	clrf	strcspn@i+1
  2769     14A6  2CAF               	goto	l2928
  2770     14A7                     l2926:
  2771     14A7  3001               	movlw	1
  2772     14A8  00A9               	movwf	??_strcspn
  2773     14A9  0829               	movf	??_strcspn,w
  2774     14AA  07AD               	addwf	strcspn@s,f
  2775     14AB  3001               	movlw	1
  2776     14AC  07AB               	addwf	strcspn@i,f
  2777     14AD  3000               	movlw	0
  2778     14AE  3DAC               	addwfc	strcspn@i+1,f
  2779     14AF                     l2928:
  2780     14AF  082D               	movf	strcspn@s,w
  2781     14B0  0086               	movwf	6
  2782     14B1  3001               	movlw	1	; select bank2/3
  2783     14B2  0087               	movwf	7
  2784     14B3  0801               	movf	1,w
  2785     14B4  1903               	btfsc	3,2
  2786     14B5  2CB7               	goto	u3561
  2787     14B6  2CB8               	goto	u3560
  2788     14B7                     u3561:
  2789     14B7  2CD1               	goto	l2932
  2790     14B8                     u3560:
  2791     14B8                     l2930:
  2792     14B8  0828               	movf	strcspn@c+1,w
  2793     14B9  00A1               	movwf	strchr@s+1
  2794     14BA  0827               	movf	strcspn@c,w
  2795     14BB  00A0               	movwf	strchr@s
  2796     14BC  082D               	movf	strcspn@s,w
  2797     14BD  0086               	movwf	6
  2798     14BE  3001               	movlw	1	; select bank2/3
  2799     14BF  0087               	movwf	7
  2800     14C0  0801               	movf	1,w
  2801     14C1  00A9               	movwf	??_strcspn
  2802     14C2  01AA               	clrf	??_strcspn+1
  2803     14C3  0829               	movf	??_strcspn,w
  2804     14C4  00A2               	movwf	strchr@c
  2805     14C5  082A               	movf	??_strcspn+1,w
  2806     14C6  00A3               	movwf	strchr@c+1
  2807     14C7  3193  2385  3194   	fcall	_strchr
  2808     14CA  0020               	movlb	0	; select bank0
  2809     14CB  0820               	movf	?_strchr,w
  2810     14CC  0421               	iorwf	?_strchr+1,w
  2811     14CD  1903               	btfsc	3,2
  2812     14CE  2CD0               	goto	u3571
  2813     14CF  2CD1               	goto	u3570
  2814     14D0                     u3571:
  2815     14D0  2CA7               	goto	l2926
  2816     14D1                     u3570:
  2817     14D1                     l2932:
  2818     14D1  082C               	movf	strcspn@i+1,w
  2819     14D2  00A8               	movwf	?_strcspn+1
  2820     14D3  082B               	movf	strcspn@i,w
  2821     14D4  00A7               	movwf	?_strcspn
  2822     14D5                     l776:
  2823     14D5  0008               	return
  2824     14D6                     __end_of_strcspn:
  2825                           
  2826                           	psect	text7
  2827     1385                     __ptext7:	
  2828 ;; *************** function _strchr *****************
  2829 ;; Defined at:
  2830 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strchr.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2833 ;;		 -> STR_4(2), STR_3(2), STR_2(2), 
  2834 ;;  c               2    2[BANK0 ] int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    0[BANK0 ] PTR unsigned char 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;Total ram usage:        7 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 2
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_strcspn
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860     1385                     _strchr:	
  2861                           ;psect for function _strchr
  2862                           
  2863     1385                     l779:	
  2864                           ;incstack = 0
  2865                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  2866                           
  2867     1385                     l2514:
  2868     1385  0020               	movlb	0	; select bank0
  2869     1386  0820               	movf	strchr@s,w
  2870     1387  0084               	movwf	4
  2871     1388  0821               	movf	strchr@s+1,w
  2872     1389  0085               	movwf	5
  2873     138A  0800               	movf	0,w	;code access
  2874     138B  0622               	xorwf	strchr@c,w
  2875     138C  1D03               	skipz
  2876     138D  2B8F               	goto	u2641
  2877     138E  2B90               	goto	u2640
  2878     138F                     u2641:
  2879     138F  2B91               	goto	l2518
  2880     1390                     u2640:
  2881     1390                     l2516:
  2882     1390  2BA3               	goto	l781
  2883     1391                     l2518:
  2884     1391  0821               	movf	strchr@s+1,w
  2885     1392  00A5               	movwf	??_strchr+1
  2886     1393  0820               	movf	strchr@s,w
  2887     1394  00A4               	movwf	??_strchr
  2888     1395  0AA0               	incf	strchr@s,f
  2889     1396  1903               	skipnz
  2890     1397  0AA1               	incf	strchr@s+1,f
  2891     1398  0824               	movf	??_strchr,w
  2892     1399  0084               	movwf	4
  2893     139A  0825               	movf	??_strchr+1,w
  2894     139B  0085               	movwf	5
  2895     139C  0012               	moviw fsr0++
  2896     139D  1D03               	btfss	3,2
  2897     139E  2BA0               	goto	u2651
  2898     139F  2BA1               	goto	u2650
  2899     13A0                     u2651:
  2900     13A0  2B85               	goto	l779
  2901     13A1                     u2650:
  2902     13A1                     l2520:
  2903     13A1  01A0               	clrf	?_strchr
  2904     13A2  01A1               	clrf	?_strchr+1
  2905     13A3                     l781:
  2906     13A3  0008               	return
  2907     13A4                     __end_of_strchr:
  2908                           
  2909                           	psect	text8
  2910     130E                     __ptext8:	
  2911 ;; *************** function _atof *****************
  2912 ;; Defined at:
  2913 ;;		line 423 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtof.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  s               1    wreg     PTR const unsigned char 
  2916 ;;		 -> NULL(0), NMEASentence(50), 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  s               1   63[BANK0 ] PTR const unsigned char 
  2919 ;;		 -> NULL(0), NMEASentence(50), 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  4   59[BANK0 ] PTR const unsigned char 
  2922 ;; Registers used:
  2923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2929 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;Total ram usage:        5 bytes
  2934 ;; Hardware stack levels used: 1
  2935 ;; Hardware stack levels required when called: 5
  2936 ;; This function calls:
  2937 ;;		_strtof
  2938 ;; This function is called by:
  2939 ;;		_updateSpeed
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943     130E                     _atof:	
  2944                           ;psect for function _atof
  2945                           
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in _atof: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2949                           ;atof@s stored from wreg
  2950     130E  0020               	movlb	0	; select bank0
  2951     130F  00DF               	movwf	atof@s
  2952     1310                     l3432:
  2953     1310  01C3               	clrf	strtof@res
  2954     1311  085F               	movf	atof@s,w
  2955     1312  3188  2084  3193   	fcall	_strtof
  2956     1315  0020               	movlb	0	; select bank0
  2957     1316  0846               	movf	?_strtof+3,w
  2958     1317  00DE               	movwf	?_atof+3
  2959     1318  0845               	movf	?_strtof+2,w
  2960     1319  00DD               	movwf	?_atof+2
  2961     131A  0844               	movf	?_strtof+1,w
  2962     131B  00DC               	movwf	?_atof+1
  2963     131C  0843               	movf	?_strtof,w
  2964     131D  00DB               	movwf	?_atof
  2965     131E                     l952:
  2966     131E  0008               	return
  2967     131F                     __end_of_atof:
  2968                           
  2969                           	psect	text9
  2970     0884                     __ptext9:	
  2971 ;; *************** function _strtof *****************
  2972 ;; Defined at:
  2973 ;;		line 95 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtof.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  s               1    wreg     PTR const unsigned char 
  2976 ;;		 -> NULL(0), NMEASentence(50), 
  2977 ;;  res             1   35[BANK0 ] PTR PTR unsigned char 
  2978 ;;		 -> NULL(0), 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  s               1   58[BANK0 ] PTR const unsigned char 
  2981 ;;		 -> NULL(0), NMEASentence(50), 
  2982 ;;  _u              4   53[BANK0 ] struct .
  2983 ;;  eexp            2   51[BANK0 ] int 
  2984 ;;  expon           2   49[BANK0 ] int 
  2985 ;;  i               1   57[BANK0 ] unsigned char 
  2986 ;;  flags           1   48[BANK0 ] unsigned char 
  2987 ;;  digit           1   47[BANK0 ] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  4   35[BANK0 ] float 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;Total ram usage:       24 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 4
  3004 ;; This function calls:
  3005 ;;		___fldiv
  3006 ;;		___fleq
  3007 ;;		___flge
  3008 ;;		___flmul
  3009 ;;		___flneg
  3010 ;;		___lmul
  3011 ;;		___wmul
  3012 ;;		___xxtofl
  3013 ;;		_isdigit
  3014 ;;		_isspace
  3015 ;;		_isxdigit
  3016 ;;		_nanf
  3017 ;;		_toupper
  3018 ;; This function is called by:
  3019 ;;		_atof
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023     0884                     _strtof:	
  3024                           ;psect for function _strtof
  3025                           
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _strtof: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3029                           ;strtof@s stored from wreg
  3030     0884  0020               	movlb	0	; select bank0
  3031     0885  00DA               	movwf	strtof@s
  3032     0886                     l2988:
  3033     0886  0843               	movf	strtof@res,w
  3034     0887  1903               	btfsc	3,2
  3035     0888  288A               	goto	u3641
  3036     0889  288B               	goto	u3640
  3037     088A                     u3641:
  3038     088A  2895               	goto	l2996
  3039     088B                     u3640:
  3040     088B                     l2990:
  3041     088B  0843               	movf	strtof@res,w
  3042     088C  0086               	movwf	6
  3043     088D  0187               	clrf	7
  3044     088E  085A               	movf	strtof@s,w
  3045     088F  0081               	movwf	1
  3046     0890  2895               	goto	l2996
  3047     0891                     l2992:
  3048     0891  3001               	movlw	1
  3049     0892  00C7               	movwf	??_strtof
  3050     0893  0847               	movf	??_strtof,w
  3051     0894  07DA               	addwf	strtof@s,f
  3052     0895                     l2996:
  3053     0895  085A               	movf	strtof@s,w
  3054     0896  0086               	movwf	6
  3055     0897  3001               	movlw	1	; select bank2/3
  3056     0898  0087               	movwf	7
  3057     0899  3020               	movlw	32
  3058     089A  0601               	xorwf	1,w
  3059     089B  1903               	btfsc	3,2
  3060     089C  289E               	goto	u3651
  3061     089D  28A0               	goto	u3650
  3062     089E                     u3651:
  3063     089E  3001               	movlw	1
  3064     089F  28A1               	goto	u3660
  3065     08A0                     u3650:
  3066     08A0  3000               	movlw	0
  3067     08A1                     u3660:
  3068     08A1  00C7               	movwf	??_strtof
  3069     08A2  01C8               	clrf	??_strtof+1
  3070     08A3  0847               	movf	??_strtof,w
  3071     08A4  00D3               	movwf	strtof@eexp
  3072     08A5  0848               	movf	??_strtof+1,w
  3073     08A6  00D4               	movwf	strtof@eexp+1
  3074     08A7  0853               	movf	strtof@eexp,w
  3075     08A8  0454               	iorwf	strtof@eexp+1,w
  3076     08A9  1D03               	btfss	3,2
  3077     08AA  28AC               	goto	u3671
  3078     08AB  28AD               	goto	u3670
  3079     08AC                     u3671:
  3080     08AC  2891               	goto	l2992
  3081     08AD                     u3670:
  3082     08AD                     l2998:
  3083     08AD  085A               	movf	strtof@s,w
  3084     08AE  0086               	movwf	6
  3085     08AF  3001               	movlw	1	; select bank2/3
  3086     08B0  0087               	movwf	7
  3087     08B1  0801               	movf	1,w
  3088     08B2  00C7               	movwf	??_strtof
  3089     08B3  01C8               	clrf	??_strtof+1
  3090     08B4  0847               	movf	??_strtof,w
  3091     08B5  00D3               	movwf	strtof@eexp
  3092     08B6  0848               	movf	??_strtof+1,w
  3093     08B7  00D4               	movwf	strtof@eexp+1
  3094     08B8  0853               	movf	strtof@eexp,w
  3095     08B9  3EF7               	addlw	247
  3096     08BA  00C9               	movwf	??_strtof+2
  3097     08BB  30FF               	movlw	255
  3098     08BC  3D54               	addwfc	strtof@eexp+1,w
  3099     08BD  00CA               	movwf	??_strtof+3
  3100     08BE  3000               	movlw	0
  3101     08BF  024A               	subwf	??_strtof+3,w
  3102     08C0  3005               	movlw	5
  3103     08C1  1903               	skipnz
  3104     08C2  0249               	subwf	??_strtof+2,w
  3105     08C3  1C03               	skipc
  3106     08C4  28C6               	goto	u3681
  3107     08C5  28C7               	goto	u3680
  3108     08C6                     u3681:
  3109     08C6  2891               	goto	l2992
  3110     08C7                     u3680:
  3111     08C7                     l3000:
  3112     08C7  01D0               	clrf	strtof@flags
  3113     08C8                     l3002:
  3114     08C8  302D               	movlw	45
  3115     08C9  0653               	xorwf	strtof@eexp,w
  3116     08CA  0454               	iorwf	strtof@eexp+1,w
  3117     08CB  1D03               	btfss	3,2
  3118     08CC  28CE               	goto	u3691
  3119     08CD  28CF               	goto	u3690
  3120     08CE                     u3691:
  3121     08CE  28D6               	goto	l3008
  3122     08CF                     u3690:
  3123     08CF                     l3004:
  3124     08CF  01D0               	clrf	strtof@flags
  3125     08D0  0AD0               	incf	strtof@flags,f
  3126     08D1                     l3006:
  3127     08D1  3001               	movlw	1
  3128     08D2  00C7               	movwf	??_strtof
  3129     08D3  0847               	movf	??_strtof,w
  3130     08D4  07DA               	addwf	strtof@s,f
  3131     08D5  28DE               	goto	l3012
  3132     08D6                     l3008:
  3133     08D6  302B               	movlw	43
  3134     08D7  0653               	xorwf	strtof@eexp,w
  3135     08D8  0454               	iorwf	strtof@eexp+1,w
  3136     08D9  1D03               	btfss	3,2
  3137     08DA  28DC               	goto	u3701
  3138     08DB  28DD               	goto	u3700
  3139     08DC                     u3701:
  3140     08DC  28DE               	goto	l3012
  3141     08DD                     u3700:
  3142     08DD  28D1               	goto	l3006
  3143     08DE                     l3012:
  3144     08DE  01D9               	clrf	strtof@i
  3145     08DF  28E4               	goto	l3016
  3146     08E0                     l3014:
  3147     08E0  3001               	movlw	1
  3148     08E1  00C7               	movwf	??_strtof
  3149     08E2  0847               	movf	??_strtof,w
  3150     08E3  07D9               	addwf	strtof@i,f
  3151     08E4                     l3016:
  3152     08E4  0859               	movf	strtof@i,w
  3153     08E5  075A               	addwf	strtof@s,w
  3154     08E6  00C7               	movwf	??_strtof
  3155     08E7  0847               	movf	??_strtof,w
  3156     08E8  0086               	movwf	6
  3157     08E9  3001               	movlw	1	; select bank2/3
  3158     08EA  0087               	movwf	7
  3159     08EB  0801               	movf	1,w
  3160     08EC  1903               	btfsc	3,2
  3161     08ED  28EF               	goto	u3711
  3162     08EE  28F0               	goto	u3710
  3163     08EF                     u3711:
  3164     08EF  291C               	goto	l3022
  3165     08F0                     u3710:
  3166     08F0                     l3018:
  3167     08F0  0859               	movf	strtof@i,w
  3168     08F1  3E18               	addlw	low (STR_5| (0+32768))
  3169     08F2  0084               	movwf	4
  3170     08F3  3098               	movlw	high (STR_5| (0+32768))
  3171     08F4  1803               	skipnc
  3172     08F5  3E01               	addlw	1
  3173     08F6  0085               	movwf	5
  3174     08F7  0800               	movf	0,w	;code access
  3175     08F8  00C7               	movwf	??_strtof
  3176     08F9  0859               	movf	strtof@i,w
  3177     08FA  075A               	addwf	strtof@s,w
  3178     08FB  00C8               	movwf	??_strtof+1
  3179     08FC  0848               	movf	??_strtof+1,w
  3180     08FD  0086               	movwf	6
  3181     08FE  3001               	movlw	1	; select bank2/3
  3182     08FF  0087               	movwf	7
  3183     0900  0801               	movf	1,w
  3184     0901  0647               	xorwf	??_strtof,w
  3185     0902  1903               	skipnz
  3186     0903  2905               	goto	u3721
  3187     0904  2906               	goto	u3720
  3188     0905                     u3721:
  3189     0905  28E0               	goto	l3014
  3190     0906                     u3720:
  3191     0906                     l3020:
  3192     0906  0859               	movf	strtof@i,w
  3193     0907  3E0F               	addlw	low (STR_6| (0+32768))
  3194     0908  0084               	movwf	4
  3195     0909  3098               	movlw	high (STR_6| (0+32768))
  3196     090A  1803               	skipnc
  3197     090B  3E01               	addlw	1
  3198     090C  0085               	movwf	5
  3199     090D  0800               	movf	0,w	;code access
  3200     090E  00C7               	movwf	??_strtof
  3201     090F  0859               	movf	strtof@i,w
  3202     0910  075A               	addwf	strtof@s,w
  3203     0911  00C8               	movwf	??_strtof+1
  3204     0912  0848               	movf	??_strtof+1,w
  3205     0913  0086               	movwf	6
  3206     0914  3001               	movlw	1	; select bank2/3
  3207     0915  0087               	movwf	7
  3208     0916  0801               	movf	1,w
  3209     0917  0647               	xorwf	??_strtof,w
  3210     0918  1903               	skipnz
  3211     0919  291B               	goto	u3731
  3212     091A  291C               	goto	u3730
  3213     091B                     u3731:
  3214     091B  28E0               	goto	l3014
  3215     091C                     u3730:
  3216     091C                     l3022:
  3217     091C  3003               	movlw	3
  3218     091D  0259               	subwf	strtof@i,w
  3219     091E  1C03               	skipc
  3220     091F  2921               	goto	u3741
  3221     0920  2922               	goto	u3740
  3222     0921                     u3741:
  3223     0921  293E               	goto	l3034
  3224     0922                     u3740:
  3225     0922                     l3024:
  3226     0922  307F               	movlw	127
  3227     0923  00D8               	movwf	strtof@_u+3
  3228     0924  3080               	movlw	128
  3229     0925  00D7               	movwf	strtof@_u+2
  3230     0926  3000               	movlw	0
  3231     0927  00D6               	movwf	strtof@_u+1
  3232     0928  3000               	movlw	0
  3233     0929  00D5               	movwf	strtof@_u
  3234     092A                     l3026:
  3235     092A  0843               	movf	strtof@res,w
  3236     092B  1903               	btfsc	3,2
  3237     092C  292E               	goto	u3751
  3238     092D  292F               	goto	u3750
  3239     092E                     u3751:
  3240     092E  2FDE               	goto	l813
  3241     092F                     u3750:
  3242     092F                     l3028:
  3243     092F  3008               	movlw	8
  3244     0930  0659               	xorwf	strtof@i,w
  3245     0931  1903               	btfsc	3,2
  3246     0932  2934               	goto	u3761
  3247     0933  2935               	goto	u3760
  3248     0934                     u3761:
  3249     0934  2937               	goto	l3032
  3250     0935                     u3760:
  3251     0935                     l3030:
  3252     0935  3003               	movlw	3
  3253     0936  00D9               	movwf	strtof@i
  3254     0937                     l3032:
  3255     0937  0843               	movf	strtof@res,w
  3256     0938  0086               	movwf	6
  3257     0939  0187               	clrf	7
  3258     093A  085A               	movf	strtof@s,w
  3259     093B  0759               	addwf	strtof@i,w
  3260     093C  0081               	movwf	1
  3261     093D  2FDE               	goto	l813
  3262     093E                     l3034:
  3263     093E  01D9               	clrf	strtof@i
  3264     093F  2944               	goto	l3038
  3265     0940                     l3036:
  3266     0940  3001               	movlw	1
  3267     0941  00C7               	movwf	??_strtof
  3268     0942  0847               	movf	??_strtof,w
  3269     0943  07D9               	addwf	strtof@i,f
  3270     0944                     l3038:
  3271     0944  0859               	movf	strtof@i,w
  3272     0945  075A               	addwf	strtof@s,w
  3273     0946  00C7               	movwf	??_strtof
  3274     0947  0847               	movf	??_strtof,w
  3275     0948  0086               	movwf	6
  3276     0949  3001               	movlw	1	; select bank2/3
  3277     094A  0087               	movwf	7
  3278     094B  0801               	movf	1,w
  3279     094C  1903               	btfsc	3,2
  3280     094D  294F               	goto	u3771
  3281     094E  2950               	goto	u3770
  3282     094F                     u3771:
  3283     094F  297C               	goto	l3044
  3284     0950                     u3770:
  3285     0950                     l3040:
  3286     0950  0859               	movf	strtof@i,w
  3287     0951  3E29               	addlw	low (STR_10| (0+32768))
  3288     0952  0084               	movwf	4
  3289     0953  3098               	movlw	high (STR_10| (0+32768))
  3290     0954  1803               	skipnc
  3291     0955  3E01               	addlw	1
  3292     0956  0085               	movwf	5
  3293     0957  0800               	movf	0,w	;code access
  3294     0958  00C7               	movwf	??_strtof
  3295     0959  0859               	movf	strtof@i,w
  3296     095A  075A               	addwf	strtof@s,w
  3297     095B  00C8               	movwf	??_strtof+1
  3298     095C  0848               	movf	??_strtof+1,w
  3299     095D  0086               	movwf	6
  3300     095E  3001               	movlw	1	; select bank2/3
  3301     095F  0087               	movwf	7
  3302     0960  0801               	movf	1,w
  3303     0961  0647               	xorwf	??_strtof,w
  3304     0962  1903               	skipnz
  3305     0963  2965               	goto	u3781
  3306     0964  2966               	goto	u3780
  3307     0965                     u3781:
  3308     0965  2940               	goto	l3036
  3309     0966                     u3780:
  3310     0966                     l3042:
  3311     0966  0859               	movf	strtof@i,w
  3312     0967  3E21               	addlw	low (STR_11| (0+32768))
  3313     0968  0084               	movwf	4
  3314     0969  3098               	movlw	high (STR_11| (0+32768))
  3315     096A  1803               	skipnc
  3316     096B  3E01               	addlw	1
  3317     096C  0085               	movwf	5
  3318     096D  0800               	movf	0,w	;code access
  3319     096E  00C7               	movwf	??_strtof
  3320     096F  0859               	movf	strtof@i,w
  3321     0970  075A               	addwf	strtof@s,w
  3322     0971  00C8               	movwf	??_strtof+1
  3323     0972  0848               	movf	??_strtof+1,w
  3324     0973  0086               	movwf	6
  3325     0974  3001               	movlw	1	; select bank2/3
  3326     0975  0087               	movwf	7
  3327     0976  0801               	movf	1,w
  3328     0977  0647               	xorwf	??_strtof,w
  3329     0978  1903               	skipnz
  3330     0979  297B               	goto	u3791
  3331     097A  297C               	goto	u3790
  3332     097B                     u3791:
  3333     097B  2940               	goto	l3036
  3334     097C                     u3790:
  3335     097C                     l3044:
  3336     097C  3003               	movlw	3
  3337     097D  0659               	xorwf	strtof@i,w
  3338     097E  1D03               	btfss	3,2
  3339     097F  2981               	goto	u3801
  3340     0980  2982               	goto	u3800
  3341     0981                     u3801:
  3342     0981  29DC               	goto	l3068
  3343     0982                     u3800:
  3344     0982                     l3046:
  3345     0982  300E               	movlw	low ((STR_1+14)| (0+32768))
  3346     0983  00A0               	movwf	nanf@s
  3347     0984  3098               	movlw	high ((STR_1+14)| (0+32768))
  3348     0985  00A1               	movwf	nanf@s+1
  3349     0986  3188  2004  3188   	fcall	_nanf
  3350     0989  0020               	movlb	0	; select bank0
  3351     098A  0823               	movf	?_nanf+3,w
  3352     098B  00D8               	movwf	strtof@_u+3
  3353     098C  0822               	movf	?_nanf+2,w
  3354     098D  00D7               	movwf	strtof@_u+2
  3355     098E  0821               	movf	?_nanf+1,w
  3356     098F  00D6               	movwf	strtof@_u+1
  3357     0990  0820               	movf	?_nanf,w
  3358     0991  00D5               	movwf	strtof@_u
  3359     0992                     l3048:
  3360     0992  0843               	movf	strtof@res,w
  3361     0993  1903               	btfsc	3,2
  3362     0994  2996               	goto	u3811
  3363     0995  2997               	goto	u3810
  3364     0996                     u3811:
  3365     0996  2FDE               	goto	l813
  3366     0997                     u3810:
  3367     0997                     l3050:
  3368     0997  0859               	movf	strtof@i,w
  3369     0998  00C7               	movwf	??_strtof
  3370     0999  0847               	movf	??_strtof,w
  3371     099A  07DA               	addwf	strtof@s,f
  3372     099B                     l3052:
  3373     099B  085A               	movf	strtof@s,w
  3374     099C  0086               	movwf	6
  3375     099D  3001               	movlw	1	; select bank2/3
  3376     099E  0087               	movwf	7
  3377     099F  3028               	movlw	40
  3378     09A0  0601               	xorwf	1,w
  3379     09A1  1D03               	btfss	3,2
  3380     09A2  29A4               	goto	u3821
  3381     09A3  29A5               	goto	u3820
  3382     09A4                     u3821:
  3383     09A4  29D6               	goto	l3066
  3384     09A5                     u3820:
  3385     09A5                     l3054:
  3386     09A5  01D9               	clrf	strtof@i
  3387     09A6  29AB               	goto	l3058
  3388     09A7                     l3056:
  3389     09A7  3001               	movlw	1
  3390     09A8  00C7               	movwf	??_strtof
  3391     09A9  0847               	movf	??_strtof,w
  3392     09AA  07D9               	addwf	strtof@i,f
  3393     09AB                     l3058:
  3394     09AB  0859               	movf	strtof@i,w
  3395     09AC  075A               	addwf	strtof@s,w
  3396     09AD  00C7               	movwf	??_strtof
  3397     09AE  0847               	movf	??_strtof,w
  3398     09AF  0086               	movwf	6
  3399     09B0  3001               	movlw	1	; select bank2/3
  3400     09B1  0087               	movwf	7
  3401     09B2  0801               	movf	1,w
  3402     09B3  1903               	btfsc	3,2
  3403     09B4  29B6               	goto	u3831
  3404     09B5  29B7               	goto	u3830
  3405     09B6                     u3831:
  3406     09B6  29C4               	goto	l3062
  3407     09B7                     u3830:
  3408     09B7                     l3060:
  3409     09B7  0859               	movf	strtof@i,w
  3410     09B8  075A               	addwf	strtof@s,w
  3411     09B9  00C7               	movwf	??_strtof
  3412     09BA  0847               	movf	??_strtof,w
  3413     09BB  0086               	movwf	6
  3414     09BC  3001               	movlw	1	; select bank2/3
  3415     09BD  0087               	movwf	7
  3416     09BE  3029               	movlw	41
  3417     09BF  0601               	xorwf	1,w
  3418     09C0  1D03               	btfss	3,2
  3419     09C1  29C3               	goto	u3841
  3420     09C2  29C4               	goto	u3840
  3421     09C3                     u3841:
  3422     09C3  29A7               	goto	l3056
  3423     09C4                     u3840:
  3424     09C4                     l3062:
  3425     09C4  0859               	movf	strtof@i,w
  3426     09C5  075A               	addwf	strtof@s,w
  3427     09C6  00C7               	movwf	??_strtof
  3428     09C7  0847               	movf	??_strtof,w
  3429     09C8  0086               	movwf	6
  3430     09C9  3001               	movlw	1	; select bank2/3
  3431     09CA  0087               	movwf	7
  3432     09CB  3029               	movlw	41
  3433     09CC  0601               	xorwf	1,w
  3434     09CD  1D03               	btfss	3,2
  3435     09CE  29D0               	goto	u3851
  3436     09CF  29D1               	goto	u3850
  3437     09D0                     u3851:
  3438     09D0  29D6               	goto	l3066
  3439     09D1                     u3850:
  3440     09D1                     l3064:
  3441     09D1  0859               	movf	strtof@i,w
  3442     09D2  3E01               	addlw	1
  3443     09D3  00C7               	movwf	??_strtof
  3444     09D4  0847               	movf	??_strtof,w
  3445     09D5  07DA               	addwf	strtof@s,f
  3446     09D6                     l3066:
  3447     09D6  0843               	movf	strtof@res,w
  3448     09D7  0086               	movwf	6
  3449     09D8  0187               	clrf	7
  3450     09D9  085A               	movf	strtof@s,w
  3451     09DA  0081               	movwf	1
  3452     09DB  2FDE               	goto	l813
  3453     09DC                     l3068:
  3454     09DC  01D3               	clrf	strtof@eexp
  3455     09DD  01D4               	clrf	strtof@eexp+1
  3456     09DE                     l3070:
  3457     09DE  3000               	movlw	0
  3458     09DF  00D8               	movwf	strtof@_u+3
  3459     09E0  3000               	movlw	0
  3460     09E1  00D7               	movwf	strtof@_u+2
  3461     09E2  3000               	movlw	0
  3462     09E3  00D6               	movwf	strtof@_u+1
  3463     09E4  3000               	movlw	0
  3464     09E5  00D5               	movwf	strtof@_u
  3465     09E6                     l3072:
  3466     09E6  01D1               	clrf	strtof@expon
  3467     09E7  01D2               	clrf	strtof@expon+1
  3468     09E8                     l3074:
  3469     09E8  01D9               	clrf	strtof@i
  3470     09E9  29EE               	goto	l3078
  3471     09EA                     l3076:
  3472     09EA  3001               	movlw	1
  3473     09EB  00C7               	movwf	??_strtof
  3474     09EC  0847               	movf	??_strtof,w
  3475     09ED  07D9               	addwf	strtof@i,f
  3476     09EE                     l3078:
  3477     09EE  0859               	movf	strtof@i,w
  3478     09EF  075A               	addwf	strtof@s,w
  3479     09F0  00C7               	movwf	??_strtof
  3480     09F1  0847               	movf	??_strtof,w
  3481     09F2  0086               	movwf	6
  3482     09F3  3001               	movlw	1	; select bank2/3
  3483     09F4  0087               	movwf	7
  3484     09F5  3030               	movlw	48
  3485     09F6  0601               	xorwf	1,w
  3486     09F7  1903               	btfsc	3,2
  3487     09F8  29FA               	goto	u3861
  3488     09F9  29FB               	goto	u3860
  3489     09FA                     u3861:
  3490     09FA  29EA               	goto	l3076
  3491     09FB                     u3860:
  3492     09FB                     l3080:
  3493     09FB  0859               	movf	strtof@i,w
  3494     09FC  1903               	btfsc	3,2
  3495     09FD  29FF               	goto	u3871
  3496     09FE  2A00               	goto	u3870
  3497     09FF                     u3871:
  3498     09FF  2D39               	goto	l898
  3499     0A00                     u3870:
  3500     0A00                     l3082:
  3501     0A00  0859               	movf	strtof@i,w
  3502     0A01  075A               	addwf	strtof@s,w
  3503     0A02  00C7               	movwf	??_strtof
  3504     0A03  0847               	movf	??_strtof,w
  3505     0A04  0086               	movwf	6
  3506     0A05  3001               	movlw	1	; select bank2/3
  3507     0A06  0087               	movwf	7
  3508     0A07  3078               	movlw	120
  3509     0A08  0601               	xorwf	1,w
  3510     0A09  1903               	btfsc	3,2
  3511     0A0A  2A0C               	goto	u3881
  3512     0A0B  2A0D               	goto	u3880
  3513     0A0C                     u3881:
  3514     0A0C  2A1A               	goto	l3086
  3515     0A0D                     u3880:
  3516     0A0D                     l3084:
  3517     0A0D  0859               	movf	strtof@i,w
  3518     0A0E  075A               	addwf	strtof@s,w
  3519     0A0F  00C7               	movwf	??_strtof
  3520     0A10  0847               	movf	??_strtof,w
  3521     0A11  0086               	movwf	6
  3522     0A12  3001               	movlw	1	; select bank2/3
  3523     0A13  0087               	movwf	7
  3524     0A14  3058               	movlw	88
  3525     0A15  0601               	xorwf	1,w
  3526     0A16  1D03               	btfss	3,2
  3527     0A17  2A19               	goto	u3891
  3528     0A18  2A1A               	goto	u3890
  3529     0A19                     u3891:
  3530     0A19  2D39               	goto	l898
  3531     0A1A                     u3890:
  3532     0A1A                     l3086:
  3533     0A1A  0859               	movf	strtof@i,w
  3534     0A1B  3E01               	addlw	1
  3535     0A1C  00C7               	movwf	??_strtof
  3536     0A1D  0847               	movf	??_strtof,w
  3537     0A1E  07DA               	addwf	strtof@s,f
  3538     0A1F                     l3088:
  3539     0A1F  01D9               	clrf	strtof@i
  3540     0A20  2A25               	goto	l3092
  3541     0A21                     l3090:
  3542     0A21  3001               	movlw	1
  3543     0A22  00C7               	movwf	??_strtof
  3544     0A23  0847               	movf	??_strtof,w
  3545     0A24  07D9               	addwf	strtof@i,f
  3546     0A25                     l3092:
  3547     0A25  0859               	movf	strtof@i,w
  3548     0A26  075A               	addwf	strtof@s,w
  3549     0A27  00C7               	movwf	??_strtof
  3550     0A28  0847               	movf	??_strtof,w
  3551     0A29  0086               	movwf	6
  3552     0A2A  3001               	movlw	1	; select bank2/3
  3553     0A2B  0087               	movwf	7
  3554     0A2C  3030               	movlw	48
  3555     0A2D  0601               	xorwf	1,w
  3556     0A2E  1903               	btfsc	3,2
  3557     0A2F  2A31               	goto	u3901
  3558     0A30  2A32               	goto	u3900
  3559     0A31                     u3901:
  3560     0A31  2A21               	goto	l3090
  3561     0A32                     u3900:
  3562     0A32                     l3094:
  3563     0A32  01D9               	clrf	strtof@i
  3564     0A33                     l3096:
  3565     0A33  0859               	movf	strtof@i,w
  3566     0A34  075A               	addwf	strtof@s,w
  3567     0A35  00C7               	movwf	??_strtof
  3568     0A36  0847               	movf	??_strtof,w
  3569     0A37  0086               	movwf	6
  3570     0A38  3001               	movlw	1	; select bank2/3
  3571     0A39  0087               	movwf	7
  3572     0A3A  3070               	movlw	112
  3573     0A3B  0601               	xorwf	1,w
  3574     0A3C  1903               	btfsc	3,2
  3575     0A3D  2A3F               	goto	u3911
  3576     0A3E  2A40               	goto	u3910
  3577     0A3F                     u3911:
  3578     0A3F  2BAA               	goto	l3168
  3579     0A40                     u3910:
  3580     0A40                     l3098:
  3581     0A40  0859               	movf	strtof@i,w
  3582     0A41  075A               	addwf	strtof@s,w
  3583     0A42  00C7               	movwf	??_strtof
  3584     0A43  0847               	movf	??_strtof,w
  3585     0A44  0086               	movwf	6
  3586     0A45  3001               	movlw	1	; select bank2/3
  3587     0A46  0087               	movwf	7
  3588     0A47  3050               	movlw	80
  3589     0A48  0601               	xorwf	1,w
  3590     0A49  1D03               	btfss	3,2
  3591     0A4A  2A4C               	goto	u3921
  3592     0A4B  2A4D               	goto	u3920
  3593     0A4C                     u3921:
  3594     0A4C  2A4E               	goto	l3102
  3595     0A4D                     u3920:
  3596     0A4D  2BAA               	goto	l3168
  3597     0A4E                     l3102:
  3598     0A4E  0859               	movf	strtof@i,w
  3599     0A4F  075A               	addwf	strtof@s,w
  3600     0A50  00C7               	movwf	??_strtof
  3601     0A51  0847               	movf	??_strtof,w
  3602     0A52  0086               	movwf	6
  3603     0A53  3001               	movlw	1	; select bank2/3
  3604     0A54  0087               	movwf	7
  3605     0A55  302E               	movlw	46
  3606     0A56  0601               	xorwf	1,w
  3607     0A57  1D03               	btfss	3,2
  3608     0A58  2A5A               	goto	u3931
  3609     0A59  2A5B               	goto	u3930
  3610     0A5A                     u3931:
  3611     0A5A  2A61               	goto	l3110
  3612     0A5B                     u3930:
  3613     0A5B                     l3104:
  3614     0A5B  1650               	bsf	strtof@flags,4
  3615     0A5C                     l3106:
  3616     0A5C  3001               	movlw	1
  3617     0A5D  00C7               	movwf	??_strtof
  3618     0A5E  0847               	movf	??_strtof,w
  3619     0A5F  07D9               	addwf	strtof@i,f
  3620     0A60  2BAA               	goto	l3168
  3621     0A61                     l3110:
  3622     0A61  0859               	movf	strtof@i,w
  3623     0A62  075A               	addwf	strtof@s,w
  3624     0A63  00C7               	movwf	??_strtof
  3625     0A64  0847               	movf	??_strtof,w
  3626     0A65  0086               	movwf	6
  3627     0A66  3001               	movlw	1	; select bank2/3
  3628     0A67  0087               	movwf	7
  3629     0A68  0801               	movf	1,w
  3630     0A69  00C8               	movwf	??_strtof+1
  3631     0A6A  01C9               	clrf	??_strtof+2
  3632     0A6B  0848               	movf	??_strtof+1,w
  3633     0A6C  00A6               	movwf	isxdigit@c
  3634     0A6D  0849               	movf	??_strtof+2,w
  3635     0A6E  00A7               	movwf	isxdigit@c+1
  3636     0A6F  3194  240A  3188   	fcall	_isxdigit
  3637     0A72  0020               	movlb	0	; select bank0
  3638     0A73  0826               	movf	?_isxdigit,w
  3639     0A74  0427               	iorwf	?_isxdigit+1,w
  3640     0A75  1903               	btfsc	3,2
  3641     0A76  2A78               	goto	u3941
  3642     0A77  2A79               	goto	u3940
  3643     0A78                     u3941:
  3644     0A78  2AE7               	goto	l3130
  3645     0A79                     u3940:
  3646     0A79                     l3112:
  3647     0A79  01CF               	clrf	strtof@digit
  3648     0A7A                     l3116:
  3649     0A7A  0859               	movf	strtof@i,w
  3650     0A7B  075A               	addwf	strtof@s,w
  3651     0A7C  00C7               	movwf	??_strtof
  3652     0A7D  0847               	movf	??_strtof,w
  3653     0A7E  0086               	movwf	6
  3654     0A7F  3001               	movlw	1	; select bank2/3
  3655     0A80  0087               	movwf	7
  3656     0A81  0801               	movf	1,w
  3657     0A82  3ED0               	addlw	208
  3658     0A83  00C8               	movwf	??_strtof+1
  3659     0A84  30FF               	movlw	255
  3660     0A85  1803               	skipnc
  3661     0A86  3000               	movlw	0
  3662     0A87  00C9               	movwf	??_strtof+2
  3663     0A88  3000               	movlw	0
  3664     0A89  0249               	subwf	??_strtof+2,w
  3665     0A8A  300A               	movlw	10
  3666     0A8B  1903               	skipnz
  3667     0A8C  0248               	subwf	??_strtof+1,w
  3668     0A8D  1803               	skipnc
  3669     0A8E  2A90               	goto	u3951
  3670     0A8F  2A91               	goto	u3950
  3671     0A90                     u3951:
  3672     0A90  2A9C               	goto	l3120
  3673     0A91                     u3950:
  3674     0A91                     l3118:
  3675     0A91  0859               	movf	strtof@i,w
  3676     0A92  075A               	addwf	strtof@s,w
  3677     0A93  00C7               	movwf	??_strtof
  3678     0A94  0847               	movf	??_strtof,w
  3679     0A95  0086               	movwf	6
  3680     0A96  3001               	movlw	1	; select bank2/3
  3681     0A97  0087               	movwf	7
  3682     0A98  0801               	movf	1,w
  3683     0A99  3ED0               	addlw	208
  3684     0A9A  00CF               	movwf	strtof@digit
  3685     0A9B  2AB1               	goto	l3122
  3686     0A9C                     l3120:
  3687     0A9C  0859               	movf	strtof@i,w
  3688     0A9D  075A               	addwf	strtof@s,w
  3689     0A9E  00C7               	movwf	??_strtof
  3690     0A9F  0847               	movf	??_strtof,w
  3691     0AA0  0086               	movwf	6
  3692     0AA1  3001               	movlw	1	; select bank2/3
  3693     0AA2  0087               	movwf	7
  3694     0AA3  0801               	movf	1,w
  3695     0AA4  00C8               	movwf	??_strtof+1
  3696     0AA5  01C9               	clrf	??_strtof+2
  3697     0AA6  0848               	movf	??_strtof+1,w
  3698     0AA7  00A6               	movwf	toupper@c
  3699     0AA8  0849               	movf	??_strtof+2,w
  3700     0AA9  00A7               	movwf	toupper@c+1
  3701     0AAA  3193  231F  3188   	fcall	_toupper
  3702     0AAD  0020               	movlb	0	; select bank0
  3703     0AAE  0826               	movf	?_toupper,w
  3704     0AAF  3EC9               	addlw	201
  3705     0AB0  00CF               	movwf	strtof@digit
  3706     0AB1                     l3122:
  3707     0AB1  0854               	movf	strtof@eexp+1,w
  3708     0AB2  3A80               	xorlw	128
  3709     0AB3  00C7               	movwf	??_strtof
  3710     0AB4  3080               	movlw	128
  3711     0AB5  0247               	subwf	??_strtof,w
  3712     0AB6  1D03               	skipz
  3713     0AB7  2ABA               	goto	u3965
  3714     0AB8  3008               	movlw	8
  3715     0AB9  0253               	subwf	strtof@eexp,w
  3716     0ABA                     u3965:
  3717     0ABA  1803               	skipnc
  3718     0ABB  2ABD               	goto	u3961
  3719     0ABC  2ABE               	goto	u3960
  3720     0ABD                     u3961:
  3721     0ABD  2ADD               	goto	l3126
  3722     0ABE                     u3960:
  3723     0ABE                     l3124:
  3724     0ABE  0020               	movlb	0	; select bank0
  3725     0ABF  084F               	movf	strtof@digit,w
  3726     0AC0  00C7               	movwf	??_strtof
  3727     0AC1  01C8               	clrf	??_strtof+1
  3728     0AC2  01C9               	clrf	??_strtof+2
  3729     0AC3  01CA               	clrf	??_strtof+3
  3730     0AC4  0853               	movf	strtof@eexp,w
  3731     0AC5  3C07               	sublw	7
  3732     0AC6  00CB               	movwf	??_strtof+4
  3733     0AC7  3001               	movlw	1
  3734     0AC8                     u3975:
  3735     0AC8  35CB               	lslf	??_strtof+4,f
  3736     0AC9  3EFF               	addlw	-1
  3737     0ACA  1D03               	skipz
  3738     0ACB  2AC8               	goto	u3975
  3739     0ACC  354B               	lslf	??_strtof+4,w
  3740     0ACD  0A89               	incf	9,f
  3741     0ACE  2AD3               	goto	u3980
  3742     0ACF                     u3985:
  3743     0ACF  35C7               	lslf	??_strtof,f
  3744     0AD0  0DC8               	rlf	??_strtof+1,f
  3745     0AD1  0DC9               	rlf	??_strtof+2,f
  3746     0AD2  0DCA               	rlf	??_strtof+3,f
  3747     0AD3                     u3980:
  3748     0AD3  0B89               	decfsz	9,f
  3749     0AD4  2ACF               	goto	u3985
  3750     0AD5  0847               	movf	??_strtof,w
  3751     0AD6  04D5               	iorwf	strtof@_u,f
  3752     0AD7  0848               	movf	??_strtof+1,w
  3753     0AD8  04D6               	iorwf	strtof@_u+1,f
  3754     0AD9  0849               	movf	??_strtof+2,w
  3755     0ADA  04D7               	iorwf	strtof@_u+2,f
  3756     0ADB  084A               	movf	??_strtof+3,w
  3757     0ADC  04D8               	iorwf	strtof@_u+3,f
  3758     0ADD                     l3126:
  3759     0ADD  3001               	movlw	1
  3760     0ADE  0020               	movlb	0	; select bank0
  3761     0ADF  07D3               	addwf	strtof@eexp,f
  3762     0AE0  3000               	movlw	0
  3763     0AE1  3DD4               	addwfc	strtof@eexp+1,f
  3764     0AE2                     l3128:
  3765     0AE2  3004               	movlw	4
  3766     0AE3  07D1               	addwf	strtof@expon,f
  3767     0AE4  3000               	movlw	0
  3768     0AE5  3DD2               	addwfc	strtof@expon+1,f
  3769     0AE6  2AF0               	goto	l3134
  3770     0AE7                     l3130:
  3771     0AE7  3000               	movlw	0
  3772     0AE8  00C6               	movwf	?_strtof+3
  3773     0AE9  3000               	movlw	0
  3774     0AEA  00C5               	movwf	?_strtof+2
  3775     0AEB  3000               	movlw	0
  3776     0AEC  00C4               	movwf	?_strtof+1
  3777     0AED  3000               	movlw	0
  3778     0AEE  00C3               	movwf	?_strtof
  3779     0AEF  2FFF               	goto	l857
  3780     0AF0                     l3134:
  3781     0AF0  3001               	movlw	1
  3782     0AF1  00C7               	movwf	??_strtof
  3783     0AF2  0847               	movf	??_strtof,w
  3784     0AF3  07D9               	addwf	strtof@i,f
  3785     0AF4  2A33               	goto	l3096
  3786     0AF5                     l3136:
  3787     0AF5  0859               	movf	strtof@i,w
  3788     0AF6  075A               	addwf	strtof@s,w
  3789     0AF7  00C7               	movwf	??_strtof
  3790     0AF8  0847               	movf	??_strtof,w
  3791     0AF9  0086               	movwf	6
  3792     0AFA  3001               	movlw	1	; select bank2/3
  3793     0AFB  0087               	movwf	7
  3794     0AFC  3070               	movlw	112
  3795     0AFD  0601               	xorwf	1,w
  3796     0AFE  1903               	btfsc	3,2
  3797     0AFF  2B01               	goto	u3991
  3798     0B00  2B02               	goto	u3990
  3799     0B01                     u3991:
  3800     0B01  2BAE               	goto	l3170
  3801     0B02                     u3990:
  3802     0B02                     l3138:
  3803     0B02  0859               	movf	strtof@i,w
  3804     0B03  075A               	addwf	strtof@s,w
  3805     0B04  00C7               	movwf	??_strtof
  3806     0B05  0847               	movf	??_strtof,w
  3807     0B06  0086               	movwf	6
  3808     0B07  3001               	movlw	1	; select bank2/3
  3809     0B08  0087               	movwf	7
  3810     0B09  3050               	movlw	80
  3811     0B0A  0601               	xorwf	1,w
  3812     0B0B  1D03               	btfss	3,2
  3813     0B0C  2B0E               	goto	u4001
  3814     0B0D  2B0F               	goto	u4000
  3815     0B0E                     u4001:
  3816     0B0E  2B10               	goto	l3142
  3817     0B0F                     u4000:
  3818     0B0F  2BAE               	goto	l3170
  3819     0B10                     l3142:
  3820     0B10  0859               	movf	strtof@i,w
  3821     0B11  075A               	addwf	strtof@s,w
  3822     0B12  00C7               	movwf	??_strtof
  3823     0B13  0847               	movf	??_strtof,w
  3824     0B14  0086               	movwf	6
  3825     0B15  3001               	movlw	1	; select bank2/3
  3826     0B16  0087               	movwf	7
  3827     0B17  3030               	movlw	48
  3828     0B18  0601               	xorwf	1,w
  3829     0B19  1D03               	btfss	3,2
  3830     0B1A  2B1C               	goto	u4011
  3831     0B1B  2B1D               	goto	u4010
  3832     0B1C                     u4011:
  3833     0B1C  2B28               	goto	l3148
  3834     0B1D                     u4010:
  3835     0B1D                     l3144:
  3836     0B1D  0853               	movf	strtof@eexp,w
  3837     0B1E  0454               	iorwf	strtof@eexp+1,w
  3838     0B1F  1D03               	btfss	3,2
  3839     0B20  2B22               	goto	u4021
  3840     0B21  2B23               	goto	u4020
  3841     0B22                     u4021:
  3842     0B22  2B28               	goto	l3148
  3843     0B23                     u4020:
  3844     0B23                     l3146:
  3845     0B23  30FC               	movlw	252
  3846     0B24  07D1               	addwf	strtof@expon,f
  3847     0B25  30FF               	movlw	255
  3848     0B26  3DD2               	addwfc	strtof@expon+1,f
  3849     0B27  2A5C               	goto	l3106
  3850     0B28                     l3148:
  3851     0B28  0859               	movf	strtof@i,w
  3852     0B29  075A               	addwf	strtof@s,w
  3853     0B2A  00C7               	movwf	??_strtof
  3854     0B2B  0847               	movf	??_strtof,w
  3855     0B2C  0086               	movwf	6
  3856     0B2D  3001               	movlw	1	; select bank2/3
  3857     0B2E  0087               	movwf	7
  3858     0B2F  0801               	movf	1,w
  3859     0B30  00C8               	movwf	??_strtof+1
  3860     0B31  01C9               	clrf	??_strtof+2
  3861     0B32  0848               	movf	??_strtof+1,w
  3862     0B33  00A6               	movwf	isxdigit@c
  3863     0B34  0849               	movf	??_strtof+2,w
  3864     0B35  00A7               	movwf	isxdigit@c+1
  3865     0B36  3194  240A  3188   	fcall	_isxdigit
  3866     0B39  0020               	movlb	0	; select bank0
  3867     0B3A  0826               	movf	?_isxdigit,w
  3868     0B3B  0427               	iorwf	?_isxdigit+1,w
  3869     0B3C  1903               	btfsc	3,2
  3870     0B3D  2B3F               	goto	u4031
  3871     0B3E  2B40               	goto	u4030
  3872     0B3F                     u4031:
  3873     0B3F  2A5C               	goto	l3106
  3874     0B40                     u4030:
  3875     0B40                     l3150:
  3876     0B40  01CF               	clrf	strtof@digit
  3877     0B41                     l3154:
  3878     0B41  0859               	movf	strtof@i,w
  3879     0B42  075A               	addwf	strtof@s,w
  3880     0B43  00C7               	movwf	??_strtof
  3881     0B44  0847               	movf	??_strtof,w
  3882     0B45  0086               	movwf	6
  3883     0B46  3001               	movlw	1	; select bank2/3
  3884     0B47  0087               	movwf	7
  3885     0B48  0801               	movf	1,w
  3886     0B49  3ED0               	addlw	208
  3887     0B4A  00C8               	movwf	??_strtof+1
  3888     0B4B  30FF               	movlw	255
  3889     0B4C  1803               	skipnc
  3890     0B4D  3000               	movlw	0
  3891     0B4E  00C9               	movwf	??_strtof+2
  3892     0B4F  3000               	movlw	0
  3893     0B50  0249               	subwf	??_strtof+2,w
  3894     0B51  300A               	movlw	10
  3895     0B52  1903               	skipnz
  3896     0B53  0248               	subwf	??_strtof+1,w
  3897     0B54  1803               	skipnc
  3898     0B55  2B57               	goto	u4041
  3899     0B56  2B58               	goto	u4040
  3900     0B57                     u4041:
  3901     0B57  2B63               	goto	l3158
  3902     0B58                     u4040:
  3903     0B58                     l3156:
  3904     0B58  0859               	movf	strtof@i,w
  3905     0B59  075A               	addwf	strtof@s,w
  3906     0B5A  00C7               	movwf	??_strtof
  3907     0B5B  0847               	movf	??_strtof,w
  3908     0B5C  0086               	movwf	6
  3909     0B5D  3001               	movlw	1	; select bank2/3
  3910     0B5E  0087               	movwf	7
  3911     0B5F  0801               	movf	1,w
  3912     0B60  3ED0               	addlw	208
  3913     0B61  00CF               	movwf	strtof@digit
  3914     0B62  2B78               	goto	l3160
  3915     0B63                     l3158:
  3916     0B63  0859               	movf	strtof@i,w
  3917     0B64  075A               	addwf	strtof@s,w
  3918     0B65  00C7               	movwf	??_strtof
  3919     0B66  0847               	movf	??_strtof,w
  3920     0B67  0086               	movwf	6
  3921     0B68  3001               	movlw	1	; select bank2/3
  3922     0B69  0087               	movwf	7
  3923     0B6A  0801               	movf	1,w
  3924     0B6B  00C8               	movwf	??_strtof+1
  3925     0B6C  01C9               	clrf	??_strtof+2
  3926     0B6D  0848               	movf	??_strtof+1,w
  3927     0B6E  00A6               	movwf	toupper@c
  3928     0B6F  0849               	movf	??_strtof+2,w
  3929     0B70  00A7               	movwf	toupper@c+1
  3930     0B71  3193  231F  3188   	fcall	_toupper
  3931     0B74  0020               	movlb	0	; select bank0
  3932     0B75  0826               	movf	?_toupper,w
  3933     0B76  3EC9               	addlw	201
  3934     0B77  00CF               	movwf	strtof@digit
  3935     0B78                     l3160:
  3936     0B78  0854               	movf	strtof@eexp+1,w
  3937     0B79  3A80               	xorlw	128
  3938     0B7A  00C7               	movwf	??_strtof
  3939     0B7B  3080               	movlw	128
  3940     0B7C  0247               	subwf	??_strtof,w
  3941     0B7D  1D03               	skipz
  3942     0B7E  2B81               	goto	u4055
  3943     0B7F  3008               	movlw	8
  3944     0B80  0253               	subwf	strtof@eexp,w
  3945     0B81                     u4055:
  3946     0B81  1803               	skipnc
  3947     0B82  2B84               	goto	u4051
  3948     0B83  2B85               	goto	u4050
  3949     0B84                     u4051:
  3950     0B84  2BA4               	goto	l3164
  3951     0B85                     u4050:
  3952     0B85                     l3162:
  3953     0B85  0020               	movlb	0	; select bank0
  3954     0B86  084F               	movf	strtof@digit,w
  3955     0B87  00C7               	movwf	??_strtof
  3956     0B88  01C8               	clrf	??_strtof+1
  3957     0B89  01C9               	clrf	??_strtof+2
  3958     0B8A  01CA               	clrf	??_strtof+3
  3959     0B8B  0853               	movf	strtof@eexp,w
  3960     0B8C  3C07               	sublw	7
  3961     0B8D  00CB               	movwf	??_strtof+4
  3962     0B8E  3001               	movlw	1
  3963     0B8F                     u4065:
  3964     0B8F  35CB               	lslf	??_strtof+4,f
  3965     0B90  3EFF               	addlw	-1
  3966     0B91  1D03               	skipz
  3967     0B92  2B8F               	goto	u4065
  3968     0B93  354B               	lslf	??_strtof+4,w
  3969     0B94  0A89               	incf	9,f
  3970     0B95  2B9A               	goto	u4070
  3971     0B96                     u4075:
  3972     0B96  35C7               	lslf	??_strtof,f
  3973     0B97  0DC8               	rlf	??_strtof+1,f
  3974     0B98  0DC9               	rlf	??_strtof+2,f
  3975     0B99  0DCA               	rlf	??_strtof+3,f
  3976     0B9A                     u4070:
  3977     0B9A  0B89               	decfsz	9,f
  3978     0B9B  2B96               	goto	u4075
  3979     0B9C  0847               	movf	??_strtof,w
  3980     0B9D  04D5               	iorwf	strtof@_u,f
  3981     0B9E  0848               	movf	??_strtof+1,w
  3982     0B9F  04D6               	iorwf	strtof@_u+1,f
  3983     0BA0  0849               	movf	??_strtof+2,w
  3984     0BA1  04D7               	iorwf	strtof@_u+2,f
  3985     0BA2  084A               	movf	??_strtof+3,w
  3986     0BA3  04D8               	iorwf	strtof@_u+3,f
  3987     0BA4                     l3164:
  3988     0BA4  3001               	movlw	1
  3989     0BA5  0020               	movlb	0	; select bank0
  3990     0BA6  07D3               	addwf	strtof@eexp,f
  3991     0BA7  3000               	movlw	0
  3992     0BA8  3DD4               	addwfc	strtof@eexp+1,f
  3993     0BA9  2A5C               	goto	l3106
  3994     0BAA                     l3168:
  3995     0BAA  1A50               	btfsc	strtof@flags,4
  3996     0BAB  2BAD               	goto	u4081
  3997     0BAC  2BAE               	goto	u4080
  3998     0BAD                     u4081:
  3999     0BAD  2AF5               	goto	l3136
  4000     0BAE                     u4080:
  4001     0BAE                     l3170:
  4002     0BAE  0859               	movf	strtof@i,w
  4003     0BAF  075A               	addwf	strtof@s,w
  4004     0BB0  00C7               	movwf	??_strtof
  4005     0BB1  0847               	movf	??_strtof,w
  4006     0BB2  0086               	movwf	6
  4007     0BB3  3001               	movlw	1	; select bank2/3
  4008     0BB4  0087               	movwf	7
  4009     0BB5  3070               	movlw	112
  4010     0BB6  0601               	xorwf	1,w
  4011     0BB7  1903               	btfsc	3,2
  4012     0BB8  2BBA               	goto	u4091
  4013     0BB9  2BBB               	goto	u4090
  4014     0BBA                     u4091:
  4015     0BBA  2BD1               	goto	l3178
  4016     0BBB                     u4090:
  4017     0BBB                     l3172:
  4018     0BBB  0859               	movf	strtof@i,w
  4019     0BBC  075A               	addwf	strtof@s,w
  4020     0BBD  00C7               	movwf	??_strtof
  4021     0BBE  0847               	movf	??_strtof,w
  4022     0BBF  0086               	movwf	6
  4023     0BC0  3001               	movlw	1	; select bank2/3
  4024     0BC1  0087               	movwf	7
  4025     0BC2  3050               	movlw	80
  4026     0BC3  0601               	xorwf	1,w
  4027     0BC4  1903               	btfsc	3,2
  4028     0BC5  2BC7               	goto	u4101
  4029     0BC6  2BC8               	goto	u4100
  4030     0BC7                     u4101:
  4031     0BC7  2BD1               	goto	l3178
  4032     0BC8                     u4100:
  4033     0BC8                     l3174:
  4034     0BC8  3000               	movlw	0
  4035     0BC9  00C6               	movwf	?_strtof+3
  4036     0BCA  3000               	movlw	0
  4037     0BCB  00C5               	movwf	?_strtof+2
  4038     0BCC  3000               	movlw	0
  4039     0BCD  00C4               	movwf	?_strtof+1
  4040     0BCE  3000               	movlw	0
  4041     0BCF  00C3               	movwf	?_strtof
  4042     0BD0  2FFF               	goto	l857
  4043     0BD1                     l3178:
  4044     0BD1  3001               	movlw	1
  4045     0BD2  00C7               	movwf	??_strtof
  4046     0BD3  0847               	movf	??_strtof,w
  4047     0BD4  07D9               	addwf	strtof@i,f
  4048     0BD5                     l3180:
  4049     0BD5  0859               	movf	strtof@i,w
  4050     0BD6  075A               	addwf	strtof@s,w
  4051     0BD7  00C7               	movwf	??_strtof
  4052     0BD8  0847               	movf	??_strtof,w
  4053     0BD9  0086               	movwf	6
  4054     0BDA  3001               	movlw	1	; select bank2/3
  4055     0BDB  0087               	movwf	7
  4056     0BDC  302B               	movlw	43
  4057     0BDD  0601               	xorwf	1,w
  4058     0BDE  1D03               	btfss	3,2
  4059     0BDF  2BE1               	goto	u4111
  4060     0BE0  2BE2               	goto	u4110
  4061     0BE1                     u4111:
  4062     0BE1  2BE7               	goto	l3184
  4063     0BE2                     u4110:
  4064     0BE2                     l3182:
  4065     0BE2  3001               	movlw	1
  4066     0BE3  00C7               	movwf	??_strtof
  4067     0BE4  0847               	movf	??_strtof,w
  4068     0BE5  07D9               	addwf	strtof@i,f
  4069     0BE6  2BF6               	goto	l875
  4070     0BE7                     l3184:
  4071     0BE7  0859               	movf	strtof@i,w
  4072     0BE8  075A               	addwf	strtof@s,w
  4073     0BE9  00C7               	movwf	??_strtof
  4074     0BEA  0847               	movf	??_strtof,w
  4075     0BEB  0086               	movwf	6
  4076     0BEC  3001               	movlw	1	; select bank2/3
  4077     0BED  0087               	movwf	7
  4078     0BEE  302D               	movlw	45
  4079     0BEF  0601               	xorwf	1,w
  4080     0BF0  1D03               	btfss	3,2
  4081     0BF1  2BF3               	goto	u4121
  4082     0BF2  2BF4               	goto	u4120
  4083     0BF3                     u4121:
  4084     0BF3  2BF6               	goto	l875
  4085     0BF4                     u4120:
  4086     0BF4                     l3186:
  4087     0BF4  15D0               	bsf	strtof@flags,3
  4088     0BF5  2BE2               	goto	l3182
  4089     0BF6                     l875:
  4090     0BF6  0859               	movf	strtof@i,w
  4091     0BF7  00C7               	movwf	??_strtof
  4092     0BF8  0847               	movf	??_strtof,w
  4093     0BF9  07DA               	addwf	strtof@s,f
  4094     0BFA                     l3190:
  4095     0BFA  01D9               	clrf	strtof@i
  4096     0BFB  2C00               	goto	l3194
  4097     0BFC                     l3192:
  4098     0BFC  3001               	movlw	1
  4099     0BFD  00C7               	movwf	??_strtof
  4100     0BFE  0847               	movf	??_strtof,w
  4101     0BFF  07D9               	addwf	strtof@i,f
  4102     0C00                     l3194:
  4103     0C00  0859               	movf	strtof@i,w
  4104     0C01  075A               	addwf	strtof@s,w
  4105     0C02  00C7               	movwf	??_strtof
  4106     0C03  0847               	movf	??_strtof,w
  4107     0C04  0086               	movwf	6
  4108     0C05  3001               	movlw	1	; select bank2/3
  4109     0C06  0087               	movwf	7
  4110     0C07  3030               	movlw	48
  4111     0C08  0601               	xorwf	1,w
  4112     0C09  1903               	btfsc	3,2
  4113     0C0A  2C0C               	goto	u4131
  4114     0C0B  2C0D               	goto	u4130
  4115     0C0C                     u4131:
  4116     0C0C  2BFC               	goto	l3192
  4117     0C0D                     u4130:
  4118     0C0D                     l3196:
  4119     0C0D  01D3               	clrf	strtof@eexp
  4120     0C0E  01D4               	clrf	strtof@eexp+1
  4121     0C0F  2C3B               	goto	l3208
  4122     0C10                     l3198:
  4123     0C10  0859               	movf	strtof@i,w
  4124     0C11  1903               	btfsc	3,2
  4125     0C12  2C14               	goto	u4141
  4126     0C13  2C15               	goto	u4140
  4127     0C14                     u4141:
  4128     0C14  2C25               	goto	l3202
  4129     0C15                     u4140:
  4130     0C15                     l3200:
  4131     0C15  300A               	movlw	10
  4132     0C16  00A0               	movwf	___wmul@multiplier
  4133     0C17  3000               	movlw	0
  4134     0C18  00A1               	movwf	___wmul@multiplier+1
  4135     0C19  0854               	movf	strtof@eexp+1,w
  4136     0C1A  00A3               	movwf	___wmul@multiplicand+1
  4137     0C1B  0853               	movf	strtof@eexp,w
  4138     0C1C  00A2               	movwf	___wmul@multiplicand
  4139     0C1D  3193  23A4  3188   	fcall	___wmul
  4140     0C20  0020               	movlb	0	; select bank0
  4141     0C21  0821               	movf	?___wmul+1,w
  4142     0C22  00D4               	movwf	strtof@eexp+1
  4143     0C23  0820               	movf	?___wmul,w
  4144     0C24  00D3               	movwf	strtof@eexp
  4145     0C25                     l3202:
  4146     0C25  0859               	movf	strtof@i,w
  4147     0C26  075A               	addwf	strtof@s,w
  4148     0C27  00C7               	movwf	??_strtof
  4149     0C28  0847               	movf	??_strtof,w
  4150     0C29  0086               	movwf	6
  4151     0C2A  3001               	movlw	1	; select bank2/3
  4152     0C2B  0087               	movwf	7
  4153     0C2C  0801               	movf	1,w
  4154     0C2D  3ED0               	addlw	208
  4155     0C2E  00C8               	movwf	??_strtof+1
  4156     0C2F  30FF               	movlw	255
  4157     0C30  1803               	skipnc
  4158     0C31  3000               	movlw	0
  4159     0C32  00C9               	movwf	??_strtof+2
  4160     0C33  0848               	movf	??_strtof+1,w
  4161     0C34  07D3               	addwf	strtof@eexp,f
  4162     0C35  0849               	movf	??_strtof+2,w
  4163     0C36  3DD4               	addwfc	strtof@eexp+1,f
  4164     0C37                     l3204:
  4165     0C37  3001               	movlw	1
  4166     0C38  00C7               	movwf	??_strtof
  4167     0C39  0847               	movf	??_strtof,w
  4168     0C3A  07D9               	addwf	strtof@i,f
  4169     0C3B                     l3208:
  4170     0C3B  0859               	movf	strtof@i,w
  4171     0C3C  075A               	addwf	strtof@s,w
  4172     0C3D  00C7               	movwf	??_strtof
  4173     0C3E  0847               	movf	??_strtof,w
  4174     0C3F  0086               	movwf	6
  4175     0C40  3001               	movlw	1	; select bank2/3
  4176     0C41  0087               	movwf	7
  4177     0C42  0801               	movf	1,w
  4178     0C43  3ED0               	addlw	208
  4179     0C44  00C8               	movwf	??_strtof+1
  4180     0C45  30FF               	movlw	255
  4181     0C46  1803               	skipnc
  4182     0C47  3000               	movlw	0
  4183     0C48  00C9               	movwf	??_strtof+2
  4184     0C49  3000               	movlw	0
  4185     0C4A  0249               	subwf	??_strtof+2,w
  4186     0C4B  300A               	movlw	10
  4187     0C4C  1903               	skipnz
  4188     0C4D  0248               	subwf	??_strtof+1,w
  4189     0C4E  1C03               	skipc
  4190     0C4F  2C51               	goto	u4151
  4191     0C50  2C52               	goto	u4150
  4192     0C51                     u4151:
  4193     0C51  2C10               	goto	l3198
  4194     0C52                     u4150:
  4195     0C52                     l3210:
  4196     0C52  0859               	movf	strtof@i,w
  4197     0C53  1D03               	btfss	3,2
  4198     0C54  2C56               	goto	u4161
  4199     0C55  2C57               	goto	u4160
  4200     0C56                     u4161:
  4201     0C56  2C60               	goto	l887
  4202     0C57                     u4160:
  4203     0C57                     l3212:
  4204     0C57  3000               	movlw	0
  4205     0C58  00C6               	movwf	?_strtof+3
  4206     0C59  3000               	movlw	0
  4207     0C5A  00C5               	movwf	?_strtof+2
  4208     0C5B  3000               	movlw	0
  4209     0C5C  00C4               	movwf	?_strtof+1
  4210     0C5D  3000               	movlw	0
  4211     0C5E  00C3               	movwf	?_strtof
  4212     0C5F  2FFF               	goto	l857
  4213     0C60                     l887:
  4214     0C60  1DD0               	btfss	strtof@flags,3
  4215     0C61  2C63               	goto	u4171
  4216     0C62  2C64               	goto	u4170
  4217     0C63                     u4171:
  4218     0C63  2C69               	goto	l3218
  4219     0C64                     u4170:
  4220     0C64                     l3216:
  4221     0C64  09D3               	comf	strtof@eexp,f
  4222     0C65  09D4               	comf	strtof@eexp+1,f
  4223     0C66  0AD3               	incf	strtof@eexp,f
  4224     0C67  1903               	skipnz
  4225     0C68  0AD4               	incf	strtof@eexp+1,f
  4226     0C69                     l3218:
  4227     0C69  0853               	movf	strtof@eexp,w
  4228     0C6A  07D1               	addwf	strtof@expon,f
  4229     0C6B  0854               	movf	strtof@eexp+1,w
  4230     0C6C  3DD2               	addwfc	strtof@expon+1,f
  4231     0C6D  0843               	movf	strtof@res,w
  4232     0C6E  1903               	btfsc	3,2
  4233     0C6F  2C71               	goto	u4181
  4234     0C70  2C72               	goto	u4180
  4235     0C71                     u4181:
  4236     0C71  2C78               	goto	l3222
  4237     0C72                     u4180:
  4238     0C72                     l3220:
  4239     0C72  0843               	movf	strtof@res,w
  4240     0C73  0086               	movwf	6
  4241     0C74  0187               	clrf	7
  4242     0C75  085A               	movf	strtof@s,w
  4243     0C76  0759               	addwf	strtof@i,w
  4244     0C77  0081               	movwf	1
  4245     0C78                     l3222:
  4246     0C78  0858               	movf	strtof@_u+3,w
  4247     0C79  0457               	iorwf	strtof@_u+2,w
  4248     0C7A  0456               	iorwf	strtof@_u+1,w
  4249     0C7B  0455               	iorwf	strtof@_u,w
  4250     0C7C  1D03               	skipz
  4251     0C7D  2C7F               	goto	u4191
  4252     0C7E  2C80               	goto	u4190
  4253     0C7F                     u4191:
  4254     0C7F  2C89               	goto	l3228
  4255     0C80                     u4190:
  4256     0C80                     l3224:
  4257     0C80  3000               	movlw	0
  4258     0C81  00C6               	movwf	?_strtof+3
  4259     0C82  3000               	movlw	0
  4260     0C83  00C5               	movwf	?_strtof+2
  4261     0C84  3000               	movlw	0
  4262     0C85  00C4               	movwf	?_strtof+1
  4263     0C86  3000               	movlw	0
  4264     0C87  00C3               	movwf	?_strtof
  4265     0C88  2FFF               	goto	l857
  4266     0C89                     l3228:
  4267     0C89  30FF               	movlw	255
  4268     0C8A  0555               	andwf	strtof@_u,w
  4269     0C8B  00C7               	movwf	??_strtof
  4270     0C8C  3000               	movlw	0
  4271     0C8D  0556               	andwf	strtof@_u+1,w
  4272     0C8E  00C8               	movwf	??_strtof+1
  4273     0C8F  3000               	movlw	0
  4274     0C90  0557               	andwf	strtof@_u+2,w
  4275     0C91  00C9               	movwf	??_strtof+2
  4276     0C92  3000               	movlw	0
  4277     0C93  0558               	andwf	strtof@_u+3,w
  4278     0C94  00CA               	movwf	??_strtof+3
  4279     0C95  084A               	movf	??_strtof+3,w
  4280     0C96  1D03               	btfss	3,2
  4281     0C97  2CA4               	goto	u4200
  4282     0C98  0849               	movf	??_strtof+2,w
  4283     0C99  1D03               	btfss	3,2
  4284     0C9A  2CA4               	goto	u4200
  4285     0C9B  0848               	movf	??_strtof+1,w
  4286     0C9C  1D03               	btfss	3,2
  4287     0C9D  2CA4               	goto	u4200
  4288     0C9E  3081               	movlw	129
  4289     0C9F  0247               	subwf	??_strtof,w
  4290     0CA0  1C03               	btfss	3,0
  4291     0CA1  2CA3               	goto	u4201
  4292     0CA2  2CA4               	goto	u4200
  4293     0CA3                     u4201:
  4294     0CA3  2CB9               	goto	l3236
  4295     0CA4                     u4200:
  4296     0CA4                     l3230:
  4297     0CA4  3000               	movlw	0
  4298     0CA5  0020               	movlb	0	; select bank0
  4299     0CA6  07D5               	addwf	strtof@_u,f
  4300     0CA7  3001               	movlw	1
  4301     0CA8  3DD6               	addwfc	strtof@_u+1,f
  4302     0CA9  3000               	movlw	0
  4303     0CAA  3DD7               	addwfc	strtof@_u+2,f
  4304     0CAB  3000               	movlw	0
  4305     0CAC  3DD8               	addwfc	strtof@_u+3,f
  4306     0CAD  2CB9               	goto	l3236
  4307     0CAE                     l3232:
  4308     0CAE  3001               	movlw	1
  4309     0CAF                     u4215:
  4310     0CAF  35D5               	lslf	strtof@_u,f
  4311     0CB0  0DD6               	rlf	strtof@_u+1,f
  4312     0CB1  0DD7               	rlf	strtof@_u+2,f
  4313     0CB2  0DD8               	rlf	strtof@_u+3,f
  4314     0CB3  0B89               	decfsz	9,f
  4315     0CB4  2CAF               	goto	u4215
  4316     0CB5                     l3234:
  4317     0CB5  30FF               	movlw	255
  4318     0CB6  07D1               	addwf	strtof@expon,f
  4319     0CB7  30FF               	movlw	255
  4320     0CB8  3DD2               	addwfc	strtof@expon+1,f
  4321     0CB9                     l3236:
  4322     0CB9  0020               	movlb	0	; select bank0
  4323     0CBA  1FD8               	btfss	strtof@_u+3,7
  4324     0CBB  2CBD               	goto	u4221
  4325     0CBC  2CBE               	goto	u4220
  4326     0CBD                     u4221:
  4327     0CBD  2CAE               	goto	l3232
  4328     0CBE                     u4220:
  4329     0CBE                     l3238:
  4330     0CBE  0852               	movf	strtof@expon+1,w
  4331     0CBF  3A80               	xorlw	128
  4332     0CC0  00C7               	movwf	??_strtof
  4333     0CC1  307F               	movlw	127
  4334     0CC2  0247               	subwf	??_strtof,w
  4335     0CC3  1D03               	skipz
  4336     0CC4  2CC7               	goto	u4235
  4337     0CC5  3083               	movlw	131
  4338     0CC6  0251               	subwf	strtof@expon,w
  4339     0CC7                     u4235:
  4340     0CC7  1803               	skipnc
  4341     0CC8  2CCA               	goto	u4231
  4342     0CC9  2CCB               	goto	u4230
  4343     0CCA                     u4231:
  4344     0CCA  2CD8               	goto	l3242
  4345     0CCB                     u4230:
  4346     0CCB                     l3240:
  4347     0CCB  3081               	movlw	129
  4348     0CCC  0020               	movlb	0	; select bank0
  4349     0CCD  00D1               	movwf	strtof@expon
  4350     0CCE  30FF               	movlw	255
  4351     0CCF  00D2               	movwf	strtof@expon+1
  4352     0CD0  3000               	movlw	0
  4353     0CD1  00D8               	movwf	strtof@_u+3
  4354     0CD2  3000               	movlw	0
  4355     0CD3  00D7               	movwf	strtof@_u+2
  4356     0CD4  3000               	movlw	0
  4357     0CD5  00D6               	movwf	strtof@_u+1
  4358     0CD6  3000               	movlw	0
  4359     0CD7  00D5               	movwf	strtof@_u
  4360     0CD8                     l3242:
  4361     0CD8  3081               	movlw	129
  4362     0CD9  0020               	movlb	0	; select bank0
  4363     0CDA  0651               	xorwf	strtof@expon,w
  4364     0CDB  1D03               	skipz
  4365     0CDC  2CE2               	goto	u4240
  4366     0CDD  0A52               	incf	strtof@expon+1,w
  4367     0CDE  1903               	btfsc	3,2
  4368     0CDF  2CE1               	goto	u4241
  4369     0CE0  2CE2               	goto	u4240
  4370     0CE1                     u4241:
  4371     0CE1  2CED               	goto	l3248
  4372     0CE2                     u4240:
  4373     0CE2                     l3244:
  4374     0CE2  3001               	movlw	1
  4375     0CE3                     u4255:
  4376     0CE3  35D5               	lslf	strtof@_u,f
  4377     0CE4  0DD6               	rlf	strtof@_u+1,f
  4378     0CE5  0DD7               	rlf	strtof@_u+2,f
  4379     0CE6  0DD8               	rlf	strtof@_u+3,f
  4380     0CE7  0B89               	decfsz	9,f
  4381     0CE8  2CE3               	goto	u4255
  4382     0CE9                     l3246:
  4383     0CE9  30FF               	movlw	255
  4384     0CEA  07D1               	addwf	strtof@expon,f
  4385     0CEB  30FF               	movlw	255
  4386     0CEC  3DD2               	addwfc	strtof@expon+1,f
  4387     0CED                     l3248:
  4388     0CED  0852               	movf	strtof@expon+1,w
  4389     0CEE  3A80               	xorlw	128
  4390     0CEF  00C7               	movwf	??_strtof
  4391     0CF0  3080               	movlw	128
  4392     0CF1  0247               	subwf	??_strtof,w
  4393     0CF2  1D03               	skipz
  4394     0CF3  2CF6               	goto	u4265
  4395     0CF4  3080               	movlw	128
  4396     0CF5  0251               	subwf	strtof@expon,w
  4397     0CF6                     u4265:
  4398     0CF6  1C03               	skipc
  4399     0CF7  2CF9               	goto	u4261
  4400     0CF8  2CFA               	goto	u4260
  4401     0CF9                     u4261:
  4402     0CF9  2D07               	goto	l3252
  4403     0CFA                     u4260:
  4404     0CFA                     l3250:
  4405     0CFA  3000               	movlw	0
  4406     0CFB  0020               	movlb	0	; select bank0
  4407     0CFC  00D8               	movwf	strtof@_u+3
  4408     0CFD  3000               	movlw	0
  4409     0CFE  00D7               	movwf	strtof@_u+2
  4410     0CFF  3000               	movlw	0
  4411     0D00  00D6               	movwf	strtof@_u+1
  4412     0D01  3000               	movlw	0
  4413     0D02  00D5               	movwf	strtof@_u
  4414     0D03  3080               	movlw	128
  4415     0D04  00D1               	movwf	strtof@expon
  4416     0D05  3000               	movlw	0
  4417     0D06  00D2               	movwf	strtof@expon+1
  4418     0D07                     l3252:
  4419     0D07  3009               	movlw	9
  4420     0D08                     u4275:
  4421     0D08  0020               	movlb	0	; select bank0
  4422     0D09  36D8               	lsrf	strtof@_u+3,f
  4423     0D0A  0CD7               	rrf	strtof@_u+2,f
  4424     0D0B  0CD6               	rrf	strtof@_u+1,f
  4425     0D0C  0CD5               	rrf	strtof@_u,f
  4426     0D0D  0B89               	decfsz	9,f
  4427     0D0E  2D08               	goto	u4275
  4428     0D0F                     l3254:
  4429     0D0F  30FF               	movlw	255
  4430     0D10  05D5               	andwf	strtof@_u,f
  4431     0D11  30FF               	movlw	255
  4432     0D12  05D6               	andwf	strtof@_u+1,f
  4433     0D13  307F               	movlw	127
  4434     0D14  05D7               	andwf	strtof@_u+2,f
  4435     0D15  3000               	movlw	0
  4436     0D16  05D8               	andwf	strtof@_u+3,f
  4437     0D17  0851               	movf	strtof@expon,w
  4438     0D18  3E7F               	addlw	127
  4439     0D19  00C7               	movwf	??_strtof
  4440     0D1A  3000               	movlw	0
  4441     0D1B  3D52               	addwfc	strtof@expon+1,w
  4442     0D1C  00C8               	movwf	??_strtof+1
  4443     0D1D  30FF               	movlw	255
  4444     0D1E  0547               	andwf	??_strtof,w
  4445     0D1F  00C9               	movwf	??_strtof+2
  4446     0D20  3000               	movlw	0
  4447     0D21  0548               	andwf	??_strtof+1,w
  4448     0D22  00CA               	movwf	??_strtof+3
  4449     0D23  0849               	movf	??_strtof+2,w
  4450     0D24  00CB               	movwf	??_strtof+4
  4451     0D25  084A               	movf	??_strtof+3,w
  4452     0D26  00CC               	movwf	??_strtof+5
  4453     0D27  01CD               	clrf	??_strtof+6
  4454     0D28  01CE               	clrf	??_strtof+7
  4455     0D29  3017               	movlw	23
  4456     0D2A                     u4285:
  4457     0D2A  35CB               	lslf	??_strtof+4,f
  4458     0D2B  0DCC               	rlf	??_strtof+5,f
  4459     0D2C  0DCD               	rlf	??_strtof+6,f
  4460     0D2D  0DCE               	rlf	??_strtof+7,f
  4461     0D2E                     u4280:
  4462     0D2E  0B89               	decfsz	9,f
  4463     0D2F  2D2A               	goto	u4285
  4464     0D30  084B               	movf	??_strtof+4,w
  4465     0D31  04D5               	iorwf	strtof@_u,f
  4466     0D32  084C               	movf	??_strtof+5,w
  4467     0D33  04D6               	iorwf	strtof@_u+1,f
  4468     0D34  084D               	movf	??_strtof+6,w
  4469     0D35  04D7               	iorwf	strtof@_u+2,f
  4470     0D36  084E               	movf	??_strtof+7,w
  4471     0D37  04D8               	iorwf	strtof@_u+3,f
  4472     0D38  2FDE               	goto	l813
  4473     0D39                     l898:
  4474     0D39  1A50               	btfsc	strtof@flags,4
  4475     0D3A  2D3C               	goto	u4291
  4476     0D3B  2D3D               	goto	u4290
  4477     0D3C                     u4291:
  4478     0D3C  2D4D               	goto	l3264
  4479     0D3D                     u4290:
  4480     0D3D                     l3256:
  4481     0D3D  085A               	movf	strtof@s,w
  4482     0D3E  0086               	movwf	6
  4483     0D3F  3001               	movlw	1	; select bank2/3
  4484     0D40  0087               	movwf	7
  4485     0D41  302E               	movlw	46
  4486     0D42  0601               	xorwf	1,w
  4487     0D43  1D03               	btfss	3,2
  4488     0D44  2D46               	goto	u4301
  4489     0D45  2D47               	goto	u4300
  4490     0D46                     u4301:
  4491     0D46  2D4D               	goto	l3264
  4492     0D47                     u4300:
  4493     0D47                     l3258:
  4494     0D47  1650               	bsf	strtof@flags,4
  4495     0D48                     l3260:
  4496     0D48  3001               	movlw	1
  4497     0D49  00C7               	movwf	??_strtof
  4498     0D4A  0847               	movf	??_strtof,w
  4499     0D4B  07DA               	addwf	strtof@s,f
  4500     0D4C  2D39               	goto	l898
  4501     0D4D                     l3264:
  4502     0D4D  085A               	movf	strtof@s,w
  4503     0D4E  0086               	movwf	6
  4504     0D4F  3001               	movlw	1	; select bank2/3
  4505     0D50  0087               	movwf	7
  4506     0D51  0801               	movf	1,w
  4507     0D52  3ED0               	addlw	208
  4508     0D53  00C7               	movwf	??_strtof
  4509     0D54  30FF               	movlw	255
  4510     0D55  1803               	skipnc
  4511     0D56  3000               	movlw	0
  4512     0D57  00C8               	movwf	??_strtof+1
  4513     0D58  3000               	movlw	0
  4514     0D59  0248               	subwf	??_strtof+1,w
  4515     0D5A  300A               	movlw	10
  4516     0D5B  1903               	skipnz
  4517     0D5C  0247               	subwf	??_strtof,w
  4518     0D5D  1C03               	skipc
  4519     0D5E  2D60               	goto	u4311
  4520     0D5F  2D61               	goto	u4310
  4521     0D60                     u4311:
  4522     0D60  2D62               	goto	l901
  4523     0D61                     u4310:
  4524     0D61  2DAE               	goto	l3282
  4525     0D62                     l901:
  4526     0D62  14D0               	bsf	strtof@flags,1
  4527     0D63                     l3268:
  4528     0D63  3009               	movlw	9
  4529     0D64  0653               	xorwf	strtof@eexp,w
  4530     0D65  0454               	iorwf	strtof@eexp+1,w
  4531     0D66  1903               	btfsc	3,2
  4532     0D67  2D69               	goto	u4321
  4533     0D68  2D6A               	goto	u4320
  4534     0D69                     u4321:
  4535     0D69  2DA5               	goto	l905
  4536     0D6A                     u4320:
  4537     0D6A                     l3270:
  4538     0D6A  1E50               	btfss	strtof@flags,4
  4539     0D6B  2D6D               	goto	u4331
  4540     0D6C  2D6E               	goto	u4330
  4541     0D6D                     u4331:
  4542     0D6D  2D72               	goto	l906
  4543     0D6E                     u4330:
  4544     0D6E                     l3272:
  4545     0D6E  30FF               	movlw	255
  4546     0D6F  07D1               	addwf	strtof@expon,f
  4547     0D70  30FF               	movlw	255
  4548     0D71  3DD2               	addwfc	strtof@expon+1,f
  4549     0D72                     l906:
  4550     0D72  3001               	movlw	1
  4551     0D73  07D3               	addwf	strtof@eexp,f
  4552     0D74  3000               	movlw	0
  4553     0D75  3DD4               	addwfc	strtof@eexp+1,f
  4554     0D76                     l3274:
  4555     0D76  3000               	movlw	0
  4556     0D77  00A3               	movwf	___lmul@multiplier+3
  4557     0D78  3000               	movlw	0
  4558     0D79  00A2               	movwf	___lmul@multiplier+2
  4559     0D7A  3000               	movlw	0
  4560     0D7B  00A1               	movwf	___lmul@multiplier+1
  4561     0D7C  300A               	movlw	10
  4562     0D7D  00A0               	movwf	___lmul@multiplier
  4563     0D7E  0858               	movf	strtof@_u+3,w
  4564     0D7F  00A7               	movwf	___lmul@multiplicand+3
  4565     0D80  0857               	movf	strtof@_u+2,w
  4566     0D81  00A6               	movwf	___lmul@multiplicand+2
  4567     0D82  0856               	movf	strtof@_u+1,w
  4568     0D83  00A5               	movwf	___lmul@multiplicand+1
  4569     0D84  0855               	movf	strtof@_u,w
  4570     0D85  00A4               	movwf	___lmul@multiplicand
  4571     0D86  3194  246E  3188   	fcall	___lmul
  4572     0D89  0020               	movlb	0	; select bank0
  4573     0D8A  0823               	movf	?___lmul+3,w
  4574     0D8B  00D8               	movwf	strtof@_u+3
  4575     0D8C  0822               	movf	?___lmul+2,w
  4576     0D8D  00D7               	movwf	strtof@_u+2
  4577     0D8E  0821               	movf	?___lmul+1,w
  4578     0D8F  00D6               	movwf	strtof@_u+1
  4579     0D90  0820               	movf	?___lmul,w
  4580     0D91  00D5               	movwf	strtof@_u
  4581     0D92                     l3276:
  4582     0D92  085A               	movf	strtof@s,w
  4583     0D93  0086               	movwf	6
  4584     0D94  3001               	movlw	1	; select bank2/3
  4585     0D95  0087               	movwf	7
  4586     0D96  0801               	movf	1,w
  4587     0D97  3ED0               	addlw	208
  4588     0D98  00C7               	movwf	??_strtof
  4589     0D99  01C8               	clrf	??_strtof+1
  4590     0D9A  01C9               	clrf	??_strtof+2
  4591     0D9B  01CA               	clrf	??_strtof+3
  4592     0D9C  0847               	movf	??_strtof,w
  4593     0D9D  07D5               	addwf	strtof@_u,f
  4594     0D9E  0848               	movf	??_strtof+1,w
  4595     0D9F  3DD6               	addwfc	strtof@_u+1,f
  4596     0DA0  0849               	movf	??_strtof+2,w
  4597     0DA1  3DD7               	addwfc	strtof@_u+2,f
  4598     0DA2  084A               	movf	??_strtof+3,w
  4599     0DA3  3DD8               	addwfc	strtof@_u+3,f
  4600     0DA4  2D48               	goto	l3260
  4601     0DA5                     l905:
  4602     0DA5  1A50               	btfsc	strtof@flags,4
  4603     0DA6  2DA8               	goto	u4341
  4604     0DA7  2DA9               	goto	u4340
  4605     0DA8                     u4341:
  4606     0DA8  2D48               	goto	l3260
  4607     0DA9                     u4340:
  4608     0DA9                     l3278:
  4609     0DA9  3001               	movlw	1
  4610     0DAA  07D1               	addwf	strtof@expon,f
  4611     0DAB  3000               	movlw	0
  4612     0DAC  3DD2               	addwfc	strtof@expon+1,f
  4613     0DAD  2D48               	goto	l3260
  4614     0DAE                     l3282:
  4615     0DAE  01D3               	clrf	strtof@eexp
  4616     0DAF  01D4               	clrf	strtof@eexp+1
  4617     0DB0                     l3284:
  4618     0DB0  085A               	movf	strtof@s,w
  4619     0DB1  0086               	movwf	6
  4620     0DB2  3001               	movlw	1	; select bank2/3
  4621     0DB3  0087               	movwf	7
  4622     0DB4  3065               	movlw	101
  4623     0DB5  0601               	xorwf	1,w
  4624     0DB6  1903               	btfsc	3,2
  4625     0DB7  2DB9               	goto	u4351
  4626     0DB8  2DBA               	goto	u4350
  4627     0DB9                     u4351:
  4628     0DB9  2DC4               	goto	l3288
  4629     0DBA                     u4350:
  4630     0DBA                     l3286:
  4631     0DBA  085A               	movf	strtof@s,w
  4632     0DBB  0086               	movwf	6
  4633     0DBC  3001               	movlw	1	; select bank2/3
  4634     0DBD  0087               	movwf	7
  4635     0DBE  3045               	movlw	69
  4636     0DBF  0601               	xorwf	1,w
  4637     0DC0  1D03               	btfss	3,2
  4638     0DC1  2DC3               	goto	u4361
  4639     0DC2  2DC4               	goto	u4360
  4640     0DC3                     u4361:
  4641     0DC3  2E7A               	goto	l3328
  4642     0DC4                     u4360:
  4643     0DC4                     l3288:
  4644     0DC4  3001               	movlw	1
  4645     0DC5  00C7               	movwf	??_strtof
  4646     0DC6  0847               	movf	??_strtof,w
  4647     0DC7  07DA               	addwf	strtof@s,f
  4648     0DC8  085A               	movf	strtof@s,w
  4649     0DC9  0086               	movwf	6
  4650     0DCA  3001               	movlw	1	; select bank2/3
  4651     0DCB  0087               	movwf	7
  4652     0DCC  302D               	movlw	45
  4653     0DCD  0601               	xorwf	1,w
  4654     0DCE  1D03               	btfss	3,2
  4655     0DCF  2DD1               	goto	u4371
  4656     0DD0  2DD2               	goto	u4370
  4657     0DD1                     u4371:
  4658     0DD1  2DD8               	goto	l3294
  4659     0DD2                     u4370:
  4660     0DD2                     l3290:
  4661     0DD2  15D0               	bsf	strtof@flags,3
  4662     0DD3                     l3292:
  4663     0DD3  3001               	movlw	1
  4664     0DD4  00C7               	movwf	??_strtof
  4665     0DD5  0847               	movf	??_strtof,w
  4666     0DD6  07DA               	addwf	strtof@s,f
  4667     0DD7  2DE3               	goto	l3300
  4668     0DD8                     l3294:
  4669     0DD8  085A               	movf	strtof@s,w
  4670     0DD9  0086               	movwf	6
  4671     0DDA  3001               	movlw	1	; select bank2/3
  4672     0DDB  0087               	movwf	7
  4673     0DDC  302B               	movlw	43
  4674     0DDD  0601               	xorwf	1,w
  4675     0DDE  1D03               	btfss	3,2
  4676     0DDF  2DE1               	goto	u4381
  4677     0DE0  2DE2               	goto	u4380
  4678     0DE1                     u4381:
  4679     0DE1  2DE3               	goto	l3300
  4680     0DE2                     u4380:
  4681     0DE2  2DD3               	goto	l3292
  4682     0DE3                     l3300:
  4683     0DE3  085A               	movf	strtof@s,w
  4684     0DE4  0086               	movwf	6
  4685     0DE5  3001               	movlw	1	; select bank2/3
  4686     0DE6  0087               	movwf	7
  4687     0DE7  3030               	movlw	48
  4688     0DE8  0601               	xorwf	1,w
  4689     0DE9  1903               	btfsc	3,2
  4690     0DEA  2DEC               	goto	u4391
  4691     0DEB  2DED               	goto	u4390
  4692     0DEC                     u4391:
  4693     0DEC  2DD3               	goto	l3292
  4694     0DED                     u4390:
  4695     0DED                     l3304:
  4696     0DED  085A               	movf	strtof@s,w
  4697     0DEE  0086               	movwf	6
  4698     0DEF  3001               	movlw	1	; select bank2/3
  4699     0DF0  0087               	movwf	7
  4700     0DF1  0801               	movf	1,w
  4701     0DF2  3ED0               	addlw	208
  4702     0DF3  00C7               	movwf	??_strtof
  4703     0DF4  30FF               	movlw	255
  4704     0DF5  1803               	skipnc
  4705     0DF6  3000               	movlw	0
  4706     0DF7  00C8               	movwf	??_strtof+1
  4707     0DF8  3000               	movlw	0
  4708     0DF9  0248               	subwf	??_strtof+1,w
  4709     0DFA  300A               	movlw	10
  4710     0DFB  1903               	skipnz
  4711     0DFC  0247               	subwf	??_strtof,w
  4712     0DFD  1803               	skipnc
  4713     0DFE  2E00               	goto	u4401
  4714     0DFF  2E01               	goto	u4400
  4715     0E00                     u4401:
  4716     0E00  2E71               	goto	l3324
  4717     0E01                     u4400:
  4718     0E01                     l3306:
  4719     0E01  085A               	movf	strtof@s,w
  4720     0E02  0086               	movwf	6
  4721     0E03  3001               	movlw	1	; select bank2/3
  4722     0E04  0087               	movwf	7
  4723     0E05  0801               	movf	1,w
  4724     0E06  3ED0               	addlw	208
  4725     0E07  00C7               	movwf	??_strtof
  4726     0E08  01C8               	clrf	??_strtof+1
  4727     0E09  0847               	movf	??_strtof,w
  4728     0E0A  00D3               	movwf	strtof@eexp
  4729     0E0B  0848               	movf	??_strtof+1,w
  4730     0E0C  00D4               	movwf	strtof@eexp+1
  4731     0E0D                     l3308:
  4732     0E0D  3001               	movlw	1
  4733     0E0E  00C7               	movwf	??_strtof
  4734     0E0F  0847               	movf	??_strtof,w
  4735     0E10  07DA               	addwf	strtof@s,f
  4736     0E11                     l3312:
  4737     0E11  085A               	movf	strtof@s,w
  4738     0E12  0086               	movwf	6
  4739     0E13  3001               	movlw	1	; select bank2/3
  4740     0E14  0087               	movwf	7
  4741     0E15  0801               	movf	1,w
  4742     0E16  3ED0               	addlw	208
  4743     0E17  00C7               	movwf	??_strtof
  4744     0E18  30FF               	movlw	255
  4745     0E19  1803               	skipnc
  4746     0E1A  3000               	movlw	0
  4747     0E1B  00C8               	movwf	??_strtof+1
  4748     0E1C  3000               	movlw	0
  4749     0E1D  0248               	subwf	??_strtof+1,w
  4750     0E1E  300A               	movlw	10
  4751     0E1F  1903               	skipnz
  4752     0E20  0247               	subwf	??_strtof,w
  4753     0E21  1803               	skipnc
  4754     0E22  2E24               	goto	u4411
  4755     0E23  2E25               	goto	u4410
  4756     0E24                     u4411:
  4757     0E24  2E71               	goto	l3324
  4758     0E25                     u4410:
  4759     0E25                     l3314:
  4760     0E25  085A               	movf	strtof@s,w
  4761     0E26  0086               	movwf	6
  4762     0E27  3001               	movlw	1	; select bank2/3
  4763     0E28  0087               	movwf	7
  4764     0E29  0801               	movf	1,w
  4765     0E2A  3ED0               	addlw	208
  4766     0E2B  00C7               	movwf	??_strtof
  4767     0E2C  01C8               	clrf	??_strtof+1
  4768     0E2D  0854               	movf	strtof@eexp+1,w
  4769     0E2E  00A1               	movwf	___wmul@multiplier+1
  4770     0E2F  0853               	movf	strtof@eexp,w
  4771     0E30  00A0               	movwf	___wmul@multiplier
  4772     0E31  300A               	movlw	10
  4773     0E32  00A2               	movwf	___wmul@multiplicand
  4774     0E33  3000               	movlw	0
  4775     0E34  00A3               	movwf	___wmul@multiplicand+1
  4776     0E35  3193  23A4  3188   	fcall	___wmul
  4777     0E38  0020               	movlb	0	; select bank0
  4778     0E39  0847               	movf	??_strtof,w
  4779     0E3A  0720               	addwf	?___wmul,w
  4780     0E3B  00D3               	movwf	strtof@eexp
  4781     0E3C  0848               	movf	??_strtof+1,w
  4782     0E3D  3D21               	addwfc	?___wmul+1,w
  4783     0E3E  00D4               	movwf	strtof@eexp+1
  4784     0E3F                     l3316:
  4785     0E3F  3001               	movlw	1
  4786     0E40  00C7               	movwf	??_strtof
  4787     0E41  0847               	movf	??_strtof,w
  4788     0E42  07DA               	addwf	strtof@s,f
  4789     0E43                     l3320:
  4790     0E43  085A               	movf	strtof@s,w
  4791     0E44  0086               	movwf	6
  4792     0E45  3001               	movlw	1	; select bank2/3
  4793     0E46  0087               	movwf	7
  4794     0E47  0801               	movf	1,w
  4795     0E48  3ED0               	addlw	208
  4796     0E49  00C7               	movwf	??_strtof
  4797     0E4A  30FF               	movlw	255
  4798     0E4B  1803               	skipnc
  4799     0E4C  3000               	movlw	0
  4800     0E4D  00C8               	movwf	??_strtof+1
  4801     0E4E  3000               	movlw	0
  4802     0E4F  0248               	subwf	??_strtof+1,w
  4803     0E50  300A               	movlw	10
  4804     0E51  1903               	skipnz
  4805     0E52  0247               	subwf	??_strtof,w
  4806     0E53  1803               	skipnc
  4807     0E54  2E56               	goto	u4421
  4808     0E55  2E57               	goto	u4420
  4809     0E56                     u4421:
  4810     0E56  2E71               	goto	l3324
  4811     0E57                     u4420:
  4812     0E57                     l3322:
  4813     0E57  085A               	movf	strtof@s,w
  4814     0E58  0086               	movwf	6
  4815     0E59  3001               	movlw	1	; select bank2/3
  4816     0E5A  0087               	movwf	7
  4817     0E5B  0801               	movf	1,w
  4818     0E5C  3ED0               	addlw	208
  4819     0E5D  00C7               	movwf	??_strtof
  4820     0E5E  01C8               	clrf	??_strtof+1
  4821     0E5F  0854               	movf	strtof@eexp+1,w
  4822     0E60  00A1               	movwf	___wmul@multiplier+1
  4823     0E61  0853               	movf	strtof@eexp,w
  4824     0E62  00A0               	movwf	___wmul@multiplier
  4825     0E63  300A               	movlw	10
  4826     0E64  00A2               	movwf	___wmul@multiplicand
  4827     0E65  3000               	movlw	0
  4828     0E66  00A3               	movwf	___wmul@multiplicand+1
  4829     0E67  3193  23A4  3188   	fcall	___wmul
  4830     0E6A  0020               	movlb	0	; select bank0
  4831     0E6B  0847               	movf	??_strtof,w
  4832     0E6C  0720               	addwf	?___wmul,w
  4833     0E6D  00D3               	movwf	strtof@eexp
  4834     0E6E  0848               	movf	??_strtof+1,w
  4835     0E6F  3D21               	addwfc	?___wmul+1,w
  4836     0E70  00D4               	movwf	strtof@eexp+1
  4837     0E71                     l3324:
  4838     0E71  1DD0               	btfss	strtof@flags,3
  4839     0E72  2E74               	goto	u4431
  4840     0E73  2E75               	goto	u4430
  4841     0E74                     u4431:
  4842     0E74  2E7A               	goto	l3328
  4843     0E75                     u4430:
  4844     0E75                     l3326:
  4845     0E75  09D3               	comf	strtof@eexp,f
  4846     0E76  09D4               	comf	strtof@eexp+1,f
  4847     0E77  0AD3               	incf	strtof@eexp,f
  4848     0E78  1903               	skipnz
  4849     0E79  0AD4               	incf	strtof@eexp+1,f
  4850     0E7A                     l3328:
  4851     0E7A  0853               	movf	strtof@eexp,w
  4852     0E7B  07D1               	addwf	strtof@expon,f
  4853     0E7C  0854               	movf	strtof@eexp+1,w
  4854     0E7D  3DD2               	addwfc	strtof@expon+1,f
  4855     0E7E  0843               	movf	strtof@res,w
  4856     0E7F  1903               	btfsc	3,2
  4857     0E80  2E82               	goto	u4441
  4858     0E81  2E83               	goto	u4440
  4859     0E82                     u4441:
  4860     0E82  2E8C               	goto	l3334
  4861     0E83                     u4440:
  4862     0E83                     l3330:
  4863     0E83  1CD0               	btfss	strtof@flags,1
  4864     0E84  2E86               	goto	u4451
  4865     0E85  2E87               	goto	u4450
  4866     0E86                     u4451:
  4867     0E86  2E8C               	goto	l3334
  4868     0E87                     u4450:
  4869     0E87                     l3332:
  4870     0E87  0843               	movf	strtof@res,w
  4871     0E88  0086               	movwf	6
  4872     0E89  0187               	clrf	7
  4873     0E8A  085A               	movf	strtof@s,w
  4874     0E8B  0081               	movwf	1
  4875     0E8C                     l3334:
  4876     0E8C  0858               	movf	strtof@_u+3,w
  4877     0E8D  00A3               	movwf	___xxtofl@val+3
  4878     0E8E  0857               	movf	strtof@_u+2,w
  4879     0E8F  00A2               	movwf	___xxtofl@val+2
  4880     0E90  0856               	movf	strtof@_u+1,w
  4881     0E91  00A1               	movwf	___xxtofl@val+1
  4882     0E92  0855               	movf	strtof@_u,w
  4883     0E93  00A0               	movwf	___xxtofl@val
  4884     0E94  3000               	movlw	0
  4885     0E95  3187  274C  3188   	fcall	___xxtofl
  4886     0E98  0020               	movlb	0	; select bank0
  4887     0E99  0823               	movf	?___xxtofl+3,w
  4888     0E9A  00D8               	movwf	strtof@_u+3
  4889     0E9B  0822               	movf	?___xxtofl+2,w
  4890     0E9C  00D7               	movwf	strtof@_u+2
  4891     0E9D  0821               	movf	?___xxtofl+1,w
  4892     0E9E  00D6               	movwf	strtof@_u+1
  4893     0E9F  0820               	movf	?___xxtofl,w
  4894     0EA0  00D5               	movwf	strtof@_u
  4895     0EA1                     l3336:
  4896     0EA1  0858               	movf	strtof@_u+3,w
  4897     0EA2  00A3               	movwf	___fleq@ff1+3
  4898     0EA3  0857               	movf	strtof@_u+2,w
  4899     0EA4  00A2               	movwf	___fleq@ff1+2
  4900     0EA5  0856               	movf	strtof@_u+1,w
  4901     0EA6  00A1               	movwf	___fleq@ff1+1
  4902     0EA7  0855               	movf	strtof@_u,w
  4903     0EA8  00A0               	movwf	___fleq@ff1
  4904     0EA9  3000               	movlw	0
  4905     0EAA  00A7               	movwf	___fleq@ff2+3
  4906     0EAB  3000               	movlw	0
  4907     0EAC  00A6               	movwf	___fleq@ff2+2
  4908     0EAD  3000               	movlw	0
  4909     0EAE  00A5               	movwf	___fleq@ff2+1
  4910     0EAF  3000               	movlw	0
  4911     0EB0  00A4               	movwf	___fleq@ff2
  4912     0EB1  3195  25D1  3188   	fcall	___fleq
  4913     0EB4  1C03               	btfss	3,0
  4914     0EB5  2EB7               	goto	u4461
  4915     0EB6  2EB8               	goto	u4460
  4916     0EB7                     u4461:
  4917     0EB7  2EC2               	goto	l929
  4918     0EB8                     u4460:
  4919     0EB8                     l3338:
  4920     0EB8  3000               	movlw	0
  4921     0EB9  0020               	movlb	0	; select bank0
  4922     0EBA  00C6               	movwf	?_strtof+3
  4923     0EBB  3000               	movlw	0
  4924     0EBC  00C5               	movwf	?_strtof+2
  4925     0EBD  3000               	movlw	0
  4926     0EBE  00C4               	movwf	?_strtof+1
  4927     0EBF  3000               	movlw	0
  4928     0EC0  00C3               	movwf	?_strtof
  4929     0EC1  2FFF               	goto	l857
  4930     0EC2                     l929:
  4931     0EC2  0020               	movlb	0	; select bank0
  4932     0EC3  1FD2               	btfss	strtof@expon+1,7
  4933     0EC4  2EC6               	goto	u4471
  4934     0EC5  2EC7               	goto	u4470
  4935     0EC6                     u4471:
  4936     0EC6  2F51               	goto	l3368
  4937     0EC7                     u4470:
  4938     0EC7                     l3342:
  4939     0EC7  09D1               	comf	strtof@expon,f
  4940     0EC8  09D2               	comf	strtof@expon+1,f
  4941     0EC9  0AD1               	incf	strtof@expon,f
  4942     0ECA  1903               	skipnz
  4943     0ECB  0AD2               	incf	strtof@expon+1,f
  4944     0ECC  2EEE               	goto	l3348
  4945     0ECD                     l3344:
  4946     0ECD  3050               	movlw	80
  4947     0ECE  0020               	movlb	0	; select bank0
  4948     0ECF  00A3               	movwf	___fldiv@a+3
  4949     0ED0  3015               	movlw	21
  4950     0ED1  00A2               	movwf	___fldiv@a+2
  4951     0ED2  3002               	movlw	2
  4952     0ED3  00A1               	movwf	___fldiv@a+1
  4953     0ED4  30F9               	movlw	249
  4954     0ED5  00A0               	movwf	___fldiv@a
  4955     0ED6  0858               	movf	strtof@_u+3,w
  4956     0ED7  00A7               	movwf	___fldiv@b+3
  4957     0ED8  0857               	movf	strtof@_u+2,w
  4958     0ED9  00A6               	movwf	___fldiv@b+2
  4959     0EDA  0856               	movf	strtof@_u+1,w
  4960     0EDB  00A5               	movwf	___fldiv@b+1
  4961     0EDC  0855               	movf	strtof@_u,w
  4962     0EDD  00A4               	movwf	___fldiv@b
  4963     0EDE  3185  25A2  3188   	fcall	___fldiv
  4964     0EE1  0020               	movlb	0	; select bank0
  4965     0EE2  0823               	movf	?___fldiv+3,w
  4966     0EE3  00D8               	movwf	strtof@_u+3
  4967     0EE4  0822               	movf	?___fldiv+2,w
  4968     0EE5  00D7               	movwf	strtof@_u+2
  4969     0EE6  0821               	movf	?___fldiv+1,w
  4970     0EE7  00D6               	movwf	strtof@_u+1
  4971     0EE8  0820               	movf	?___fldiv,w
  4972     0EE9  00D5               	movwf	strtof@_u
  4973     0EEA                     l3346:
  4974     0EEA  30F6               	movlw	246
  4975     0EEB  07D1               	addwf	strtof@expon,f
  4976     0EEC  30FF               	movlw	255
  4977     0EED  3DD2               	addwfc	strtof@expon+1,f
  4978     0EEE                     l3348:
  4979     0EEE  0852               	movf	strtof@expon+1,w
  4980     0EEF  3A80               	xorlw	128
  4981     0EF0  00C7               	movwf	??_strtof
  4982     0EF1  3080               	movlw	128
  4983     0EF2  0247               	subwf	??_strtof,w
  4984     0EF3  1D03               	skipz
  4985     0EF4  2EF7               	goto	u4485
  4986     0EF5  300A               	movlw	10
  4987     0EF6  0251               	subwf	strtof@expon,w
  4988     0EF7                     u4485:
  4989     0EF7  1803               	skipnc
  4990     0EF8  2EFA               	goto	u4481
  4991     0EF9  2EFB               	goto	u4480
  4992     0EFA                     u4481:
  4993     0EFA  2ECD               	goto	l3344
  4994     0EFB                     u4480:
  4995     0EFB  2F1C               	goto	l3354
  4996     0EFC                     l3350:
  4997     0EFC  3041               	movlw	65
  4998     0EFD  00A3               	movwf	___fldiv@a+3
  4999     0EFE  3020               	movlw	32
  5000     0EFF  00A2               	movwf	___fldiv@a+2
  5001     0F00  3000               	movlw	0
  5002     0F01  00A1               	movwf	___fldiv@a+1
  5003     0F02  3000               	movlw	0
  5004     0F03  00A0               	movwf	___fldiv@a
  5005     0F04  0858               	movf	strtof@_u+3,w
  5006     0F05  00A7               	movwf	___fldiv@b+3
  5007     0F06  0857               	movf	strtof@_u+2,w
  5008     0F07  00A6               	movwf	___fldiv@b+2
  5009     0F08  0856               	movf	strtof@_u+1,w
  5010     0F09  00A5               	movwf	___fldiv@b+1
  5011     0F0A  0855               	movf	strtof@_u,w
  5012     0F0B  00A4               	movwf	___fldiv@b
  5013     0F0C  3185  25A2  3188   	fcall	___fldiv
  5014     0F0F  0020               	movlb	0	; select bank0
  5015     0F10  0823               	movf	?___fldiv+3,w
  5016     0F11  00D8               	movwf	strtof@_u+3
  5017     0F12  0822               	movf	?___fldiv+2,w
  5018     0F13  00D7               	movwf	strtof@_u+2
  5019     0F14  0821               	movf	?___fldiv+1,w
  5020     0F15  00D6               	movwf	strtof@_u+1
  5021     0F16  0820               	movf	?___fldiv,w
  5022     0F17  00D5               	movwf	strtof@_u
  5023     0F18                     l3352:
  5024     0F18  30FF               	movlw	255
  5025     0F19  07D1               	addwf	strtof@expon,f
  5026     0F1A  30FF               	movlw	255
  5027     0F1B  3DD2               	addwfc	strtof@expon+1,f
  5028     0F1C                     l3354:
  5029     0F1C  0020               	movlb	0	; select bank0
  5030     0F1D  0851               	movf	strtof@expon,w
  5031     0F1E  0452               	iorwf	strtof@expon+1,w
  5032     0F1F  1D03               	btfss	3,2
  5033     0F20  2F22               	goto	u4491
  5034     0F21  2F23               	goto	u4490
  5035     0F22                     u4491:
  5036     0F22  2EFC               	goto	l3350
  5037     0F23                     u4490:
  5038     0F23                     l3356:
  5039     0F23  0858               	movf	strtof@_u+3,w
  5040     0F24  00A3               	movwf	___flge@ff1+3
  5041     0F25  0857               	movf	strtof@_u+2,w
  5042     0F26  00A2               	movwf	___flge@ff1+2
  5043     0F27  0856               	movf	strtof@_u+1,w
  5044     0F28  00A1               	movwf	___flge@ff1+1
  5045     0F29  0855               	movf	strtof@_u,w
  5046     0F2A  00A0               	movwf	___flge@ff1
  5047     0F2B  3000               	movlw	0
  5048     0F2C  00A7               	movwf	___flge@ff2+3
  5049     0F2D  3080               	movlw	128
  5050     0F2E  00A6               	movwf	___flge@ff2+2
  5051     0F2F  3000               	movlw	0
  5052     0F30  00A5               	movwf	___flge@ff2+1
  5053     0F31  3000               	movlw	0
  5054     0F32  00A4               	movwf	___flge@ff2
  5055     0F33  3196  26E5  3188   	fcall	___flge
  5056     0F36  1803               	btfsc	3,0
  5057     0F37  2F39               	goto	u4501
  5058     0F38  2F3A               	goto	u4500
  5059     0F39                     u4501:
  5060     0F39  2FDE               	goto	l813
  5061     0F3A                     u4500:
  5062     0F3A                     l3358:
  5063     0F3A  0020               	movlb	0	; select bank0
  5064     0F3B  1C50               	btfss	strtof@flags,0
  5065     0F3C  2F3E               	goto	u4511
  5066     0F3D  2F3F               	goto	u4510
  5067     0F3E                     u4511:
  5068     0F3E  2F48               	goto	l3364
  5069     0F3F                     u4510:
  5070     0F3F                     l3360:
  5071     0F3F  3080               	movlw	128
  5072     0F40  00C6               	movwf	?_strtof+3
  5073     0F41  3080               	movlw	128
  5074     0F42  00C5               	movwf	?_strtof+2
  5075     0F43  3000               	movlw	0
  5076     0F44  00C4               	movwf	?_strtof+1
  5077     0F45  3000               	movlw	0
  5078     0F46  00C3               	movwf	?_strtof
  5079     0F47  2FFF               	goto	l857
  5080     0F48                     l3364:
  5081     0F48  3000               	movlw	0
  5082     0F49  00C6               	movwf	?_strtof+3
  5083     0F4A  3080               	movlw	128
  5084     0F4B  00C5               	movwf	?_strtof+2
  5085     0F4C  3000               	movlw	0
  5086     0F4D  00C4               	movwf	?_strtof+1
  5087     0F4E  3000               	movlw	0
  5088     0F4F  00C3               	movwf	?_strtof
  5089     0F50  2FFF               	goto	l857
  5090     0F51                     l3368:
  5091     0F51  0852               	movf	strtof@expon+1,w
  5092     0F52  3A80               	xorlw	128
  5093     0F53  00C7               	movwf	??_strtof
  5094     0F54  3080               	movlw	128
  5095     0F55  0247               	subwf	??_strtof,w
  5096     0F56  1D03               	skipz
  5097     0F57  2F5A               	goto	u4525
  5098     0F58  3001               	movlw	1
  5099     0F59  0251               	subwf	strtof@expon,w
  5100     0F5A                     u4525:
  5101     0F5A  1C03               	skipc
  5102     0F5B  2F5D               	goto	u4521
  5103     0F5C  2F5E               	goto	u4520
  5104     0F5D                     u4521:
  5105     0F5D  2FDE               	goto	l813
  5106     0F5E                     u4520:
  5107     0F5E  2F7F               	goto	l3376
  5108     0F5F                     l3372:
  5109     0F5F  3050               	movlw	80
  5110     0F60  00AC               	movwf	___flmul@b+3
  5111     0F61  3015               	movlw	21
  5112     0F62  00AB               	movwf	___flmul@b+2
  5113     0F63  3002               	movlw	2
  5114     0F64  00AA               	movwf	___flmul@b+1
  5115     0F65  30F9               	movlw	249
  5116     0F66  00A9               	movwf	___flmul@b
  5117     0F67  0858               	movf	strtof@_u+3,w
  5118     0F68  00B0               	movwf	___flmul@a+3
  5119     0F69  0857               	movf	strtof@_u+2,w
  5120     0F6A  00AF               	movwf	___flmul@a+2
  5121     0F6B  0856               	movf	strtof@_u+1,w
  5122     0F6C  00AE               	movwf	___flmul@a+1
  5123     0F6D  0855               	movf	strtof@_u,w
  5124     0F6E  00AD               	movwf	___flmul@a
  5125     0F6F  3183  2367  3188   	fcall	___flmul
  5126     0F72  0020               	movlb	0	; select bank0
  5127     0F73  082C               	movf	?___flmul+3,w
  5128     0F74  00D8               	movwf	strtof@_u+3
  5129     0F75  082B               	movf	?___flmul+2,w
  5130     0F76  00D7               	movwf	strtof@_u+2
  5131     0F77  082A               	movf	?___flmul+1,w
  5132     0F78  00D6               	movwf	strtof@_u+1
  5133     0F79  0829               	movf	?___flmul,w
  5134     0F7A  00D5               	movwf	strtof@_u
  5135     0F7B                     l3374:
  5136     0F7B  30F6               	movlw	246
  5137     0F7C  07D1               	addwf	strtof@expon,f
  5138     0F7D  30FF               	movlw	255
  5139     0F7E  3DD2               	addwfc	strtof@expon+1,f
  5140     0F7F                     l3376:
  5141     0F7F  3000               	movlw	0
  5142     0F80  0020               	movlb	0	; select bank0
  5143     0F81  0252               	subwf	strtof@expon+1,w
  5144     0F82  300A               	movlw	10
  5145     0F83  1903               	skipnz
  5146     0F84  0251               	subwf	strtof@expon,w
  5147     0F85  1803               	skipnc
  5148     0F86  2F88               	goto	u4531
  5149     0F87  2F89               	goto	u4530
  5150     0F88                     u4531:
  5151     0F88  2F5F               	goto	l3372
  5152     0F89                     u4530:
  5153     0F89  2FAA               	goto	l3382
  5154     0F8A                     l3378:
  5155     0F8A  3041               	movlw	65
  5156     0F8B  00AC               	movwf	___flmul@b+3
  5157     0F8C  3020               	movlw	32
  5158     0F8D  00AB               	movwf	___flmul@b+2
  5159     0F8E  3000               	movlw	0
  5160     0F8F  00AA               	movwf	___flmul@b+1
  5161     0F90  3000               	movlw	0
  5162     0F91  00A9               	movwf	___flmul@b
  5163     0F92  0858               	movf	strtof@_u+3,w
  5164     0F93  00B0               	movwf	___flmul@a+3
  5165     0F94  0857               	movf	strtof@_u+2,w
  5166     0F95  00AF               	movwf	___flmul@a+2
  5167     0F96  0856               	movf	strtof@_u+1,w
  5168     0F97  00AE               	movwf	___flmul@a+1
  5169     0F98  0855               	movf	strtof@_u,w
  5170     0F99  00AD               	movwf	___flmul@a
  5171     0F9A  3183  2367  3188   	fcall	___flmul
  5172     0F9D  0020               	movlb	0	; select bank0
  5173     0F9E  082C               	movf	?___flmul+3,w
  5174     0F9F  00D8               	movwf	strtof@_u+3
  5175     0FA0  082B               	movf	?___flmul+2,w
  5176     0FA1  00D7               	movwf	strtof@_u+2
  5177     0FA2  082A               	movf	?___flmul+1,w
  5178     0FA3  00D6               	movwf	strtof@_u+1
  5179     0FA4  0829               	movf	?___flmul,w
  5180     0FA5  00D5               	movwf	strtof@_u
  5181     0FA6                     l3380:
  5182     0FA6  30FF               	movlw	255
  5183     0FA7  07D1               	addwf	strtof@expon,f
  5184     0FA8  30FF               	movlw	255
  5185     0FA9  3DD2               	addwfc	strtof@expon+1,f
  5186     0FAA                     l3382:
  5187     0FAA  0851               	movf	strtof@expon,w
  5188     0FAB  0452               	iorwf	strtof@expon+1,w
  5189     0FAC  1D03               	btfss	3,2
  5190     0FAD  2FAF               	goto	u4541
  5191     0FAE  2FB0               	goto	u4540
  5192     0FAF                     u4541:
  5193     0FAF  2F8A               	goto	l3378
  5194     0FB0                     u4540:
  5195     0FB0                     l3384:
  5196     0FB0  307F               	movlw	127
  5197     0FB1  00A3               	movwf	___flge@ff1+3
  5198     0FB2  307F               	movlw	127
  5199     0FB3  00A2               	movwf	___flge@ff1+2
  5200     0FB4  30FF               	movlw	255
  5201     0FB5  00A1               	movwf	___flge@ff1+1
  5202     0FB6  30FF               	movlw	255
  5203     0FB7  00A0               	movwf	___flge@ff1
  5204     0FB8  0858               	movf	strtof@_u+3,w
  5205     0FB9  00A7               	movwf	___flge@ff2+3
  5206     0FBA  0857               	movf	strtof@_u+2,w
  5207     0FBB  00A6               	movwf	___flge@ff2+2
  5208     0FBC  0856               	movf	strtof@_u+1,w
  5209     0FBD  00A5               	movwf	___flge@ff2+1
  5210     0FBE  0855               	movf	strtof@_u,w
  5211     0FBF  00A4               	movwf	___flge@ff2
  5212     0FC0  3196  26E5  3188   	fcall	___flge
  5213     0FC3  1803               	btfsc	3,0
  5214     0FC4  2FC6               	goto	u4551
  5215     0FC5  2FC7               	goto	u4550
  5216     0FC6                     u4551:
  5217     0FC6  2FDE               	goto	l813
  5218     0FC7                     u4550:
  5219     0FC7                     l3386:
  5220     0FC7  0020               	movlb	0	; select bank0
  5221     0FC8  1C50               	btfss	strtof@flags,0
  5222     0FC9  2FCB               	goto	u4561
  5223     0FCA  2FCC               	goto	u4560
  5224     0FCB                     u4561:
  5225     0FCB  2FD5               	goto	l3392
  5226     0FCC                     u4560:
  5227     0FCC                     l3388:
  5228     0FCC  3080               	movlw	128
  5229     0FCD  00C6               	movwf	?_strtof+3
  5230     0FCE  3080               	movlw	128
  5231     0FCF  00C5               	movwf	?_strtof+2
  5232     0FD0  3000               	movlw	0
  5233     0FD1  00C4               	movwf	?_strtof+1
  5234     0FD2  3000               	movlw	0
  5235     0FD3  00C3               	movwf	?_strtof
  5236     0FD4  2FFF               	goto	l857
  5237     0FD5                     l3392:
  5238     0FD5  3000               	movlw	0
  5239     0FD6  00C6               	movwf	?_strtof+3
  5240     0FD7  3080               	movlw	128
  5241     0FD8  00C5               	movwf	?_strtof+2
  5242     0FD9  3000               	movlw	0
  5243     0FDA  00C4               	movwf	?_strtof+1
  5244     0FDB  3000               	movlw	0
  5245     0FDC  00C3               	movwf	?_strtof
  5246     0FDD  2FFF               	goto	l857
  5247     0FDE                     l813:
  5248     0FDE  0020               	movlb	0	; select bank0
  5249     0FDF  1C50               	btfss	strtof@flags,0
  5250     0FE0  2FE2               	goto	u4571
  5251     0FE1  2FE3               	goto	u4570
  5252     0FE2                     u4571:
  5253     0FE2  2FF7               	goto	l3398
  5254     0FE3                     u4570:
  5255     0FE3                     l3396:
  5256     0FE3  0858               	movf	strtof@_u+3,w
  5257     0FE4  00A3               	movwf	___flneg@f1+3
  5258     0FE5  0857               	movf	strtof@_u+2,w
  5259     0FE6  00A2               	movwf	___flneg@f1+2
  5260     0FE7  0856               	movf	strtof@_u+1,w
  5261     0FE8  00A1               	movwf	___flneg@f1+1
  5262     0FE9  0855               	movf	strtof@_u,w
  5263     0FEA  00A0               	movwf	___flneg@f1
  5264     0FEB  3192  22F3  3188   	fcall	___flneg
  5265     0FEE  0020               	movlb	0	; select bank0
  5266     0FEF  0823               	movf	?___flneg+3,w
  5267     0FF0  00D8               	movwf	strtof@_u+3
  5268     0FF1  0822               	movf	?___flneg+2,w
  5269     0FF2  00D7               	movwf	strtof@_u+2
  5270     0FF3  0821               	movf	?___flneg+1,w
  5271     0FF4  00D6               	movwf	strtof@_u+1
  5272     0FF5  0820               	movf	?___flneg,w
  5273     0FF6  00D5               	movwf	strtof@_u
  5274     0FF7                     l3398:
  5275     0FF7  0858               	movf	strtof@_u+3,w
  5276     0FF8  00C6               	movwf	?_strtof+3
  5277     0FF9  0857               	movf	strtof@_u+2,w
  5278     0FFA  00C5               	movwf	?_strtof+2
  5279     0FFB  0856               	movf	strtof@_u+1,w
  5280     0FFC  00C4               	movwf	?_strtof+1
  5281     0FFD  0855               	movf	strtof@_u,w
  5282     0FFE  00C3               	movwf	?_strtof
  5283     0FFF                     l857:
  5284     0FFF  0008               	return
  5285     1000                     __end_of_strtof:
  5286                           
  5287                           	psect	text10
  5288     131F                     __ptext10:	
  5289 ;; *************** function _toupper *****************
  5290 ;; Defined at:
  5291 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\toupper.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  c               2    6[BANK0 ] int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  2    6[BANK0 ] int 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;Total ram usage:        4 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 3
  5312 ;; This function calls:
  5313 ;;		_islower
  5314 ;; This function is called by:
  5315 ;;		_strtof
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319     131F                     _toupper:	
  5320                           ;psect for function _toupper
  5321                           
  5322     131F                     l2968:	
  5323                           ;incstack = 0
  5324                           ; Regs used in _toupper: [wreg+status,2+status,0]
  5325                           
  5326     131F                     l2972:
  5327     131F  0020               	movlb	0	; select bank0
  5328     1320  0826               	movf	toupper@c,w
  5329     1321  3E9F               	addlw	159
  5330     1322  00A8               	movwf	??_toupper
  5331     1323  30FF               	movlw	255
  5332     1324  3D27               	addwfc	toupper@c+1,w
  5333     1325  00A9               	movwf	??_toupper+1
  5334     1326  3000               	movlw	0
  5335     1327  0229               	subwf	??_toupper+1,w
  5336     1328  301A               	movlw	26
  5337     1329  1903               	skipnz
  5338     132A  0228               	subwf	??_toupper,w
  5339     132B  1803               	skipnc
  5340     132C  2B2E               	goto	u3621
  5341     132D  2B2F               	goto	u3620
  5342     132E                     u3621:
  5343     132E  2B36               	goto	l992
  5344     132F                     u3620:
  5345     132F                     l2974:
  5346     132F  305F               	movlw	95
  5347     1330  0526               	andwf	toupper@c,w
  5348     1331  00A6               	movwf	?_toupper
  5349     1332  3000               	movlw	0
  5350     1333  0527               	andwf	toupper@c+1,w
  5351     1334  00A7               	movwf	?_toupper+1
  5352     1335  2B36               	goto	l995
  5353     1336                     l992:
  5354     1336                     l995:
  5355     1336  0008               	return
  5356     1337                     __end_of_toupper:
  5357                           
  5358                           	psect	text11
  5359     1350                     __ptext11:	
  5360 ;; *************** function _islower *****************
  5361 ;; Defined at:
  5362 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\islower.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  c               2    0[BANK0 ] int 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2    0[BANK0 ] int 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;Total ram usage:        6 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 2
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_toupper
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390     1350                     _islower:	
  5391                           ;psect for function _islower
  5392                           
  5393     1350                     l2528:	
  5394                           ;incstack = 0
  5395                           ; Regs used in _islower: [wreg+status,2+status,0]
  5396                           
  5397     1350  0020               	movlb	0	; select bank0
  5398     1351  0820               	movf	islower@c,w
  5399     1352  3E9F               	addlw	159
  5400     1353  00A2               	movwf	??_islower
  5401     1354  30FF               	movlw	255
  5402     1355  3D21               	addwfc	islower@c+1,w
  5403     1356  00A3               	movwf	??_islower+1
  5404     1357  3000               	movlw	0
  5405     1358  0223               	subwf	??_islower+1,w
  5406     1359  301A               	movlw	26
  5407     135A  1903               	skipnz
  5408     135B  0222               	subwf	??_islower,w
  5409     135C  1C03               	skipc
  5410     135D  2B5F               	goto	u2681
  5411     135E  2B61               	goto	u2680
  5412     135F                     u2681:
  5413     135F  3001               	movlw	1
  5414     1360  2B62               	goto	u2690
  5415     1361                     u2680:
  5416     1361  3000               	movlw	0
  5417     1362                     u2690:
  5418     1362  00A4               	movwf	??_islower+2
  5419     1363  01A5               	clrf	??_islower+3
  5420     1364  0824               	movf	??_islower+2,w
  5421     1365  00A0               	movwf	?_islower
  5422     1366  0825               	movf	??_islower+3,w
  5423     1367  00A1               	movwf	?_islower+1
  5424     1368                     l1001:
  5425     1368  0008               	return
  5426     1369                     __end_of_islower:
  5427                           
  5428                           	psect	text12
  5429     0804                     __ptext12:	
  5430 ;; *************** function _nanf *****************
  5431 ;; Defined at:
  5432 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nanf.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5435 ;;		 -> STR_13(1), 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  u               4    4[BANK0 ] struct .
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  4    0[BANK0 ] float 
  5440 ;; Registers used:
  5441 ;;		wreg
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;Total ram usage:        8 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; Hardware stack levels required when called: 2
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_strtof
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461     0804                     _nanf:	
  5462                           ;psect for function _nanf
  5463                           
  5464     0804                     l2948:	
  5465                           ;incstack = 0
  5466                           ; Regs used in _nanf: [wreg]
  5467                           
  5468     0804  307F               	movlw	127
  5469     0805  0020               	movlb	0	; select bank0
  5470     0806  00A7               	movwf	nanf@u+3
  5471     0807  30FF               	movlw	255
  5472     0808  00A6               	movwf	nanf@u+2
  5473     0809  30FF               	movlw	255
  5474     080A  00A5               	movwf	nanf@u+1
  5475     080B  30FF               	movlw	255
  5476     080C  00A4               	movwf	nanf@u
  5477     080D  0827               	movf	nanf@u+3,w
  5478     080E  00A3               	movwf	?_nanf+3
  5479     080F  0826               	movf	nanf@u+2,w
  5480     0810  00A2               	movwf	?_nanf+2
  5481     0811  0825               	movf	nanf@u+1,w
  5482     0812  00A1               	movwf	?_nanf+1
  5483     0813  0824               	movf	nanf@u,w
  5484     0814  00A0               	movwf	?_nanf
  5485     0815                     l987:
  5486     0815  0008               	return
  5487     0816                     __end_of_nanf:
  5488                           
  5489                           	psect	text13
  5490     140A                     __ptext13:	
  5491 ;; *************** function _isxdigit *****************
  5492 ;; Defined at:
  5493 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isxdigit.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  c               2    6[BANK0 ] int 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  2    6[BANK0 ] int 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;Total ram usage:        7 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; Hardware stack levels required when called: 3
  5514 ;; This function calls:
  5515 ;;		_isdigit
  5516 ;; This function is called by:
  5517 ;;		_strtof
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521     140A                     _isxdigit:	
  5522                           ;psect for function _isxdigit
  5523                           
  5524     140A                     l2952:	
  5525                           ;incstack = 0
  5526                           ; Regs used in _isxdigit: [wreg+status,2+status,0]
  5527                           
  5528     140A                     l978:
  5529     140A  0020               	movlb	0	; select bank0
  5530     140B  01AC               	clrf	_isxdigit$846
  5531     140C  0AAC               	incf	_isxdigit$846,f
  5532     140D                     l2958:
  5533     140D  0826               	movf	isxdigit@c,w
  5534     140E  3ED0               	addlw	208
  5535     140F  00A8               	movwf	??_isxdigit
  5536     1410  30FF               	movlw	255
  5537     1411  3D27               	addwfc	isxdigit@c+1,w
  5538     1412  00A9               	movwf	??_isxdigit+1
  5539     1413  3000               	movlw	0
  5540     1414  0229               	subwf	??_isxdigit+1,w
  5541     1415  300A               	movlw	10
  5542     1416  1903               	skipnz
  5543     1417  0228               	subwf	??_isxdigit,w
  5544     1418  1C03               	skipc
  5545     1419  2C1B               	goto	u3601
  5546     141A  2C1C               	goto	u3600
  5547     141B                     u3601:
  5548     141B  2C32               	goto	l2964
  5549     141C                     u3600:
  5550     141C                     l2960:
  5551     141C  3020               	movlw	32
  5552     141D  0426               	iorwf	isxdigit@c,w
  5553     141E  00A8               	movwf	??_isxdigit
  5554     141F  3000               	movlw	0
  5555     1420  0427               	iorwf	isxdigit@c+1,w
  5556     1421  00A9               	movwf	??_isxdigit+1
  5557     1422  0828               	movf	??_isxdigit,w
  5558     1423  3E9F               	addlw	159
  5559     1424  00AA               	movwf	??_isxdigit+2
  5560     1425  30FF               	movlw	255
  5561     1426  3D29               	addwfc	??_isxdigit+1,w
  5562     1427  00AB               	movwf	??_isxdigit+3
  5563     1428  3000               	movlw	0
  5564     1429  022B               	subwf	??_isxdigit+3,w
  5565     142A  3006               	movlw	6
  5566     142B  1903               	skipnz
  5567     142C  022A               	subwf	??_isxdigit+2,w
  5568     142D  1C03               	skipc
  5569     142E  2C30               	goto	u3611
  5570     142F  2C31               	goto	u3610
  5571     1430                     u3611:
  5572     1430  2C32               	goto	l2964
  5573     1431                     u3610:
  5574     1431                     l2962:
  5575     1431  01AC               	clrf	_isxdigit$846
  5576     1432                     l2964:
  5577     1432  082C               	movf	_isxdigit$846,w
  5578     1433  00A8               	movwf	??_isxdigit
  5579     1434  01A9               	clrf	??_isxdigit+1
  5580     1435  0828               	movf	??_isxdigit,w
  5581     1436  00A6               	movwf	?_isxdigit
  5582     1437  0829               	movf	??_isxdigit+1,w
  5583     1438  00A7               	movwf	?_isxdigit+1
  5584     1439                     l981:
  5585     1439  0008               	return
  5586     143A                     __end_of_isxdigit:
  5587                           
  5588                           	psect	text14
  5589     1337                     __ptext14:	
  5590 ;; *************** function _isdigit *****************
  5591 ;; Defined at:
  5592 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  c               2    0[BANK0 ] int 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;		None
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  2    0[BANK0 ] int 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;Total ram usage:        6 bytes
  5611 ;; Hardware stack levels used: 1
  5612 ;; Hardware stack levels required when called: 2
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_strtof
  5617 ;;		_isxdigit
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621     1337                     _isdigit:	
  5622                           ;psect for function _isdigit
  5623                           
  5624     1337                     l2524:	
  5625                           ;incstack = 0
  5626                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5627                           
  5628     1337  0020               	movlb	0	; select bank0
  5629     1338  0820               	movf	isdigit@c,w
  5630     1339  3ED0               	addlw	208
  5631     133A  00A2               	movwf	??_isdigit
  5632     133B  30FF               	movlw	255
  5633     133C  3D21               	addwfc	isdigit@c+1,w
  5634     133D  00A3               	movwf	??_isdigit+1
  5635     133E  3000               	movlw	0
  5636     133F  0223               	subwf	??_isdigit+1,w
  5637     1340  300A               	movlw	10
  5638     1341  1903               	skipnz
  5639     1342  0222               	subwf	??_isdigit,w
  5640     1343  1C03               	skipc
  5641     1344  2B46               	goto	u2661
  5642     1345  2B48               	goto	u2660
  5643     1346                     u2661:
  5644     1346  3001               	movlw	1
  5645     1347  2B49               	goto	u2670
  5646     1348                     u2660:
  5647     1348  3000               	movlw	0
  5648     1349                     u2670:
  5649     1349  00A4               	movwf	??_isdigit+2
  5650     134A  01A5               	clrf	??_isdigit+3
  5651     134B  0824               	movf	??_isdigit+2,w
  5652     134C  00A0               	movwf	?_isdigit
  5653     134D  0825               	movf	??_isdigit+3,w
  5654     134E  00A1               	movwf	?_isdigit+1
  5655     134F                     l961:
  5656     134F  0008               	return
  5657     1350                     __end_of_isdigit:
  5658                           
  5659                           	psect	text15
  5660     13C4                     __ptext15:	
  5661 ;; *************** function _isspace *****************
  5662 ;; Defined at:
  5663 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  c               2    0[BANK0 ] int 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  2    0[BANK0 ] int 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;Total ram usage:        5 bytes
  5682 ;; Hardware stack levels used: 1
  5683 ;; Hardware stack levels required when called: 2
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_strtof
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691     13C4                     _isspace:	
  5692                           ;psect for function _isspace
  5693                           
  5694     13C4                     l2936:	
  5695                           ;incstack = 0
  5696                           ; Regs used in _isspace: [wreg+status,2+status,0]
  5697                           
  5698     13C4  0020               	movlb	0	; select bank0
  5699     13C5  01A4               	clrf	_isspace$834
  5700     13C6  0AA4               	incf	_isspace$834,f
  5701     13C7                     l2938:
  5702     13C7  3020               	movlw	32
  5703     13C8  0620               	xorwf	isspace@c,w
  5704     13C9  0421               	iorwf	isspace@c+1,w
  5705     13CA  1903               	btfsc	3,2
  5706     13CB  2BCD               	goto	u3581
  5707     13CC  2BCE               	goto	u3580
  5708     13CD                     u3581:
  5709     13CD  2BDE               	goto	l2944
  5710     13CE                     u3580:
  5711     13CE                     l2940:
  5712     13CE  0820               	movf	isspace@c,w
  5713     13CF  3EF7               	addlw	247
  5714     13D0  00A2               	movwf	??_isspace
  5715     13D1  30FF               	movlw	255
  5716     13D2  3D21               	addwfc	isspace@c+1,w
  5717     13D3  00A3               	movwf	??_isspace+1
  5718     13D4  3000               	movlw	0
  5719     13D5  0223               	subwf	??_isspace+1,w
  5720     13D6  3005               	movlw	5
  5721     13D7  1903               	skipnz
  5722     13D8  0222               	subwf	??_isspace,w
  5723     13D9  1C03               	skipc
  5724     13DA  2BDC               	goto	u3591
  5725     13DB  2BDD               	goto	u3590
  5726     13DC                     u3591:
  5727     13DC  2BDE               	goto	l2944
  5728     13DD                     u3590:
  5729     13DD                     l2942:
  5730     13DD  01A4               	clrf	_isspace$834
  5731     13DE                     l2944:
  5732     13DE  0824               	movf	_isspace$834,w
  5733     13DF  00A2               	movwf	??_isspace
  5734     13E0  01A3               	clrf	??_isspace+1
  5735     13E1  0822               	movf	??_isspace,w
  5736     13E2  00A0               	movwf	?_isspace
  5737     13E3  0823               	movf	??_isspace+1,w
  5738     13E4  00A1               	movwf	?_isspace+1
  5739     13E5                     l969:
  5740     13E5  0008               	return
  5741     13E6                     __end_of_isspace:
  5742                           
  5743                           	psect	text16
  5744     074C                     __ptext16:	
  5745 ;; *************** function ___xxtofl *****************
  5746 ;; Defined at:
  5747 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  sign            1    wreg     unsigned char 
  5750 ;;  val             4    0[BANK0 ] long 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  sign            1    8[BANK0 ] unsigned char 
  5753 ;;  arg             4   10[BANK0 ] unsigned long 
  5754 ;;  exp             1    9[BANK0 ] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  4    0[BANK0 ] unsigned char 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;Total ram usage:       14 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 2
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_strtof
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778     074C                     ___xxtofl:	
  5779                           ;psect for function ___xxtofl
  5780                           
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5784                           ;___xxtofl@sign stored from wreg
  5785     074C  0020               	movlb	0	; select bank0
  5786     074D  00A8               	movwf	___xxtofl@sign
  5787     074E                     l2880:
  5788     074E  0828               	movf	___xxtofl@sign,w
  5789     074F  1903               	btfsc	3,2
  5790     0750  2F52               	goto	u3421
  5791     0751  2F53               	goto	u3420
  5792     0752                     u3421:
  5793     0752  2F67               	goto	l2886
  5794     0753                     u3420:
  5795     0753                     l2882:
  5796     0753  1FA3               	btfss	___xxtofl@val+3,7
  5797     0754  2F56               	goto	u3431
  5798     0755  2F57               	goto	u3430
  5799     0756                     u3431:
  5800     0756  2F67               	goto	l2886
  5801     0757                     u3430:
  5802     0757                     l2884:
  5803     0757  0920               	comf	___xxtofl@val,w
  5804     0758  00AA               	movwf	___xxtofl@arg
  5805     0759  0921               	comf	___xxtofl@val+1,w
  5806     075A  00AB               	movwf	___xxtofl@arg+1
  5807     075B  0922               	comf	___xxtofl@val+2,w
  5808     075C  00AC               	movwf	___xxtofl@arg+2
  5809     075D  0923               	comf	___xxtofl@val+3,w
  5810     075E  00AD               	movwf	___xxtofl@arg+3
  5811     075F  0AAA               	incf	___xxtofl@arg,f
  5812     0760  1903               	skipnz
  5813     0761  0AAB               	incf	___xxtofl@arg+1,f
  5814     0762  1903               	skipnz
  5815     0763  0AAC               	incf	___xxtofl@arg+2,f
  5816     0764  1903               	skipnz
  5817     0765  0AAD               	incf	___xxtofl@arg+3,f
  5818     0766  2F6F               	goto	l742
  5819     0767                     l2886:
  5820     0767  0823               	movf	___xxtofl@val+3,w
  5821     0768  00AD               	movwf	___xxtofl@arg+3
  5822     0769  0822               	movf	___xxtofl@val+2,w
  5823     076A  00AC               	movwf	___xxtofl@arg+2
  5824     076B  0821               	movf	___xxtofl@val+1,w
  5825     076C  00AB               	movwf	___xxtofl@arg+1
  5826     076D  0820               	movf	___xxtofl@val,w
  5827     076E  00AA               	movwf	___xxtofl@arg
  5828     076F                     l742:
  5829     076F  0823               	movf	___xxtofl@val+3,w
  5830     0770  0422               	iorwf	___xxtofl@val+2,w
  5831     0771  0421               	iorwf	___xxtofl@val+1,w
  5832     0772  0420               	iorwf	___xxtofl@val,w
  5833     0773  1D03               	skipz
  5834     0774  2F76               	goto	u3441
  5835     0775  2F77               	goto	u3440
  5836     0776                     u3441:
  5837     0776  2F80               	goto	l2892
  5838     0777                     u3440:
  5839     0777                     l2888:
  5840     0777  3000               	movlw	0
  5841     0778  00A3               	movwf	?___xxtofl+3
  5842     0779  3000               	movlw	0
  5843     077A  00A2               	movwf	?___xxtofl+2
  5844     077B  3000               	movlw	0
  5845     077C  00A1               	movwf	?___xxtofl+1
  5846     077D  3000               	movlw	0
  5847     077E  00A0               	movwf	?___xxtofl
  5848     077F  2FF6               	goto	l744
  5849     0780                     l2892:
  5850     0780  3096               	movlw	150
  5851     0781  00A9               	movwf	___xxtofl@exp
  5852     0782  2F8E               	goto	l2896
  5853     0783                     l2894:
  5854     0783  3001               	movlw	1
  5855     0784  00A4               	movwf	??___xxtofl
  5856     0785  0824               	movf	??___xxtofl,w
  5857     0786  07A9               	addwf	___xxtofl@exp,f
  5858     0787  3001               	movlw	1
  5859     0788                     u3455:
  5860     0788  36AD               	lsrf	___xxtofl@arg+3,f
  5861     0789  0CAC               	rrf	___xxtofl@arg+2,f
  5862     078A  0CAB               	rrf	___xxtofl@arg+1,f
  5863     078B  0CAA               	rrf	___xxtofl@arg,f
  5864     078C  0B89               	decfsz	9,f
  5865     078D  2F88               	goto	u3455
  5866     078E                     l2896:
  5867     078E  30FE               	movlw	254
  5868     078F  052D               	andwf	___xxtofl@arg+3,w
  5869     0790  1D03               	btfss	3,2
  5870     0791  2F93               	goto	u3461
  5871     0792  2F94               	goto	u3460
  5872     0793                     u3461:
  5873     0793  2F83               	goto	l2894
  5874     0794                     u3460:
  5875     0794  2FA8               	goto	l748
  5876     0795                     l2898:
  5877     0795  3001               	movlw	1
  5878     0796  00A4               	movwf	??___xxtofl
  5879     0797  0824               	movf	??___xxtofl,w
  5880     0798  07A9               	addwf	___xxtofl@exp,f
  5881     0799                     l2900:
  5882     0799  3001               	movlw	1
  5883     079A  07AA               	addwf	___xxtofl@arg,f
  5884     079B  3000               	movlw	0
  5885     079C  3DAB               	addwfc	___xxtofl@arg+1,f
  5886     079D  3000               	movlw	0
  5887     079E  3DAC               	addwfc	___xxtofl@arg+2,f
  5888     079F  3000               	movlw	0
  5889     07A0  3DAD               	addwfc	___xxtofl@arg+3,f
  5890     07A1                     l2902:
  5891     07A1  3001               	movlw	1
  5892     07A2                     u3475:
  5893     07A2  36AD               	lsrf	___xxtofl@arg+3,f
  5894     07A3  0CAC               	rrf	___xxtofl@arg+2,f
  5895     07A4  0CAB               	rrf	___xxtofl@arg+1,f
  5896     07A5  0CAA               	rrf	___xxtofl@arg,f
  5897     07A6  0B89               	decfsz	9,f
  5898     07A7  2FA2               	goto	u3475
  5899     07A8                     l748:
  5900     07A8  30FF               	movlw	255
  5901     07A9  052D               	andwf	___xxtofl@arg+3,w
  5902     07AA  1D03               	btfss	3,2
  5903     07AB  2FAD               	goto	u3481
  5904     07AC  2FAE               	goto	u3480
  5905     07AD                     u3481:
  5906     07AD  2F95               	goto	l2898
  5907     07AE                     u3480:
  5908     07AE  2FB8               	goto	l2906
  5909     07AF                     l2904:
  5910     07AF  3001               	movlw	1
  5911     07B0  02A9               	subwf	___xxtofl@exp,f
  5912     07B1  3001               	movlw	1
  5913     07B2                     u3495:
  5914     07B2  35AA               	lslf	___xxtofl@arg,f
  5915     07B3  0DAB               	rlf	___xxtofl@arg+1,f
  5916     07B4  0DAC               	rlf	___xxtofl@arg+2,f
  5917     07B5  0DAD               	rlf	___xxtofl@arg+3,f
  5918     07B6  0B89               	decfsz	9,f
  5919     07B7  2FB2               	goto	u3495
  5920     07B8                     l2906:
  5921     07B8  1BAC               	btfsc	___xxtofl@arg+2,7
  5922     07B9  2FBB               	goto	u3501
  5923     07BA  2FBC               	goto	u3500
  5924     07BB                     u3501:
  5925     07BB  2FC2               	goto	l755
  5926     07BC                     u3500:
  5927     07BC                     l2908:
  5928     07BC  3002               	movlw	2
  5929     07BD  0229               	subwf	___xxtofl@exp,w
  5930     07BE  1803               	skipnc
  5931     07BF  2FC1               	goto	u3511
  5932     07C0  2FC2               	goto	u3510
  5933     07C1                     u3511:
  5934     07C1  2FAF               	goto	l2904
  5935     07C2                     u3510:
  5936     07C2                     l755:
  5937     07C2  1829               	btfsc	___xxtofl@exp,0
  5938     07C3  2FC5               	goto	u3521
  5939     07C4  2FC6               	goto	u3520
  5940     07C5                     u3521:
  5941     07C5  2FCE               	goto	l756
  5942     07C6                     u3520:
  5943     07C6                     l2910:
  5944     07C6  30FF               	movlw	255
  5945     07C7  05AA               	andwf	___xxtofl@arg,f
  5946     07C8  30FF               	movlw	255
  5947     07C9  05AB               	andwf	___xxtofl@arg+1,f
  5948     07CA  307F               	movlw	127
  5949     07CB  05AC               	andwf	___xxtofl@arg+2,f
  5950     07CC  30FF               	movlw	255
  5951     07CD  05AD               	andwf	___xxtofl@arg+3,f
  5952     07CE                     l756:
  5953     07CE  1003               	clrc
  5954     07CF  0CA9               	rrf	___xxtofl@exp,f
  5955     07D0                     l2912:
  5956     07D0  0829               	movf	___xxtofl@exp,w
  5957     07D1  00A4               	movwf	??___xxtofl
  5958     07D2  01A5               	clrf	??___xxtofl+1
  5959     07D3  01A6               	clrf	??___xxtofl+2
  5960     07D4  01A7               	clrf	??___xxtofl+3
  5961     07D5  3018               	movlw	24
  5962     07D6                     u3535:
  5963     07D6  35A4               	lslf	??___xxtofl,f
  5964     07D7  0DA5               	rlf	??___xxtofl+1,f
  5965     07D8  0DA6               	rlf	??___xxtofl+2,f
  5966     07D9  0DA7               	rlf	??___xxtofl+3,f
  5967     07DA                     u3530:
  5968     07DA  0B89               	decfsz	9,f
  5969     07DB  2FD6               	goto	u3535
  5970     07DC  0824               	movf	??___xxtofl,w
  5971     07DD  04AA               	iorwf	___xxtofl@arg,f
  5972     07DE  0825               	movf	??___xxtofl+1,w
  5973     07DF  04AB               	iorwf	___xxtofl@arg+1,f
  5974     07E0  0826               	movf	??___xxtofl+2,w
  5975     07E1  04AC               	iorwf	___xxtofl@arg+2,f
  5976     07E2  0827               	movf	??___xxtofl+3,w
  5977     07E3  04AD               	iorwf	___xxtofl@arg+3,f
  5978     07E4                     l2914:
  5979     07E4  0828               	movf	___xxtofl@sign,w
  5980     07E5  1903               	btfsc	3,2
  5981     07E6  2FE8               	goto	u3541
  5982     07E7  2FE9               	goto	u3540
  5983     07E8                     u3541:
  5984     07E8  2FEE               	goto	l2920
  5985     07E9                     u3540:
  5986     07E9                     l2916:
  5987     07E9  1FA3               	btfss	___xxtofl@val+3,7
  5988     07EA  2FEC               	goto	u3551
  5989     07EB  2FED               	goto	u3550
  5990     07EC                     u3551:
  5991     07EC  2FEE               	goto	l2920
  5992     07ED                     u3550:
  5993     07ED                     l2918:
  5994     07ED  17AD               	bsf	___xxtofl@arg+3,7
  5995     07EE                     l2920:
  5996     07EE  082D               	movf	___xxtofl@arg+3,w
  5997     07EF  00A3               	movwf	?___xxtofl+3
  5998     07F0  082C               	movf	___xxtofl@arg+2,w
  5999     07F1  00A2               	movwf	?___xxtofl+2
  6000     07F2  082B               	movf	___xxtofl@arg+1,w
  6001     07F3  00A1               	movwf	?___xxtofl+1
  6002     07F4  082A               	movf	___xxtofl@arg,w
  6003     07F5  00A0               	movwf	?___xxtofl
  6004     07F6                     l744:
  6005     07F6  0008               	return
  6006     07F7                     __end_of___xxtofl:
  6007                           
  6008                           	psect	text17
  6009     13A4                     __ptext17:	
  6010 ;; *************** function ___wmul *****************
  6011 ;; Defined at:
  6012 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6015 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  product         2    4[BANK0 ] unsigned int 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  2    0[BANK0 ] unsigned int 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6027 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;Total ram usage:        6 bytes
  6032 ;; Hardware stack levels used: 1
  6033 ;; Hardware stack levels required when called: 2
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_strtof
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041     13A4                     ___wmul:	
  6042                           ;psect for function ___wmul
  6043                           
  6044     13A4                     l2532:	
  6045                           ;incstack = 0
  6046                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6047                           
  6048     13A4  0020               	movlb	0	; select bank0
  6049     13A5  01A4               	clrf	___wmul@product
  6050     13A6  01A5               	clrf	___wmul@product+1
  6051     13A7                     l2534:
  6052     13A7  1C20               	btfss	___wmul@multiplier,0
  6053     13A8  2BAA               	goto	u2701
  6054     13A9  2BAB               	goto	u2700
  6055     13AA                     u2701:
  6056     13AA  2BAF               	goto	l301
  6057     13AB                     u2700:
  6058     13AB                     l2536:
  6059     13AB  0822               	movf	___wmul@multiplicand,w
  6060     13AC  07A4               	addwf	___wmul@product,f
  6061     13AD  0823               	movf	___wmul@multiplicand+1,w
  6062     13AE  3DA5               	addwfc	___wmul@product+1,f
  6063     13AF                     l301:
  6064     13AF  3001               	movlw	1
  6065     13B0                     u2715:
  6066     13B0  35A2               	lslf	___wmul@multiplicand,f
  6067     13B1  0DA3               	rlf	___wmul@multiplicand+1,f
  6068     13B2  0B89               	decfsz	9,f
  6069     13B3  2BB0               	goto	u2715
  6070     13B4                     l2538:
  6071     13B4  3001               	movlw	1
  6072     13B5                     u2725:
  6073     13B5  36A1               	lsrf	___wmul@multiplier+1,f
  6074     13B6  0CA0               	rrf	___wmul@multiplier,f
  6075     13B7  0B89               	decfsz	9,f
  6076     13B8  2BB5               	goto	u2725
  6077     13B9                     l2540:
  6078     13B9  0820               	movf	___wmul@multiplier,w
  6079     13BA  0421               	iorwf	___wmul@multiplier+1,w
  6080     13BB  1D03               	btfss	3,2
  6081     13BC  2BBE               	goto	u2731
  6082     13BD  2BBF               	goto	u2730
  6083     13BE                     u2731:
  6084     13BE  2BA7               	goto	l2534
  6085     13BF                     u2730:
  6086     13BF                     l2542:
  6087     13BF  0825               	movf	___wmul@product+1,w
  6088     13C0  00A1               	movwf	?___wmul+1
  6089     13C1  0824               	movf	___wmul@product,w
  6090     13C2  00A0               	movwf	?___wmul
  6091     13C3                     l303:
  6092     13C3  0008               	return
  6093     13C4                     __end_of___wmul:
  6094                           
  6095                           	psect	text18
  6096     12F3                     __ptext18:	
  6097 ;; *************** function ___flneg *****************
  6098 ;; Defined at:
  6099 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  f1              4    0[BANK0 ] unsigned int 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;		None
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  4    0[BANK0 ] unsigned int 
  6106 ;; Registers used:
  6107 ;;		wreg
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;Total ram usage:        4 bytes
  6118 ;; Hardware stack levels used: 1
  6119 ;; Hardware stack levels required when called: 2
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_strtof
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127     12F3                     ___flneg:	
  6128                           ;psect for function ___flneg
  6129                           
  6130     12F3                     l2592:	
  6131                           ;incstack = 0
  6132                           ; Regs used in ___flneg: [wreg]
  6133                           
  6134     12F3  0020               	movlb	0	; select bank0
  6135     12F4  0823               	movf	___flneg@f1+3,w
  6136     12F5  0422               	iorwf	___flneg@f1+2,w
  6137     12F6  0421               	iorwf	___flneg@f1+1,w
  6138     12F7  0420               	iorwf	___flneg@f1,w
  6139     12F8  1903               	skipnz
  6140     12F9  2AFB               	goto	u2861
  6141     12FA  2AFC               	goto	u2860
  6142     12FB                     u2861:
  6143     12FB  2AFE               	goto	l2596
  6144     12FC                     u2860:
  6145     12FC                     l2594:
  6146     12FC  3080               	movlw	128
  6147     12FD  06A3               	xorwf	___flneg@f1+3,f
  6148     12FE                     l2596:
  6149     12FE                     l491:
  6150     12FE  0008               	return
  6151     12FF                     __end_of___flneg:
  6152                           
  6153                           	psect	text19
  6154     0367                     __ptext19:	
  6155 ;; *************** function ___flmul *****************
  6156 ;; Defined at:
  6157 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  b               4    9[BANK0 ] unsigned int 
  6160 ;;  a               4   13[BANK0 ] unsigned int 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  prod            4   29[BANK0 ] struct .
  6163 ;;  grs             4   23[BANK0 ] unsigned long 
  6164 ;;  temp            2   33[BANK0 ] struct .
  6165 ;;  bexp            1   28[BANK0 ] unsigned char 
  6166 ;;  aexp            1   27[BANK0 ] unsigned char 
  6167 ;;  sign            1   22[BANK0 ] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  4    9[BANK0 ] unsigned char 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, pclath, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6178 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6179 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6180 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6181 ;;Total ram usage:       26 bytes
  6182 ;; Hardware stack levels used: 1
  6183 ;; Hardware stack levels required when called: 3
  6184 ;; This function calls:
  6185 ;;		__Umul8_16
  6186 ;; This function is called by:
  6187 ;;		_strtof
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191     0367                     ___flmul:	
  6192                           ;psect for function ___flmul
  6193                           
  6194     0367                     l2740:	
  6195                           ;incstack = 0
  6196                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6197                           
  6198     0367  0020               	movlb	0	; select bank0
  6199     0368  082C               	movf	___flmul@b+3,w
  6200     0369  3980               	andlw	128
  6201     036A  00B6               	movwf	___flmul@sign
  6202     036B                     l2742:
  6203     036B  352C               	lslf	___flmul@b+3,w
  6204     036C  00BC               	movwf	___flmul@bexp
  6205     036D                     l2744:
  6206     036D  1FAB               	btfss	___flmul@b+2,7
  6207     036E  2B70               	goto	u3161
  6208     036F  2B71               	goto	u3160
  6209     0370                     u3161:
  6210     0370  2B72               	goto	l2748
  6211     0371                     u3160:
  6212     0371                     l2746:
  6213     0371  143C               	bsf	___flmul@bexp,0
  6214     0372                     l2748:
  6215     0372  083C               	movf	___flmul@bexp,w
  6216     0373  1903               	btfsc	3,2
  6217     0374  2B76               	goto	u3171
  6218     0375  2B77               	goto	u3170
  6219     0376                     u3171:
  6220     0376  2B86               	goto	l2756
  6221     0377                     u3170:
  6222     0377                     l2750:
  6223     0377  0A3C               	incf	___flmul@bexp,w
  6224     0378  1D03               	btfss	3,2
  6225     0379  2B7B               	goto	u3181
  6226     037A  2B7C               	goto	u3180
  6227     037B                     u3181:
  6228     037B  2B84               	goto	l2754
  6229     037C                     u3180:
  6230     037C                     l2752:
  6231     037C  3000               	movlw	0
  6232     037D  00AC               	movwf	___flmul@b+3
  6233     037E  3000               	movlw	0
  6234     037F  00AB               	movwf	___flmul@b+2
  6235     0380  3000               	movlw	0
  6236     0381  00AA               	movwf	___flmul@b+1
  6237     0382  3000               	movlw	0
  6238     0383  00A9               	movwf	___flmul@b
  6239     0384                     l2754:
  6240     0384  17AB               	bsf	___flmul@b+2,7
  6241     0385  2B8E               	goto	l2758
  6242     0386                     l2756:
  6243     0386  3000               	movlw	0
  6244     0387  00AC               	movwf	___flmul@b+3
  6245     0388  3000               	movlw	0
  6246     0389  00AB               	movwf	___flmul@b+2
  6247     038A  3000               	movlw	0
  6248     038B  00AA               	movwf	___flmul@b+1
  6249     038C  3000               	movlw	0
  6250     038D  00A9               	movwf	___flmul@b
  6251     038E                     l2758:
  6252     038E  0830               	movf	___flmul@a+3,w
  6253     038F  3980               	andlw	128
  6254     0390  00B1               	movwf	??___flmul
  6255     0391  0831               	movf	??___flmul,w
  6256     0392  06B6               	xorwf	___flmul@sign,f
  6257     0393                     l2760:
  6258     0393  3530               	lslf	___flmul@a+3,w
  6259     0394  00BB               	movwf	___flmul@aexp
  6260     0395                     l2762:
  6261     0395  1FAF               	btfss	___flmul@a+2,7
  6262     0396  2B98               	goto	u3191
  6263     0397  2B99               	goto	u3190
  6264     0398                     u3191:
  6265     0398  2B9A               	goto	l2766
  6266     0399                     u3190:
  6267     0399                     l2764:
  6268     0399  143B               	bsf	___flmul@aexp,0
  6269     039A                     l2766:
  6270     039A  083B               	movf	___flmul@aexp,w
  6271     039B  1903               	btfsc	3,2
  6272     039C  2B9E               	goto	u3201
  6273     039D  2B9F               	goto	u3200
  6274     039E                     u3201:
  6275     039E  2BAE               	goto	l2774
  6276     039F                     u3200:
  6277     039F                     l2768:
  6278     039F  0A3B               	incf	___flmul@aexp,w
  6279     03A0  1D03               	btfss	3,2
  6280     03A1  2BA3               	goto	u3211
  6281     03A2  2BA4               	goto	u3210
  6282     03A3                     u3211:
  6283     03A3  2BAC               	goto	l2772
  6284     03A4                     u3210:
  6285     03A4                     l2770:
  6286     03A4  3000               	movlw	0
  6287     03A5  00B0               	movwf	___flmul@a+3
  6288     03A6  3000               	movlw	0
  6289     03A7  00AF               	movwf	___flmul@a+2
  6290     03A8  3000               	movlw	0
  6291     03A9  00AE               	movwf	___flmul@a+1
  6292     03AA  3000               	movlw	0
  6293     03AB  00AD               	movwf	___flmul@a
  6294     03AC                     l2772:
  6295     03AC  17AF               	bsf	___flmul@a+2,7
  6296     03AD  2BB6               	goto	l2776
  6297     03AE                     l2774:
  6298     03AE  3000               	movlw	0
  6299     03AF  00B0               	movwf	___flmul@a+3
  6300     03B0  3000               	movlw	0
  6301     03B1  00AF               	movwf	___flmul@a+2
  6302     03B2  3000               	movlw	0
  6303     03B3  00AE               	movwf	___flmul@a+1
  6304     03B4  3000               	movlw	0
  6305     03B5  00AD               	movwf	___flmul@a
  6306     03B6                     l2776:
  6307     03B6  083B               	movf	___flmul@aexp,w
  6308     03B7  1903               	btfsc	3,2
  6309     03B8  2BBA               	goto	u3221
  6310     03B9  2BBB               	goto	u3220
  6311     03BA                     u3221:
  6312     03BA  2BC0               	goto	l2780
  6313     03BB                     u3220:
  6314     03BB                     l2778:
  6315     03BB  083C               	movf	___flmul@bexp,w
  6316     03BC  1D03               	btfss	3,2
  6317     03BD  2BBF               	goto	u3231
  6318     03BE  2BC0               	goto	u3230
  6319     03BF                     u3231:
  6320     03BF  2BC9               	goto	l2784
  6321     03C0                     u3230:
  6322     03C0                     l2780:
  6323     03C0  3000               	movlw	0
  6324     03C1  00AC               	movwf	?___flmul+3
  6325     03C2  3000               	movlw	0
  6326     03C3  00AB               	movwf	?___flmul+2
  6327     03C4  3000               	movlw	0
  6328     03C5  00AA               	movwf	?___flmul+1
  6329     03C6  3000               	movlw	0
  6330     03C7  00A9               	movwf	?___flmul
  6331     03C8  2DA1               	goto	l698
  6332     03C9                     l2784:
  6333     03C9  0829               	movf	___flmul@b,w
  6334     03CA  00A0               	movwf	__Umul8_16@multiplicand
  6335     03CB  082F               	movf	___flmul@a+2,w
  6336     03CC  3193  23E6  3183   	fcall	__Umul8_16
  6337     03CF  0020               	movlb	0	; select bank0
  6338     03D0  0821               	movf	?__Umul8_16+1,w
  6339     03D1  00C2               	movwf	___flmul@temp+1
  6340     03D2  0820               	movf	?__Umul8_16,w
  6341     03D3  00C1               	movwf	___flmul@temp
  6342     03D4                     l2786:
  6343     03D4  0841               	movf	___flmul@temp,w
  6344     03D5  00B1               	movwf	??___flmul
  6345     03D6  01B2               	clrf	??___flmul+1
  6346     03D7  01B3               	clrf	??___flmul+2
  6347     03D8  01B4               	clrf	??___flmul+3
  6348     03D9  0834               	movf	??___flmul+3,w
  6349     03DA  00BA               	movwf	___flmul@grs+3
  6350     03DB  0833               	movf	??___flmul+2,w
  6351     03DC  00B9               	movwf	___flmul@grs+2
  6352     03DD  0832               	movf	??___flmul+1,w
  6353     03DE  00B8               	movwf	___flmul@grs+1
  6354     03DF  0831               	movf	??___flmul,w
  6355     03E0  00B7               	movwf	___flmul@grs
  6356     03E1                     l2788:
  6357     03E1  0842               	movf	___flmul@temp+1,w
  6358     03E2  00B1               	movwf	??___flmul
  6359     03E3  01B2               	clrf	??___flmul+1
  6360     03E4  01B3               	clrf	??___flmul+2
  6361     03E5  01B4               	clrf	??___flmul+3
  6362     03E6  0834               	movf	??___flmul+3,w
  6363     03E7  00C0               	movwf	___flmul@prod+3
  6364     03E8  0833               	movf	??___flmul+2,w
  6365     03E9  00BF               	movwf	___flmul@prod+2
  6366     03EA  0832               	movf	??___flmul+1,w
  6367     03EB  00BE               	movwf	___flmul@prod+1
  6368     03EC  0831               	movf	??___flmul,w
  6369     03ED  00BD               	movwf	___flmul@prod
  6370     03EE  082A               	movf	___flmul@b+1,w
  6371     03EF  00A0               	movwf	__Umul8_16@multiplicand
  6372     03F0  082E               	movf	___flmul@a+1,w
  6373     03F1  3193  23E6  3183   	fcall	__Umul8_16
  6374     03F4  0020               	movlb	0	; select bank0
  6375     03F5  0821               	movf	?__Umul8_16+1,w
  6376     03F6  00C2               	movwf	___flmul@temp+1
  6377     03F7  0820               	movf	?__Umul8_16,w
  6378     03F8  00C1               	movwf	___flmul@temp
  6379     03F9                     l2790:
  6380     03F9  0841               	movf	___flmul@temp,w
  6381     03FA  00B1               	movwf	??___flmul
  6382     03FB  01B2               	clrf	??___flmul+1
  6383     03FC  01B3               	clrf	??___flmul+2
  6384     03FD  01B4               	clrf	??___flmul+3
  6385     03FE  0831               	movf	??___flmul,w
  6386     03FF  07B7               	addwf	___flmul@grs,f
  6387     0400  0832               	movf	??___flmul+1,w
  6388     0401  3DB8               	addwfc	___flmul@grs+1,f
  6389     0402  0833               	movf	??___flmul+2,w
  6390     0403  3DB9               	addwfc	___flmul@grs+2,f
  6391     0404  0834               	movf	??___flmul+3,w
  6392     0405  3DBA               	addwfc	___flmul@grs+3,f
  6393     0406                     l2792:
  6394     0406  0842               	movf	___flmul@temp+1,w
  6395     0407  00B1               	movwf	??___flmul
  6396     0408  01B2               	clrf	??___flmul+1
  6397     0409  01B3               	clrf	??___flmul+2
  6398     040A  01B4               	clrf	??___flmul+3
  6399     040B  0831               	movf	??___flmul,w
  6400     040C  07BD               	addwf	___flmul@prod,f
  6401     040D  0832               	movf	??___flmul+1,w
  6402     040E  3DBE               	addwfc	___flmul@prod+1,f
  6403     040F  0833               	movf	??___flmul+2,w
  6404     0410  3DBF               	addwfc	___flmul@prod+2,f
  6405     0411  0834               	movf	??___flmul+3,w
  6406     0412  3DC0               	addwfc	___flmul@prod+3,f
  6407     0413  082B               	movf	___flmul@b+2,w
  6408     0414  00A0               	movwf	__Umul8_16@multiplicand
  6409     0415  082D               	movf	___flmul@a,w
  6410     0416  3193  23E6  3183   	fcall	__Umul8_16
  6411     0419  0020               	movlb	0	; select bank0
  6412     041A  0821               	movf	?__Umul8_16+1,w
  6413     041B  00C2               	movwf	___flmul@temp+1
  6414     041C  0820               	movf	?__Umul8_16,w
  6415     041D  00C1               	movwf	___flmul@temp
  6416     041E                     l2794:
  6417     041E  0841               	movf	___flmul@temp,w
  6418     041F  00B1               	movwf	??___flmul
  6419     0420  01B2               	clrf	??___flmul+1
  6420     0421  01B3               	clrf	??___flmul+2
  6421     0422  01B4               	clrf	??___flmul+3
  6422     0423  0831               	movf	??___flmul,w
  6423     0424  07B7               	addwf	___flmul@grs,f
  6424     0425  0832               	movf	??___flmul+1,w
  6425     0426  3DB8               	addwfc	___flmul@grs+1,f
  6426     0427  0833               	movf	??___flmul+2,w
  6427     0428  3DB9               	addwfc	___flmul@grs+2,f
  6428     0429  0834               	movf	??___flmul+3,w
  6429     042A  3DBA               	addwfc	___flmul@grs+3,f
  6430     042B                     l2796:
  6431     042B  0842               	movf	___flmul@temp+1,w
  6432     042C  00B1               	movwf	??___flmul
  6433     042D  01B2               	clrf	??___flmul+1
  6434     042E  01B3               	clrf	??___flmul+2
  6435     042F  01B4               	clrf	??___flmul+3
  6436     0430  0831               	movf	??___flmul,w
  6437     0431  07BD               	addwf	___flmul@prod,f
  6438     0432  0832               	movf	??___flmul+1,w
  6439     0433  3DBE               	addwfc	___flmul@prod+1,f
  6440     0434  0833               	movf	??___flmul+2,w
  6441     0435  3DBF               	addwfc	___flmul@prod+2,f
  6442     0436  0834               	movf	??___flmul+3,w
  6443     0437  3DC0               	addwfc	___flmul@prod+3,f
  6444     0438                     l2798:
  6445     0438  3008               	movlw	8
  6446     0439                     u3245:
  6447     0439  35B7               	lslf	___flmul@grs,f
  6448     043A  0DB8               	rlf	___flmul@grs+1,f
  6449     043B  0DB9               	rlf	___flmul@grs+2,f
  6450     043C  0DBA               	rlf	___flmul@grs+3,f
  6451     043D  0B89               	decfsz	9,f
  6452     043E  2C39               	goto	u3245
  6453     043F                     l2800:
  6454     043F  082A               	movf	___flmul@b+1,w
  6455     0440  00A0               	movwf	__Umul8_16@multiplicand
  6456     0441  082D               	movf	___flmul@a,w
  6457     0442  3193  23E6  3183   	fcall	__Umul8_16
  6458     0445  0020               	movlb	0	; select bank0
  6459     0446  0821               	movf	?__Umul8_16+1,w
  6460     0447  00C2               	movwf	___flmul@temp+1
  6461     0448  0820               	movf	?__Umul8_16,w
  6462     0449  00C1               	movwf	___flmul@temp
  6463     044A                     l2802:
  6464     044A  0841               	movf	___flmul@temp,w
  6465     044B  07B7               	addwf	___flmul@grs,f
  6466     044C  0842               	movf	___flmul@temp+1,w
  6467     044D  3DB8               	addwfc	___flmul@grs+1,f
  6468     044E  3000               	movlw	0
  6469     044F  3DB9               	addwfc	___flmul@grs+2,f
  6470     0450  3DBA               	addwfc	___flmul@grs+3,f
  6471     0451                     l2804:
  6472     0451  0829               	movf	___flmul@b,w
  6473     0452  00A0               	movwf	__Umul8_16@multiplicand
  6474     0453  082E               	movf	___flmul@a+1,w
  6475     0454  3193  23E6  3183   	fcall	__Umul8_16
  6476     0457  0020               	movlb	0	; select bank0
  6477     0458  0821               	movf	?__Umul8_16+1,w
  6478     0459  00C2               	movwf	___flmul@temp+1
  6479     045A  0820               	movf	?__Umul8_16,w
  6480     045B  00C1               	movwf	___flmul@temp
  6481     045C                     l2806:
  6482     045C  0841               	movf	___flmul@temp,w
  6483     045D  07B7               	addwf	___flmul@grs,f
  6484     045E  0842               	movf	___flmul@temp+1,w
  6485     045F  3DB8               	addwfc	___flmul@grs+1,f
  6486     0460  3000               	movlw	0
  6487     0461  3DB9               	addwfc	___flmul@grs+2,f
  6488     0462  3DBA               	addwfc	___flmul@grs+3,f
  6489     0463                     l2808:
  6490     0463  3008               	movlw	8
  6491     0464                     u3255:
  6492     0464  35B7               	lslf	___flmul@grs,f
  6493     0465  0DB8               	rlf	___flmul@grs+1,f
  6494     0466  0DB9               	rlf	___flmul@grs+2,f
  6495     0467  0DBA               	rlf	___flmul@grs+3,f
  6496     0468  0B89               	decfsz	9,f
  6497     0469  2C64               	goto	u3255
  6498     046A  0829               	movf	___flmul@b,w
  6499     046B  00A0               	movwf	__Umul8_16@multiplicand
  6500     046C  082D               	movf	___flmul@a,w
  6501     046D  3193  23E6  3183   	fcall	__Umul8_16
  6502     0470  0020               	movlb	0	; select bank0
  6503     0471  0821               	movf	?__Umul8_16+1,w
  6504     0472  00C2               	movwf	___flmul@temp+1
  6505     0473  0820               	movf	?__Umul8_16,w
  6506     0474  00C1               	movwf	___flmul@temp
  6507     0475                     l2810:
  6508     0475  0841               	movf	___flmul@temp,w
  6509     0476  07B7               	addwf	___flmul@grs,f
  6510     0477  0842               	movf	___flmul@temp+1,w
  6511     0478  3DB8               	addwfc	___flmul@grs+1,f
  6512     0479  3000               	movlw	0
  6513     047A  3DB9               	addwfc	___flmul@grs+2,f
  6514     047B  3DBA               	addwfc	___flmul@grs+3,f
  6515     047C                     l2812:
  6516     047C  082A               	movf	___flmul@b+1,w
  6517     047D  00A0               	movwf	__Umul8_16@multiplicand
  6518     047E  082F               	movf	___flmul@a+2,w
  6519     047F  3193  23E6  3183   	fcall	__Umul8_16
  6520     0482  0020               	movlb	0	; select bank0
  6521     0483  0821               	movf	?__Umul8_16+1,w
  6522     0484  00C2               	movwf	___flmul@temp+1
  6523     0485  0820               	movf	?__Umul8_16,w
  6524     0486  00C1               	movwf	___flmul@temp
  6525     0487  0841               	movf	___flmul@temp,w
  6526     0488  07BD               	addwf	___flmul@prod,f
  6527     0489  0842               	movf	___flmul@temp+1,w
  6528     048A  3DBE               	addwfc	___flmul@prod+1,f
  6529     048B  3000               	movlw	0
  6530     048C  3DBF               	addwfc	___flmul@prod+2,f
  6531     048D  3DC0               	addwfc	___flmul@prod+3,f
  6532     048E                     l2814:
  6533     048E  082B               	movf	___flmul@b+2,w
  6534     048F  00A0               	movwf	__Umul8_16@multiplicand
  6535     0490  082E               	movf	___flmul@a+1,w
  6536     0491  3193  23E6  3183   	fcall	__Umul8_16
  6537     0494  0020               	movlb	0	; select bank0
  6538     0495  0821               	movf	?__Umul8_16+1,w
  6539     0496  00C2               	movwf	___flmul@temp+1
  6540     0497  0820               	movf	?__Umul8_16,w
  6541     0498  00C1               	movwf	___flmul@temp
  6542     0499                     l2816:
  6543     0499  0841               	movf	___flmul@temp,w
  6544     049A  07BD               	addwf	___flmul@prod,f
  6545     049B  0842               	movf	___flmul@temp+1,w
  6546     049C  3DBE               	addwfc	___flmul@prod+1,f
  6547     049D  3000               	movlw	0
  6548     049E  3DBF               	addwfc	___flmul@prod+2,f
  6549     049F  3DC0               	addwfc	___flmul@prod+3,f
  6550     04A0  082B               	movf	___flmul@b+2,w
  6551     04A1  00A0               	movwf	__Umul8_16@multiplicand
  6552     04A2  082F               	movf	___flmul@a+2,w
  6553     04A3  3193  23E6  3183   	fcall	__Umul8_16
  6554     04A6  0020               	movlb	0	; select bank0
  6555     04A7  0821               	movf	?__Umul8_16+1,w
  6556     04A8  00C2               	movwf	___flmul@temp+1
  6557     04A9  0820               	movf	?__Umul8_16,w
  6558     04AA  00C1               	movwf	___flmul@temp
  6559     04AB                     l2818:
  6560     04AB  0841               	movf	___flmul@temp,w
  6561     04AC  00B1               	movwf	??___flmul
  6562     04AD  0842               	movf	___flmul@temp+1,w
  6563     04AE  00B2               	movwf	??___flmul+1
  6564     04AF  01B3               	clrf	??___flmul+2
  6565     04B0  01B4               	clrf	??___flmul+3
  6566     04B1  3008               	movlw	8
  6567     04B2                     u3265:
  6568     04B2  35B1               	lslf	??___flmul,f
  6569     04B3  0DB2               	rlf	??___flmul+1,f
  6570     04B4  0DB3               	rlf	??___flmul+2,f
  6571     04B5  0DB4               	rlf	??___flmul+3,f
  6572     04B6                     u3260:
  6573     04B6  0B89               	decfsz	9,f
  6574     04B7  2CB2               	goto	u3265
  6575     04B8  0831               	movf	??___flmul,w
  6576     04B9  07BD               	addwf	___flmul@prod,f
  6577     04BA  0832               	movf	??___flmul+1,w
  6578     04BB  3DBE               	addwfc	___flmul@prod+1,f
  6579     04BC  0833               	movf	??___flmul+2,w
  6580     04BD  3DBF               	addwfc	___flmul@prod+2,f
  6581     04BE  0834               	movf	??___flmul+3,w
  6582     04BF  3DC0               	addwfc	___flmul@prod+3,f
  6583     04C0                     l2820:
  6584     04C0  0837               	movf	___flmul@grs,w
  6585     04C1  00B1               	movwf	??___flmul
  6586     04C2  0838               	movf	___flmul@grs+1,w
  6587     04C3  00B2               	movwf	??___flmul+1
  6588     04C4  0839               	movf	___flmul@grs+2,w
  6589     04C5  00B3               	movwf	??___flmul+2
  6590     04C6  083A               	movf	___flmul@grs+3,w
  6591     04C7  00B4               	movwf	??___flmul+3
  6592     04C8  3018               	movlw	24
  6593     04C9                     u3275:
  6594     04C9  36B4               	lsrf	??___flmul+3,f
  6595     04CA  0CB3               	rrf	??___flmul+2,f
  6596     04CB  0CB2               	rrf	??___flmul+1,f
  6597     04CC  0CB1               	rrf	??___flmul,f
  6598     04CD                     u3270:
  6599     04CD  0B89               	decfsz	9,f
  6600     04CE  2CC9               	goto	u3275
  6601     04CF  0831               	movf	??___flmul,w
  6602     04D0  07BD               	addwf	___flmul@prod,f
  6603     04D1  0832               	movf	??___flmul+1,w
  6604     04D2  3DBE               	addwfc	___flmul@prod+1,f
  6605     04D3  0833               	movf	??___flmul+2,w
  6606     04D4  3DBF               	addwfc	___flmul@prod+2,f
  6607     04D5  0834               	movf	??___flmul+3,w
  6608     04D6  3DC0               	addwfc	___flmul@prod+3,f
  6609     04D7                     l2822:
  6610     04D7  3008               	movlw	8
  6611     04D8                     u3285:
  6612     04D8  35B7               	lslf	___flmul@grs,f
  6613     04D9  0DB8               	rlf	___flmul@grs+1,f
  6614     04DA  0DB9               	rlf	___flmul@grs+2,f
  6615     04DB  0DBA               	rlf	___flmul@grs+3,f
  6616     04DC  0B89               	decfsz	9,f
  6617     04DD  2CD8               	goto	u3285
  6618     04DE                     l2824:
  6619     04DE  083C               	movf	___flmul@bexp,w
  6620     04DF  073B               	addwf	___flmul@aexp,w
  6621     04E0  00B1               	movwf	??___flmul
  6622     04E1  01B2               	clrf	??___flmul+1
  6623     04E2  0DB2               	rlf	??___flmul+1,f
  6624     04E3  0831               	movf	??___flmul,w
  6625     04E4  3E82               	addlw	130
  6626     04E5  00C1               	movwf	___flmul@temp
  6627     04E6  30FF               	movlw	255
  6628     04E7  3D32               	addwfc	??___flmul+1,w
  6629     04E8  00C2               	movwf	___flmul@temp+1
  6630     04E9  2D01               	goto	l2836
  6631     04EA                     l2826:
  6632     04EA  3001               	movlw	1
  6633     04EB                     u3295:
  6634     04EB  35BD               	lslf	___flmul@prod,f
  6635     04EC  0DBE               	rlf	___flmul@prod+1,f
  6636     04ED  0DBF               	rlf	___flmul@prod+2,f
  6637     04EE  0DC0               	rlf	___flmul@prod+3,f
  6638     04EF  0B89               	decfsz	9,f
  6639     04F0  2CEB               	goto	u3295
  6640     04F1                     l2828:
  6641     04F1  1FBA               	btfss	___flmul@grs+3,7
  6642     04F2  2CF4               	goto	u3301
  6643     04F3  2CF5               	goto	u3300
  6644     04F4                     u3301:
  6645     04F4  2CF6               	goto	l2832
  6646     04F5                     u3300:
  6647     04F5                     l2830:
  6648     04F5  143D               	bsf	___flmul@prod,0
  6649     04F6                     l2832:
  6650     04F6  3001               	movlw	1
  6651     04F7                     u3315:
  6652     04F7  35B7               	lslf	___flmul@grs,f
  6653     04F8  0DB8               	rlf	___flmul@grs+1,f
  6654     04F9  0DB9               	rlf	___flmul@grs+2,f
  6655     04FA  0DBA               	rlf	___flmul@grs+3,f
  6656     04FB  0B89               	decfsz	9,f
  6657     04FC  2CF7               	goto	u3315
  6658     04FD                     l2834:
  6659     04FD  30FF               	movlw	255
  6660     04FE  07C1               	addwf	___flmul@temp,f
  6661     04FF  30FF               	movlw	255
  6662     0500  3DC2               	addwfc	___flmul@temp+1,f
  6663     0501                     l2836:
  6664     0501  1FBF               	btfss	___flmul@prod+2,7
  6665     0502  2D04               	goto	u3321
  6666     0503  2D05               	goto	u3320
  6667     0504                     u3321:
  6668     0504  2CEA               	goto	l2826
  6669     0505                     u3320:
  6670     0505                     l2838:
  6671     0505  01BB               	clrf	___flmul@aexp
  6672     0506                     l2840:
  6673     0506  1FBA               	btfss	___flmul@grs+3,7
  6674     0507  2D09               	goto	u3331
  6675     0508  2D0A               	goto	u3330
  6676     0509                     u3331:
  6677     0509  2D26               	goto	l2848
  6678     050A                     u3330:
  6679     050A                     l2842:
  6680     050A  30FF               	movlw	255
  6681     050B  0537               	andwf	___flmul@grs,w
  6682     050C  00B1               	movwf	??___flmul
  6683     050D  30FF               	movlw	255
  6684     050E  0538               	andwf	___flmul@grs+1,w
  6685     050F  00B2               	movwf	??___flmul+1
  6686     0510  30FF               	movlw	255
  6687     0511  0539               	andwf	___flmul@grs+2,w
  6688     0512  00B3               	movwf	??___flmul+2
  6689     0513  307F               	movlw	127
  6690     0514  053A               	andwf	___flmul@grs+3,w
  6691     0515  00B4               	movwf	??___flmul+3
  6692     0516  0834               	movf	??___flmul+3,w
  6693     0517  0433               	iorwf	??___flmul+2,w
  6694     0518  0432               	iorwf	??___flmul+1,w
  6695     0519  0431               	iorwf	??___flmul,w
  6696     051A  1903               	skipnz
  6697     051B  2D1D               	goto	u3341
  6698     051C  2D1E               	goto	u3340
  6699     051D                     u3341:
  6700     051D  2D21               	goto	l704
  6701     051E                     u3340:
  6702     051E                     l2844:
  6703     051E  01BB               	clrf	___flmul@aexp
  6704     051F  0ABB               	incf	___flmul@aexp,f
  6705     0520  2D26               	goto	l2848
  6706     0521                     l704:
  6707     0521  1C3D               	btfss	___flmul@prod,0
  6708     0522  2D24               	goto	u3351
  6709     0523  2D25               	goto	u3350
  6710     0524                     u3351:
  6711     0524  2D26               	goto	l2848
  6712     0525                     u3350:
  6713     0525  2D1E               	goto	l2844
  6714     0526                     l2848:
  6715     0526  083B               	movf	___flmul@aexp,w
  6716     0527  1903               	btfsc	3,2
  6717     0528  2D2A               	goto	u3361
  6718     0529  2D2B               	goto	u3360
  6719     052A                     u3361:
  6720     052A  2D53               	goto	l2858
  6721     052B                     u3360:
  6722     052B                     l2850:
  6723     052B  3001               	movlw	1
  6724     052C  07BD               	addwf	___flmul@prod,f
  6725     052D  3000               	movlw	0
  6726     052E  3DBE               	addwfc	___flmul@prod+1,f
  6727     052F  3000               	movlw	0
  6728     0530  3DBF               	addwfc	___flmul@prod+2,f
  6729     0531  3000               	movlw	0
  6730     0532  3DC0               	addwfc	___flmul@prod+3,f
  6731     0533                     l2852:
  6732     0533  1C40               	btfss	___flmul@prod+3,0
  6733     0534  2D36               	goto	u3371
  6734     0535  2D37               	goto	u3370
  6735     0536                     u3371:
  6736     0536  2D53               	goto	l2858
  6737     0537                     u3370:
  6738     0537                     l2854:
  6739     0537  083D               	movf	___flmul@prod,w
  6740     0538  00B1               	movwf	??___flmul
  6741     0539  083E               	movf	___flmul@prod+1,w
  6742     053A  00B2               	movwf	??___flmul+1
  6743     053B  083F               	movf	___flmul@prod+2,w
  6744     053C  00B3               	movwf	??___flmul+2
  6745     053D  0840               	movf	___flmul@prod+3,w
  6746     053E  00B4               	movwf	??___flmul+3
  6747     053F  3001               	movlw	1
  6748     0540  00B5               	movwf	??___flmul+4
  6749     0541                     u3385:
  6750     0541  37B4               	asrf	??___flmul+3,f
  6751     0542  0CB3               	rrf	??___flmul+2,f
  6752     0543  0CB2               	rrf	??___flmul+1,f
  6753     0544  0CB1               	rrf	??___flmul,f
  6754     0545                     u3380:
  6755     0545  0BB5               	decfsz	??___flmul+4,f
  6756     0546  2D41               	goto	u3385
  6757     0547  0834               	movf	??___flmul+3,w
  6758     0548  00C0               	movwf	___flmul@prod+3
  6759     0549  0833               	movf	??___flmul+2,w
  6760     054A  00BF               	movwf	___flmul@prod+2
  6761     054B  0832               	movf	??___flmul+1,w
  6762     054C  00BE               	movwf	___flmul@prod+1
  6763     054D  0831               	movf	??___flmul,w
  6764     054E  00BD               	movwf	___flmul@prod
  6765     054F                     l2856:
  6766     054F  3001               	movlw	1
  6767     0550  07C1               	addwf	___flmul@temp,f
  6768     0551  3000               	movlw	0
  6769     0552  3DC2               	addwfc	___flmul@temp+1,f
  6770     0553                     l2858:
  6771     0553  0842               	movf	___flmul@temp+1,w
  6772     0554  3A80               	xorlw	128
  6773     0555  00B1               	movwf	??___flmul
  6774     0556  3080               	movlw	128
  6775     0557  0231               	subwf	??___flmul,w
  6776     0558  1D03               	skipz
  6777     0559  2D5C               	goto	u3395
  6778     055A  30FF               	movlw	255
  6779     055B  0241               	subwf	___flmul@temp,w
  6780     055C                     u3395:
  6781     055C  1C03               	skipc
  6782     055D  2D5F               	goto	u3391
  6783     055E  2D60               	goto	u3390
  6784     055F                     u3391:
  6785     055F  2D6A               	goto	l2862
  6786     0560                     u3390:
  6787     0560                     l2860:
  6788     0560  307F               	movlw	127
  6789     0561  0020               	movlb	0	; select bank0
  6790     0562  00C0               	movwf	___flmul@prod+3
  6791     0563  3080               	movlw	128
  6792     0564  00BF               	movwf	___flmul@prod+2
  6793     0565  3000               	movlw	0
  6794     0566  00BE               	movwf	___flmul@prod+1
  6795     0567  3000               	movlw	0
  6796     0568  00BD               	movwf	___flmul@prod
  6797     0569  2D95               	goto	l710
  6798     056A                     l2862:
  6799     056A  0020               	movlb	0	; select bank0
  6800     056B  0842               	movf	___flmul@temp+1,w
  6801     056C  3A80               	xorlw	128
  6802     056D  00B1               	movwf	??___flmul
  6803     056E  3080               	movlw	128
  6804     056F  0231               	subwf	??___flmul,w
  6805     0570  1D03               	skipz
  6806     0571  2D74               	goto	u3405
  6807     0572  3001               	movlw	1
  6808     0573  0241               	subwf	___flmul@temp,w
  6809     0574                     u3405:
  6810     0574  1803               	skipnc
  6811     0575  2D77               	goto	u3401
  6812     0576  2D78               	goto	u3400
  6813     0577                     u3401:
  6814     0577  2D83               	goto	l2868
  6815     0578                     u3400:
  6816     0578                     l2864:
  6817     0578  3000               	movlw	0
  6818     0579  0020               	movlb	0	; select bank0
  6819     057A  00C0               	movwf	___flmul@prod+3
  6820     057B  3000               	movlw	0
  6821     057C  00BF               	movwf	___flmul@prod+2
  6822     057D  3000               	movlw	0
  6823     057E  00BE               	movwf	___flmul@prod+1
  6824     057F  3000               	movlw	0
  6825     0580  00BD               	movwf	___flmul@prod
  6826     0581                     l2866:
  6827     0581  01B6               	clrf	___flmul@sign
  6828     0582  2D95               	goto	l710
  6829     0583                     l2868:
  6830     0583  0020               	movlb	0	; select bank0
  6831     0584  0841               	movf	___flmul@temp,w
  6832     0585  00BC               	movwf	___flmul@bexp
  6833     0586  30FF               	movlw	255
  6834     0587  05BD               	andwf	___flmul@prod,f
  6835     0588  30FF               	movlw	255
  6836     0589  05BE               	andwf	___flmul@prod+1,f
  6837     058A  307F               	movlw	127
  6838     058B  05BF               	andwf	___flmul@prod+2,f
  6839     058C  3000               	movlw	0
  6840     058D  05C0               	andwf	___flmul@prod+3,f
  6841     058E                     l2870:
  6842     058E  1C3C               	btfss	___flmul@bexp,0
  6843     058F  2D91               	goto	u3411
  6844     0590  2D92               	goto	u3410
  6845     0591                     u3411:
  6846     0591  2D93               	goto	l2874
  6847     0592                     u3410:
  6848     0592                     l2872:
  6849     0592  17BF               	bsf	___flmul@prod+2,7
  6850     0593                     l2874:
  6851     0593  363C               	lsrf	___flmul@bexp,w
  6852     0594  00C0               	movwf	___flmul@prod+3
  6853     0595                     l710:
  6854     0595  0836               	movf	___flmul@sign,w
  6855     0596  00B1               	movwf	??___flmul
  6856     0597  0831               	movf	??___flmul,w
  6857     0598  04C0               	iorwf	___flmul@prod+3,f
  6858     0599                     l2876:
  6859     0599  0840               	movf	___flmul@prod+3,w
  6860     059A  00AC               	movwf	?___flmul+3
  6861     059B  083F               	movf	___flmul@prod+2,w
  6862     059C  00AB               	movwf	?___flmul+2
  6863     059D  083E               	movf	___flmul@prod+1,w
  6864     059E  00AA               	movwf	?___flmul+1
  6865     059F  083D               	movf	___flmul@prod,w
  6866     05A0  00A9               	movwf	?___flmul
  6867     05A1                     l698:
  6868     05A1  0008               	return
  6869     05A2                     __end_of___flmul:
  6870                           
  6871                           	psect	text20
  6872     13E6                     __ptext20:	
  6873 ;; *************** function __Umul8_16 *****************
  6874 ;; Defined at:
  6875 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  multiplier      1    wreg     unsigned char 
  6878 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6881 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6882 ;;  product         2    4[BANK0 ] unsigned int 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  2    0[BANK0 ] unsigned int 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2, status,0
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;Total ram usage:        9 bytes
  6897 ;; Hardware stack levels used: 1
  6898 ;; Hardware stack levels required when called: 2
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		___flmul
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906     13E6                     __Umul8_16:	
  6907                           ;psect for function __Umul8_16
  6908                           
  6909                           
  6910                           ;incstack = 0
  6911                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6912                           ;__Umul8_16@multiplier stored from wreg
  6913     13E6  0020               	movlb	0	; select bank0
  6914     13E7  00A8               	movwf	__Umul8_16@multiplier
  6915     13E8                     l2500:
  6916     13E8  01A4               	clrf	__Umul8_16@product
  6917     13E9  01A5               	clrf	__Umul8_16@product+1
  6918     13EA                     l2502:
  6919     13EA  0820               	movf	__Umul8_16@multiplicand,w
  6920     13EB  00A2               	movwf	??__Umul8_16
  6921     13EC  01A3               	clrf	??__Umul8_16+1
  6922     13ED  0822               	movf	??__Umul8_16,w
  6923     13EE  00A6               	movwf	__Umul8_16@word_mpld
  6924     13EF  0823               	movf	??__Umul8_16+1,w
  6925     13F0  00A7               	movwf	__Umul8_16@word_mpld+1
  6926     13F1                     l2504:
  6927     13F1  1C28               	btfss	__Umul8_16@multiplier,0
  6928     13F2  2BF4               	goto	u2611
  6929     13F3  2BF5               	goto	u2610
  6930     13F4                     u2611:
  6931     13F4  2BF9               	goto	l717
  6932     13F5                     u2610:
  6933     13F5                     l2506:
  6934     13F5  0826               	movf	__Umul8_16@word_mpld,w
  6935     13F6  07A4               	addwf	__Umul8_16@product,f
  6936     13F7  0827               	movf	__Umul8_16@word_mpld+1,w
  6937     13F8  3DA5               	addwfc	__Umul8_16@product+1,f
  6938     13F9                     l717:
  6939     13F9  3001               	movlw	1
  6940     13FA                     u2625:
  6941     13FA  35A6               	lslf	__Umul8_16@word_mpld,f
  6942     13FB  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6943     13FC  0B89               	decfsz	9,f
  6944     13FD  2BFA               	goto	u2625
  6945     13FE  1003               	clrc
  6946     13FF  0CA8               	rrf	__Umul8_16@multiplier,f
  6947     1400                     l2508:
  6948     1400  0828               	movf	__Umul8_16@multiplier,w
  6949     1401  1D03               	btfss	3,2
  6950     1402  2C04               	goto	u2631
  6951     1403  2C05               	goto	u2630
  6952     1404                     u2631:
  6953     1404  2BF1               	goto	l2504
  6954     1405                     u2630:
  6955     1405                     l2510:
  6956     1405  0825               	movf	__Umul8_16@product+1,w
  6957     1406  00A1               	movwf	?__Umul8_16+1
  6958     1407  0824               	movf	__Umul8_16@product,w
  6959     1408  00A0               	movwf	?__Umul8_16
  6960     1409                     l719:
  6961     1409  0008               	return
  6962     140A                     __end_of__Umul8_16:
  6963                           
  6964                           	psect	text21
  6965     16E5                     __ptext21:	
  6966 ;; *************** function ___flge *****************
  6967 ;; Defined at:
  6968 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  ff1             4    0[BANK0 ] unsigned int 
  6971 ;;  ff2             4    4[BANK0 ] unsigned int 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;		None               void
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6983 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;Total ram usage:       12 bytes
  6988 ;; Hardware stack levels used: 1
  6989 ;; Hardware stack levels required when called: 2
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_main
  6994 ;;		_strtof
  6995 ;;		_debugSS
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999     16E5                     ___flge:	
  7000                           ;psect for function ___flge
  7001                           
  7002     16E5                     l2572:	
  7003                           ;incstack = 0
  7004                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7005                           
  7006     16E5  3000               	movlw	0
  7007     16E6  0020               	movlb	0	; select bank0
  7008     16E7  0520               	andwf	___flge@ff1,w
  7009     16E8  00A8               	movwf	??___flge
  7010     16E9  3000               	movlw	0
  7011     16EA  0521               	andwf	___flge@ff1+1,w
  7012     16EB  00A9               	movwf	??___flge+1
  7013     16EC  3080               	movlw	128
  7014     16ED  0522               	andwf	___flge@ff1+2,w
  7015     16EE  00AA               	movwf	??___flge+2
  7016     16EF  307F               	movlw	127
  7017     16F0  0523               	andwf	___flge@ff1+3,w
  7018     16F1  00AB               	movwf	??___flge+3
  7019     16F2  082B               	movf	??___flge+3,w
  7020     16F3  042A               	iorwf	??___flge+2,w
  7021     16F4  0429               	iorwf	??___flge+1,w
  7022     16F5  0428               	iorwf	??___flge,w
  7023     16F6  1D03               	skipz
  7024     16F7  2EF9               	goto	u2811
  7025     16F8  2EFA               	goto	u2810
  7026     16F9                     u2811:
  7027     16F9  2F02               	goto	l479
  7028     16FA                     u2810:
  7029     16FA                     l2574:
  7030     16FA  3000               	movlw	0
  7031     16FB  00A3               	movwf	___flge@ff1+3
  7032     16FC  3000               	movlw	0
  7033     16FD  00A2               	movwf	___flge@ff1+2
  7034     16FE  3000               	movlw	0
  7035     16FF  00A1               	movwf	___flge@ff1+1
  7036     1700  3000               	movlw	0
  7037     1701  00A0               	movwf	___flge@ff1
  7038     1702                     l479:
  7039     1702  3000               	movlw	0
  7040     1703  0524               	andwf	___flge@ff2,w
  7041     1704  00A8               	movwf	??___flge
  7042     1705  3000               	movlw	0
  7043     1706  0525               	andwf	___flge@ff2+1,w
  7044     1707  00A9               	movwf	??___flge+1
  7045     1708  3080               	movlw	128
  7046     1709  0526               	andwf	___flge@ff2+2,w
  7047     170A  00AA               	movwf	??___flge+2
  7048     170B  307F               	movlw	127
  7049     170C  0527               	andwf	___flge@ff2+3,w
  7050     170D  00AB               	movwf	??___flge+3
  7051     170E  082B               	movf	??___flge+3,w
  7052     170F  042A               	iorwf	??___flge+2,w
  7053     1710  0429               	iorwf	??___flge+1,w
  7054     1711  0428               	iorwf	??___flge,w
  7055     1712  1D03               	skipz
  7056     1713  2F15               	goto	u2821
  7057     1714  2F16               	goto	u2820
  7058     1715                     u2821:
  7059     1715  2F1E               	goto	l2578
  7060     1716                     u2820:
  7061     1716                     l2576:
  7062     1716  3000               	movlw	0
  7063     1717  00A7               	movwf	___flge@ff2+3
  7064     1718  3000               	movlw	0
  7065     1719  00A6               	movwf	___flge@ff2+2
  7066     171A  3000               	movlw	0
  7067     171B  00A5               	movwf	___flge@ff2+1
  7068     171C  3000               	movlw	0
  7069     171D  00A4               	movwf	___flge@ff2
  7070     171E                     l2578:
  7071     171E  1FA3               	btfss	___flge@ff1+3,7
  7072     171F  2F21               	goto	u2831
  7073     1720  2F22               	goto	u2830
  7074     1721                     u2831:
  7075     1721  2F3A               	goto	l2582
  7076     1722                     u2830:
  7077     1722                     l2580:
  7078     1722  3000               	movlw	0
  7079     1723  00A8               	movwf	??___flge
  7080     1724  3000               	movlw	0
  7081     1725  00A9               	movwf	??___flge+1
  7082     1726  3000               	movlw	0
  7083     1727  00AA               	movwf	??___flge+2
  7084     1728  3080               	movlw	128
  7085     1729  00AB               	movwf	??___flge+3
  7086     172A  0820               	movf	___flge@ff1,w
  7087     172B  02A8               	subwf	??___flge,f
  7088     172C  0821               	movf	___flge@ff1+1,w
  7089     172D  3BA9               	subwfb	??___flge+1,f
  7090     172E  0822               	movf	___flge@ff1+2,w
  7091     172F  3BAA               	subwfb	??___flge+2,f
  7092     1730  0823               	movf	___flge@ff1+3,w
  7093     1731  3BAB               	subwfb	??___flge+3,f
  7094     1732  082B               	movf	??___flge+3,w
  7095     1733  00A3               	movwf	___flge@ff1+3
  7096     1734  082A               	movf	??___flge+2,w
  7097     1735  00A2               	movwf	___flge@ff1+2
  7098     1736  0829               	movf	??___flge+1,w
  7099     1737  00A1               	movwf	___flge@ff1+1
  7100     1738  0828               	movf	??___flge,w
  7101     1739  00A0               	movwf	___flge@ff1
  7102     173A                     l2582:
  7103     173A  1FA7               	btfss	___flge@ff2+3,7
  7104     173B  2F3D               	goto	u2841
  7105     173C  2F3E               	goto	u2840
  7106     173D                     u2841:
  7107     173D  2F56               	goto	l482
  7108     173E                     u2840:
  7109     173E                     l2584:
  7110     173E  3000               	movlw	0
  7111     173F  00A8               	movwf	??___flge
  7112     1740  3000               	movlw	0
  7113     1741  00A9               	movwf	??___flge+1
  7114     1742  3000               	movlw	0
  7115     1743  00AA               	movwf	??___flge+2
  7116     1744  3080               	movlw	128
  7117     1745  00AB               	movwf	??___flge+3
  7118     1746  0824               	movf	___flge@ff2,w
  7119     1747  02A8               	subwf	??___flge,f
  7120     1748  0825               	movf	___flge@ff2+1,w
  7121     1749  3BA9               	subwfb	??___flge+1,f
  7122     174A  0826               	movf	___flge@ff2+2,w
  7123     174B  3BAA               	subwfb	??___flge+2,f
  7124     174C  0827               	movf	___flge@ff2+3,w
  7125     174D  3BAB               	subwfb	??___flge+3,f
  7126     174E  082B               	movf	??___flge+3,w
  7127     174F  00A7               	movwf	___flge@ff2+3
  7128     1750  082A               	movf	??___flge+2,w
  7129     1751  00A6               	movwf	___flge@ff2+2
  7130     1752  0829               	movf	??___flge+1,w
  7131     1753  00A5               	movwf	___flge@ff2+1
  7132     1754  0828               	movf	??___flge,w
  7133     1755  00A4               	movwf	___flge@ff2
  7134     1756                     l482:
  7135     1756  3080               	movlw	128
  7136     1757  06A3               	xorwf	___flge@ff1+3,f
  7137     1758  3080               	movlw	128
  7138     1759  06A7               	xorwf	___flge@ff2+3,f
  7139     175A  0827               	movf	___flge@ff2+3,w
  7140     175B  0223               	subwf	___flge@ff1+3,w
  7141     175C  1D03               	skipz
  7142     175D  2F68               	goto	u2855
  7143     175E  0826               	movf	___flge@ff2+2,w
  7144     175F  0222               	subwf	___flge@ff1+2,w
  7145     1760  1D03               	skipz
  7146     1761  2F68               	goto	u2855
  7147     1762  0825               	movf	___flge@ff2+1,w
  7148     1763  0221               	subwf	___flge@ff1+1,w
  7149     1764  1D03               	skipz
  7150     1765  2F68               	goto	u2855
  7151     1766  0824               	movf	___flge@ff2,w
  7152     1767  0220               	subwf	___flge@ff1,w
  7153     1768                     u2855:
  7154     1768  1803               	skipnc
  7155     1769  2F6B               	goto	u2851
  7156     176A  2F6C               	goto	u2850
  7157     176B                     u2851:
  7158     176B  2F6E               	goto	l2588
  7159     176C                     u2850:
  7160     176C                     l2586:
  7161     176C  1003               	clrc
  7162     176D  2F6F               	goto	l487
  7163     176E                     l2588:
  7164     176E  1403               	setc
  7165     176F                     l487:
  7166     176F  0008               	return
  7167     1770                     __end_of___flge:
  7168                           
  7169                           	psect	text22
  7170     15D1                     __ptext22:	
  7171 ;; *************** function ___fleq *****************
  7172 ;; Defined at:
  7173 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  ff1             4    0[BANK0 ] unsigned int 
  7176 ;;  ff2             4    4[BANK0 ] unsigned int 
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;		None
  7179 ;; Return value:  Size  Location     Type
  7180 ;;		None               void
  7181 ;; Registers used:
  7182 ;;		wreg, status,2, status,0
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7188 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;Total ram usage:       12 bytes
  7193 ;; Hardware stack levels used: 1
  7194 ;; Hardware stack levels required when called: 2
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		_updateSpeed
  7199 ;;		_strtof
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203     15D1                     ___fleq:	
  7204                           ;psect for function ___fleq
  7205                           
  7206     15D1                     l2560:	
  7207                           ;incstack = 0
  7208                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7209                           
  7210     15D1  3000               	movlw	0
  7211     15D2  0020               	movlb	0	; select bank0
  7212     15D3  0520               	andwf	___fleq@ff1,w
  7213     15D4  00A8               	movwf	??___fleq
  7214     15D5  3000               	movlw	0
  7215     15D6  0521               	andwf	___fleq@ff1+1,w
  7216     15D7  00A9               	movwf	??___fleq+1
  7217     15D8  3080               	movlw	128
  7218     15D9  0522               	andwf	___fleq@ff1+2,w
  7219     15DA  00AA               	movwf	??___fleq+2
  7220     15DB  307F               	movlw	127
  7221     15DC  0523               	andwf	___fleq@ff1+3,w
  7222     15DD  00AB               	movwf	??___fleq+3
  7223     15DE  082B               	movf	??___fleq+3,w
  7224     15DF  042A               	iorwf	??___fleq+2,w
  7225     15E0  0429               	iorwf	??___fleq+1,w
  7226     15E1  0428               	iorwf	??___fleq,w
  7227     15E2  1D03               	skipz
  7228     15E3  2DE5               	goto	u2781
  7229     15E4  2DE6               	goto	u2780
  7230     15E5                     u2781:
  7231     15E5  2DEE               	goto	l470
  7232     15E6                     u2780:
  7233     15E6                     l2562:
  7234     15E6  3000               	movlw	0
  7235     15E7  00A3               	movwf	___fleq@ff1+3
  7236     15E8  3000               	movlw	0
  7237     15E9  00A2               	movwf	___fleq@ff1+2
  7238     15EA  3000               	movlw	0
  7239     15EB  00A1               	movwf	___fleq@ff1+1
  7240     15EC  3000               	movlw	0
  7241     15ED  00A0               	movwf	___fleq@ff1
  7242     15EE                     l470:
  7243     15EE  3000               	movlw	0
  7244     15EF  0524               	andwf	___fleq@ff2,w
  7245     15F0  00A8               	movwf	??___fleq
  7246     15F1  3000               	movlw	0
  7247     15F2  0525               	andwf	___fleq@ff2+1,w
  7248     15F3  00A9               	movwf	??___fleq+1
  7249     15F4  3080               	movlw	128
  7250     15F5  0526               	andwf	___fleq@ff2+2,w
  7251     15F6  00AA               	movwf	??___fleq+2
  7252     15F7  307F               	movlw	127
  7253     15F8  0527               	andwf	___fleq@ff2+3,w
  7254     15F9  00AB               	movwf	??___fleq+3
  7255     15FA  082B               	movf	??___fleq+3,w
  7256     15FB  042A               	iorwf	??___fleq+2,w
  7257     15FC  0429               	iorwf	??___fleq+1,w
  7258     15FD  0428               	iorwf	??___fleq,w
  7259     15FE  1D03               	skipz
  7260     15FF  2E01               	goto	u2791
  7261     1600  2E02               	goto	u2790
  7262     1601                     u2791:
  7263     1601  2E0A               	goto	l471
  7264     1602                     u2790:
  7265     1602                     l2564:
  7266     1602  3000               	movlw	0
  7267     1603  00A7               	movwf	___fleq@ff2+3
  7268     1604  3000               	movlw	0
  7269     1605  00A6               	movwf	___fleq@ff2+2
  7270     1606  3000               	movlw	0
  7271     1607  00A5               	movwf	___fleq@ff2+1
  7272     1608  3000               	movlw	0
  7273     1609  00A4               	movwf	___fleq@ff2
  7274     160A                     l471:
  7275     160A  0827               	movf	___fleq@ff2+3,w
  7276     160B  0623               	xorwf	___fleq@ff1+3,w
  7277     160C  1D03               	skipz
  7278     160D  2E18               	goto	u2805
  7279     160E  0826               	movf	___fleq@ff2+2,w
  7280     160F  0622               	xorwf	___fleq@ff1+2,w
  7281     1610  1D03               	skipz
  7282     1611  2E18               	goto	u2805
  7283     1612  0825               	movf	___fleq@ff2+1,w
  7284     1613  0621               	xorwf	___fleq@ff1+1,w
  7285     1614  1D03               	skipz
  7286     1615  2E18               	goto	u2805
  7287     1616  0824               	movf	___fleq@ff2,w
  7288     1617  0620               	xorwf	___fleq@ff1,w
  7289     1618                     u2805:
  7290     1618  1903               	skipnz
  7291     1619  2E1B               	goto	u2801
  7292     161A  2E1C               	goto	u2800
  7293     161B                     u2801:
  7294     161B  2E1E               	goto	l2568
  7295     161C                     u2800:
  7296     161C                     l2566:
  7297     161C  1003               	clrc
  7298     161D  2E1F               	goto	l476
  7299     161E                     l2568:
  7300     161E  1403               	setc
  7301     161F                     l476:
  7302     161F  0008               	return
  7303     1620                     __end_of___fleq:
  7304                           
  7305                           	psect	text23
  7306     05A2                     __ptext23:	
  7307 ;; *************** function ___fldiv *****************
  7308 ;; Defined at:
  7309 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  a               4    0[BANK0 ] unsigned int 
  7312 ;;  b               4    4[BANK0 ] unsigned int 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  grs             4   20[BANK0 ] unsigned long 
  7315 ;;  rem             4   13[BANK0 ] unsigned long 
  7316 ;;  new_exp         2   18[BANK0 ] int 
  7317 ;;  aexp            1   25[BANK0 ] unsigned char 
  7318 ;;  bexp            1   24[BANK0 ] unsigned char 
  7319 ;;  sign            1   17[BANK0 ] unsigned char 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  4    0[BANK0 ] unsigned char 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7329 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;Total ram usage:       26 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; Hardware stack levels required when called: 2
  7336 ;; This function calls:
  7337 ;;		Nothing
  7338 ;; This function is called by:
  7339 ;;		_strtof
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343     05A2                     ___fldiv:	
  7344                           ;psect for function ___fldiv
  7345                           
  7346     05A2                     l2600:	
  7347                           ;incstack = 0
  7348                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7349                           
  7350     05A2  0020               	movlb	0	; select bank0
  7351     05A3  0827               	movf	___fldiv@b+3,w
  7352     05A4  3980               	andlw	128
  7353     05A5  00B1               	movwf	___fldiv@sign
  7354     05A6                     l2602:
  7355     05A6  3527               	lslf	___fldiv@b+3,w
  7356     05A7  00B8               	movwf	___fldiv@bexp
  7357     05A8                     l2604:
  7358     05A8  1FA6               	btfss	___fldiv@b+2,7
  7359     05A9  2DAB               	goto	u2871
  7360     05AA  2DAC               	goto	u2870
  7361     05AB                     u2871:
  7362     05AB  2DAD               	goto	l2608
  7363     05AC                     u2870:
  7364     05AC                     l2606:
  7365     05AC  1438               	bsf	___fldiv@bexp,0
  7366     05AD                     l2608:
  7367     05AD  0838               	movf	___fldiv@bexp,w
  7368     05AE  1903               	btfsc	3,2
  7369     05AF  2DB1               	goto	u2881
  7370     05B0  2DB2               	goto	u2880
  7371     05B1                     u2881:
  7372     05B1  2DC2               	goto	l2618
  7373     05B2                     u2880:
  7374     05B2                     l2610:
  7375     05B2  0A38               	incf	___fldiv@bexp,w
  7376     05B3  1D03               	btfss	3,2
  7377     05B4  2DB6               	goto	u2891
  7378     05B5  2DB7               	goto	u2890
  7379     05B6                     u2891:
  7380     05B6  2DBF               	goto	l2614
  7381     05B7                     u2890:
  7382     05B7                     l2612:
  7383     05B7  3000               	movlw	0
  7384     05B8  00A7               	movwf	___fldiv@b+3
  7385     05B9  3000               	movlw	0
  7386     05BA  00A6               	movwf	___fldiv@b+2
  7387     05BB  3000               	movlw	0
  7388     05BC  00A5               	movwf	___fldiv@b+1
  7389     05BD  3000               	movlw	0
  7390     05BE  00A4               	movwf	___fldiv@b
  7391     05BF                     l2614:
  7392     05BF  17A6               	bsf	___fldiv@b+2,7
  7393     05C0                     l2616:
  7394     05C0  01A7               	clrf	___fldiv@b+3
  7395     05C1  2DCA               	goto	l2620
  7396     05C2                     l2618:
  7397     05C2  3000               	movlw	0
  7398     05C3  00A7               	movwf	___fldiv@b+3
  7399     05C4  3000               	movlw	0
  7400     05C5  00A6               	movwf	___fldiv@b+2
  7401     05C6  3000               	movlw	0
  7402     05C7  00A5               	movwf	___fldiv@b+1
  7403     05C8  3000               	movlw	0
  7404     05C9  00A4               	movwf	___fldiv@b
  7405     05CA                     l2620:
  7406     05CA  0823               	movf	___fldiv@a+3,w
  7407     05CB  3980               	andlw	128
  7408     05CC  00A8               	movwf	??___fldiv
  7409     05CD  0828               	movf	??___fldiv,w
  7410     05CE  06B1               	xorwf	___fldiv@sign,f
  7411     05CF                     l2622:
  7412     05CF  3523               	lslf	___fldiv@a+3,w
  7413     05D0  00B9               	movwf	___fldiv@aexp
  7414     05D1                     l2624:
  7415     05D1  1FA2               	btfss	___fldiv@a+2,7
  7416     05D2  2DD4               	goto	u2901
  7417     05D3  2DD5               	goto	u2900
  7418     05D4                     u2901:
  7419     05D4  2DD6               	goto	l2628
  7420     05D5                     u2900:
  7421     05D5                     l2626:
  7422     05D5  1439               	bsf	___fldiv@aexp,0
  7423     05D6                     l2628:
  7424     05D6  0839               	movf	___fldiv@aexp,w
  7425     05D7  1903               	btfsc	3,2
  7426     05D8  2DDA               	goto	u2911
  7427     05D9  2DDB               	goto	u2910
  7428     05DA                     u2911:
  7429     05DA  2DEB               	goto	l2638
  7430     05DB                     u2910:
  7431     05DB                     l2630:
  7432     05DB  0A39               	incf	___fldiv@aexp,w
  7433     05DC  1D03               	btfss	3,2
  7434     05DD  2DDF               	goto	u2921
  7435     05DE  2DE0               	goto	u2920
  7436     05DF                     u2921:
  7437     05DF  2DE8               	goto	l2634
  7438     05E0                     u2920:
  7439     05E0                     l2632:
  7440     05E0  3000               	movlw	0
  7441     05E1  00A3               	movwf	___fldiv@a+3
  7442     05E2  3000               	movlw	0
  7443     05E3  00A2               	movwf	___fldiv@a+2
  7444     05E4  3000               	movlw	0
  7445     05E5  00A1               	movwf	___fldiv@a+1
  7446     05E6  3000               	movlw	0
  7447     05E7  00A0               	movwf	___fldiv@a
  7448     05E8                     l2634:
  7449     05E8  17A2               	bsf	___fldiv@a+2,7
  7450     05E9                     l2636:
  7451     05E9  01A3               	clrf	___fldiv@a+3
  7452     05EA  2DF3               	goto	l658
  7453     05EB                     l2638:
  7454     05EB  3000               	movlw	0
  7455     05EC  00A3               	movwf	___fldiv@a+3
  7456     05ED  3000               	movlw	0
  7457     05EE  00A2               	movwf	___fldiv@a+2
  7458     05EF  3000               	movlw	0
  7459     05F0  00A1               	movwf	___fldiv@a+1
  7460     05F1  3000               	movlw	0
  7461     05F2  00A0               	movwf	___fldiv@a
  7462     05F3                     l658:
  7463     05F3  0823               	movf	___fldiv@a+3,w
  7464     05F4  0422               	iorwf	___fldiv@a+2,w
  7465     05F5  0421               	iorwf	___fldiv@a+1,w
  7466     05F6  0420               	iorwf	___fldiv@a,w
  7467     05F7  1D03               	skipz
  7468     05F8  2DFA               	goto	u2931
  7469     05F9  2DFB               	goto	u2930
  7470     05FA                     u2931:
  7471     05FA  2E14               	goto	l2648
  7472     05FB                     u2930:
  7473     05FB                     l2640:
  7474     05FB  3000               	movlw	0
  7475     05FC  00A7               	movwf	___fldiv@b+3
  7476     05FD  3000               	movlw	0
  7477     05FE  00A6               	movwf	___fldiv@b+2
  7478     05FF  3000               	movlw	0
  7479     0600  00A5               	movwf	___fldiv@b+1
  7480     0601  3000               	movlw	0
  7481     0602  00A4               	movwf	___fldiv@b
  7482     0603  3080               	movlw	128
  7483     0604  04A6               	iorwf	___fldiv@b+2,f
  7484     0605  307F               	movlw	127
  7485     0606  04A7               	iorwf	___fldiv@b+3,f
  7486     0607                     l2642:
  7487     0607  0831               	movf	___fldiv@sign,w
  7488     0608  00A8               	movwf	??___fldiv
  7489     0609  0828               	movf	??___fldiv,w
  7490     060A  04A7               	iorwf	___fldiv@b+3,f
  7491     060B                     l2644:
  7492     060B  0827               	movf	___fldiv@b+3,w
  7493     060C  00A3               	movwf	?___fldiv+3
  7494     060D  0826               	movf	___fldiv@b+2,w
  7495     060E  00A2               	movwf	?___fldiv+2
  7496     060F  0825               	movf	___fldiv@b+1,w
  7497     0610  00A1               	movwf	?___fldiv+1
  7498     0611  0824               	movf	___fldiv@b,w
  7499     0612  00A0               	movwf	?___fldiv
  7500     0613  2F4B               	goto	l660
  7501     0614                     l2648:
  7502     0614  0838               	movf	___fldiv@bexp,w
  7503     0615  1D03               	btfss	3,2
  7504     0616  2E18               	goto	u2941
  7505     0617  2E19               	goto	u2940
  7506     0618                     u2941:
  7507     0618  2E22               	goto	l2654
  7508     0619                     u2940:
  7509     0619                     l2650:
  7510     0619  3000               	movlw	0
  7511     061A  00A3               	movwf	?___fldiv+3
  7512     061B  3000               	movlw	0
  7513     061C  00A2               	movwf	?___fldiv+2
  7514     061D  3000               	movlw	0
  7515     061E  00A1               	movwf	?___fldiv+1
  7516     061F  3000               	movlw	0
  7517     0620  00A0               	movwf	?___fldiv
  7518     0621  2F4B               	goto	l660
  7519     0622                     l2654:
  7520     0622  0838               	movf	___fldiv@bexp,w
  7521     0623  00A8               	movwf	??___fldiv
  7522     0624  01A9               	clrf	??___fldiv+1
  7523     0625  0829               	movf	??___fldiv+1,w
  7524     0626  00AB               	movwf	??___fldiv+3
  7525     0627  0839               	movf	___fldiv@aexp,w
  7526     0628  0228               	subwf	??___fldiv,w
  7527     0629  00AA               	movwf	??___fldiv+2
  7528     062A  1C03               	skipc
  7529     062B  03AB               	decf	??___fldiv+3,f
  7530     062C  082A               	movf	??___fldiv+2,w
  7531     062D  3E7F               	addlw	127
  7532     062E  00B2               	movwf	___fldiv@new_exp
  7533     062F  3000               	movlw	0
  7534     0630  3D2B               	addwfc	??___fldiv+3,w
  7535     0631  00B3               	movwf	___fldiv@new_exp+1
  7536     0632                     l2656:
  7537     0632  0827               	movf	___fldiv@b+3,w
  7538     0633  00B0               	movwf	___fldiv@rem+3
  7539     0634  0826               	movf	___fldiv@b+2,w
  7540     0635  00AF               	movwf	___fldiv@rem+2
  7541     0636  0825               	movf	___fldiv@b+1,w
  7542     0637  00AE               	movwf	___fldiv@rem+1
  7543     0638  0824               	movf	___fldiv@b,w
  7544     0639  00AD               	movwf	___fldiv@rem
  7545     063A                     l2658:
  7546     063A  3000               	movlw	0
  7547     063B  00A7               	movwf	___fldiv@b+3
  7548     063C  3000               	movlw	0
  7549     063D  00A6               	movwf	___fldiv@b+2
  7550     063E  3000               	movlw	0
  7551     063F  00A5               	movwf	___fldiv@b+1
  7552     0640  3000               	movlw	0
  7553     0641  00A4               	movwf	___fldiv@b
  7554     0642                     l2660:
  7555     0642  3000               	movlw	0
  7556     0643  00B7               	movwf	___fldiv@grs+3
  7557     0644  3000               	movlw	0
  7558     0645  00B6               	movwf	___fldiv@grs+2
  7559     0646  3000               	movlw	0
  7560     0647  00B5               	movwf	___fldiv@grs+1
  7561     0648  3000               	movlw	0
  7562     0649  00B4               	movwf	___fldiv@grs
  7563     064A                     l2662:
  7564     064A  01B9               	clrf	___fldiv@aexp
  7565     064B  2E8A               	goto	l2682
  7566     064C                     l2664:
  7567     064C  0839               	movf	___fldiv@aexp,w
  7568     064D  1903               	btfsc	3,2
  7569     064E  2E50               	goto	u2951
  7570     064F  2E51               	goto	u2950
  7571     0650                     u2951:
  7572     0650  2E6B               	goto	l2674
  7573     0651                     u2950:
  7574     0651                     l2666:
  7575     0651  3001               	movlw	1
  7576     0652                     u2965:
  7577     0652  35AD               	lslf	___fldiv@rem,f
  7578     0653  0DAE               	rlf	___fldiv@rem+1,f
  7579     0654  0DAF               	rlf	___fldiv@rem+2,f
  7580     0655  0DB0               	rlf	___fldiv@rem+3,f
  7581     0656  0B89               	decfsz	9,f
  7582     0657  2E52               	goto	u2965
  7583     0658  3001               	movlw	1
  7584     0659                     u2975:
  7585     0659  35A4               	lslf	___fldiv@b,f
  7586     065A  0DA5               	rlf	___fldiv@b+1,f
  7587     065B  0DA6               	rlf	___fldiv@b+2,f
  7588     065C  0DA7               	rlf	___fldiv@b+3,f
  7589     065D  0B89               	decfsz	9,f
  7590     065E  2E59               	goto	u2975
  7591     065F                     l2668:
  7592     065F  1FB7               	btfss	___fldiv@grs+3,7
  7593     0660  2E62               	goto	u2981
  7594     0661  2E63               	goto	u2980
  7595     0662                     u2981:
  7596     0662  2E64               	goto	l2672
  7597     0663                     u2980:
  7598     0663                     l2670:
  7599     0663  1424               	bsf	___fldiv@b,0
  7600     0664                     l2672:
  7601     0664  3001               	movlw	1
  7602     0665                     u2995:
  7603     0665  35B4               	lslf	___fldiv@grs,f
  7604     0666  0DB5               	rlf	___fldiv@grs+1,f
  7605     0667  0DB6               	rlf	___fldiv@grs+2,f
  7606     0668  0DB7               	rlf	___fldiv@grs+3,f
  7607     0669  0B89               	decfsz	9,f
  7608     066A  2E65               	goto	u2995
  7609     066B                     l2674:
  7610     066B  0823               	movf	___fldiv@a+3,w
  7611     066C  0230               	subwf	___fldiv@rem+3,w
  7612     066D  1D03               	skipz
  7613     066E  2E79               	goto	u3005
  7614     066F  0822               	movf	___fldiv@a+2,w
  7615     0670  022F               	subwf	___fldiv@rem+2,w
  7616     0671  1D03               	skipz
  7617     0672  2E79               	goto	u3005
  7618     0673  0821               	movf	___fldiv@a+1,w
  7619     0674  022E               	subwf	___fldiv@rem+1,w
  7620     0675  1D03               	skipz
  7621     0676  2E79               	goto	u3005
  7622     0677  0820               	movf	___fldiv@a,w
  7623     0678  022D               	subwf	___fldiv@rem,w
  7624     0679                     u3005:
  7625     0679  1C03               	skipc
  7626     067A  2E7C               	goto	u3001
  7627     067B  2E7D               	goto	u3000
  7628     067C                     u3001:
  7629     067C  2E86               	goto	l2680
  7630     067D                     u3000:
  7631     067D                     l2676:
  7632     067D  1737               	bsf	___fldiv@grs+3,6
  7633     067E                     l2678:
  7634     067E  0820               	movf	___fldiv@a,w
  7635     067F  02AD               	subwf	___fldiv@rem,f
  7636     0680  0821               	movf	___fldiv@a+1,w
  7637     0681  3BAE               	subwfb	___fldiv@rem+1,f
  7638     0682  0822               	movf	___fldiv@a+2,w
  7639     0683  3BAF               	subwfb	___fldiv@rem+2,f
  7640     0684  0823               	movf	___fldiv@a+3,w
  7641     0685  3BB0               	subwfb	___fldiv@rem+3,f
  7642     0686                     l2680:
  7643     0686  3001               	movlw	1
  7644     0687  00A8               	movwf	??___fldiv
  7645     0688  0828               	movf	??___fldiv,w
  7646     0689  07B9               	addwf	___fldiv@aexp,f
  7647     068A                     l2682:
  7648     068A  301A               	movlw	26
  7649     068B  0239               	subwf	___fldiv@aexp,w
  7650     068C  1C03               	skipc
  7651     068D  2E8F               	goto	u3011
  7652     068E  2E90               	goto	u3010
  7653     068F                     u3011:
  7654     068F  2E4C               	goto	l2664
  7655     0690                     u3010:
  7656     0690                     l2684:
  7657     0690  0830               	movf	___fldiv@rem+3,w
  7658     0691  042F               	iorwf	___fldiv@rem+2,w
  7659     0692  042E               	iorwf	___fldiv@rem+1,w
  7660     0693  042D               	iorwf	___fldiv@rem,w
  7661     0694  1903               	skipnz
  7662     0695  2E97               	goto	u3021
  7663     0696  2E98               	goto	u3020
  7664     0697                     u3021:
  7665     0697  2EB1               	goto	l2698
  7666     0698                     u3020:
  7667     0698                     l2686:
  7668     0698  1434               	bsf	___fldiv@grs,0
  7669     0699  2EB1               	goto	l2698
  7670     069A                     l2688:
  7671     069A  3001               	movlw	1
  7672     069B                     u3035:
  7673     069B  35A4               	lslf	___fldiv@b,f
  7674     069C  0DA5               	rlf	___fldiv@b+1,f
  7675     069D  0DA6               	rlf	___fldiv@b+2,f
  7676     069E  0DA7               	rlf	___fldiv@b+3,f
  7677     069F  0B89               	decfsz	9,f
  7678     06A0  2E9B               	goto	u3035
  7679     06A1                     l2690:
  7680     06A1  1FB7               	btfss	___fldiv@grs+3,7
  7681     06A2  2EA4               	goto	u3041
  7682     06A3  2EA5               	goto	u3040
  7683     06A4                     u3041:
  7684     06A4  2EA6               	goto	l2694
  7685     06A5                     u3040:
  7686     06A5                     l2692:
  7687     06A5  1424               	bsf	___fldiv@b,0
  7688     06A6                     l2694:
  7689     06A6  3001               	movlw	1
  7690     06A7                     u3055:
  7691     06A7  35B4               	lslf	___fldiv@grs,f
  7692     06A8  0DB5               	rlf	___fldiv@grs+1,f
  7693     06A9  0DB6               	rlf	___fldiv@grs+2,f
  7694     06AA  0DB7               	rlf	___fldiv@grs+3,f
  7695     06AB  0B89               	decfsz	9,f
  7696     06AC  2EA7               	goto	u3055
  7697     06AD                     l2696:
  7698     06AD  30FF               	movlw	255
  7699     06AE  07B2               	addwf	___fldiv@new_exp,f
  7700     06AF  30FF               	movlw	255
  7701     06B0  3DB3               	addwfc	___fldiv@new_exp+1,f
  7702     06B1                     l2698:
  7703     06B1  1FA6               	btfss	___fldiv@b+2,7
  7704     06B2  2EB4               	goto	u3061
  7705     06B3  2EB5               	goto	u3060
  7706     06B4                     u3061:
  7707     06B4  2E9A               	goto	l2688
  7708     06B5                     u3060:
  7709     06B5                     l2700:
  7710     06B5  01B9               	clrf	___fldiv@aexp
  7711     06B6                     l2702:
  7712     06B6  1FB7               	btfss	___fldiv@grs+3,7
  7713     06B7  2EB9               	goto	u3071
  7714     06B8  2EBA               	goto	u3070
  7715     06B9                     u3071:
  7716     06B9  2ED6               	goto	l2710
  7717     06BA                     u3070:
  7718     06BA                     l2704:
  7719     06BA  30FF               	movlw	255
  7720     06BB  0534               	andwf	___fldiv@grs,w
  7721     06BC  00A8               	movwf	??___fldiv
  7722     06BD  30FF               	movlw	255
  7723     06BE  0535               	andwf	___fldiv@grs+1,w
  7724     06BF  00A9               	movwf	??___fldiv+1
  7725     06C0  30FF               	movlw	255
  7726     06C1  0536               	andwf	___fldiv@grs+2,w
  7727     06C2  00AA               	movwf	??___fldiv+2
  7728     06C3  307F               	movlw	127
  7729     06C4  0537               	andwf	___fldiv@grs+3,w
  7730     06C5  00AB               	movwf	??___fldiv+3
  7731     06C6  082B               	movf	??___fldiv+3,w
  7732     06C7  042A               	iorwf	??___fldiv+2,w
  7733     06C8  0429               	iorwf	??___fldiv+1,w
  7734     06C9  0428               	iorwf	??___fldiv,w
  7735     06CA  1903               	skipnz
  7736     06CB  2ECD               	goto	u3081
  7737     06CC  2ECE               	goto	u3080
  7738     06CD                     u3081:
  7739     06CD  2ED1               	goto	l674
  7740     06CE                     u3080:
  7741     06CE                     l2706:
  7742     06CE  01B9               	clrf	___fldiv@aexp
  7743     06CF  0AB9               	incf	___fldiv@aexp,f
  7744     06D0  2ED6               	goto	l2710
  7745     06D1                     l674:
  7746     06D1  1C24               	btfss	___fldiv@b,0
  7747     06D2  2ED4               	goto	u3091
  7748     06D3  2ED5               	goto	u3090
  7749     06D4                     u3091:
  7750     06D4  2ED6               	goto	l2710
  7751     06D5                     u3090:
  7752     06D5  2ECE               	goto	l2706
  7753     06D6                     l2710:
  7754     06D6  0839               	movf	___fldiv@aexp,w
  7755     06D7  1903               	btfsc	3,2
  7756     06D8  2EDA               	goto	u3101
  7757     06D9  2EDB               	goto	u3100
  7758     06DA                     u3101:
  7759     06DA  2F03               	goto	l2720
  7760     06DB                     u3100:
  7761     06DB                     l2712:
  7762     06DB  3001               	movlw	1
  7763     06DC  07A4               	addwf	___fldiv@b,f
  7764     06DD  3000               	movlw	0
  7765     06DE  3DA5               	addwfc	___fldiv@b+1,f
  7766     06DF  3000               	movlw	0
  7767     06E0  3DA6               	addwfc	___fldiv@b+2,f
  7768     06E1  3000               	movlw	0
  7769     06E2  3DA7               	addwfc	___fldiv@b+3,f
  7770     06E3                     l2714:
  7771     06E3  1C27               	btfss	___fldiv@b+3,0
  7772     06E4  2EE6               	goto	u3111
  7773     06E5  2EE7               	goto	u3110
  7774     06E6                     u3111:
  7775     06E6  2F03               	goto	l2720
  7776     06E7                     u3110:
  7777     06E7                     l2716:
  7778     06E7  0824               	movf	___fldiv@b,w
  7779     06E8  00A8               	movwf	??___fldiv
  7780     06E9  0825               	movf	___fldiv@b+1,w
  7781     06EA  00A9               	movwf	??___fldiv+1
  7782     06EB  0826               	movf	___fldiv@b+2,w
  7783     06EC  00AA               	movwf	??___fldiv+2
  7784     06ED  0827               	movf	___fldiv@b+3,w
  7785     06EE  00AB               	movwf	??___fldiv+3
  7786     06EF  3001               	movlw	1
  7787     06F0  00AC               	movwf	??___fldiv+4
  7788     06F1                     u3125:
  7789     06F1  37AB               	asrf	??___fldiv+3,f
  7790     06F2  0CAA               	rrf	??___fldiv+2,f
  7791     06F3  0CA9               	rrf	??___fldiv+1,f
  7792     06F4  0CA8               	rrf	??___fldiv,f
  7793     06F5                     u3120:
  7794     06F5  0BAC               	decfsz	??___fldiv+4,f
  7795     06F6  2EF1               	goto	u3125
  7796     06F7  082B               	movf	??___fldiv+3,w
  7797     06F8  00A7               	movwf	___fldiv@b+3
  7798     06F9  082A               	movf	??___fldiv+2,w
  7799     06FA  00A6               	movwf	___fldiv@b+2
  7800     06FB  0829               	movf	??___fldiv+1,w
  7801     06FC  00A5               	movwf	___fldiv@b+1
  7802     06FD  0828               	movf	??___fldiv,w
  7803     06FE  00A4               	movwf	___fldiv@b
  7804     06FF                     l2718:
  7805     06FF  3001               	movlw	1
  7806     0700  07B2               	addwf	___fldiv@new_exp,f
  7807     0701  3000               	movlw	0
  7808     0702  3DB3               	addwfc	___fldiv@new_exp+1,f
  7809     0703                     l2720:
  7810     0703  0833               	movf	___fldiv@new_exp+1,w
  7811     0704  3A80               	xorlw	128
  7812     0705  00A8               	movwf	??___fldiv
  7813     0706  3080               	movlw	128
  7814     0707  0228               	subwf	??___fldiv,w
  7815     0708  1D03               	skipz
  7816     0709  2F0C               	goto	u3135
  7817     070A  30FF               	movlw	255
  7818     070B  0232               	subwf	___fldiv@new_exp,w
  7819     070C                     u3135:
  7820     070C  1C03               	skipc
  7821     070D  2F0F               	goto	u3131
  7822     070E  2F10               	goto	u3130
  7823     070F                     u3131:
  7824     070F  2F1D               	goto	l679
  7825     0710                     u3130:
  7826     0710                     l2722:
  7827     0710  30FF               	movlw	255
  7828     0711  0020               	movlb	0	; select bank0
  7829     0712  00B2               	movwf	___fldiv@new_exp
  7830     0713  3000               	movlw	0
  7831     0714  00B3               	movwf	___fldiv@new_exp+1
  7832     0715  3000               	movlw	0
  7833     0716  00A7               	movwf	___fldiv@b+3
  7834     0717  3000               	movlw	0
  7835     0718  00A6               	movwf	___fldiv@b+2
  7836     0719  3000               	movlw	0
  7837     071A  00A5               	movwf	___fldiv@b+1
  7838     071B  3000               	movlw	0
  7839     071C  00A4               	movwf	___fldiv@b
  7840     071D                     l679:
  7841     071D  0020               	movlb	0	; select bank0
  7842     071E  0833               	movf	___fldiv@new_exp+1,w
  7843     071F  3A80               	xorlw	128
  7844     0720  00A8               	movwf	??___fldiv
  7845     0721  3080               	movlw	128
  7846     0722  0228               	subwf	??___fldiv,w
  7847     0723  1D03               	skipz
  7848     0724  2F27               	goto	u3145
  7849     0725  3001               	movlw	1
  7850     0726  0232               	subwf	___fldiv@new_exp,w
  7851     0727                     u3145:
  7852     0727  1803               	skipnc
  7853     0728  2F2A               	goto	u3141
  7854     0729  2F2B               	goto	u3140
  7855     072A                     u3141:
  7856     072A  2F37               	goto	l680
  7857     072B                     u3140:
  7858     072B                     l2724:
  7859     072B  0020               	movlb	0	; select bank0
  7860     072C  01B2               	clrf	___fldiv@new_exp
  7861     072D  01B3               	clrf	___fldiv@new_exp+1
  7862     072E                     l2726:
  7863     072E  3000               	movlw	0
  7864     072F  00A7               	movwf	___fldiv@b+3
  7865     0730  3000               	movlw	0
  7866     0731  00A6               	movwf	___fldiv@b+2
  7867     0732  3000               	movlw	0
  7868     0733  00A5               	movwf	___fldiv@b+1
  7869     0734  3000               	movlw	0
  7870     0735  00A4               	movwf	___fldiv@b
  7871     0736                     l2728:
  7872     0736  01B1               	clrf	___fldiv@sign
  7873     0737                     l680:
  7874     0737  0020               	movlb	0	; select bank0
  7875     0738  0832               	movf	___fldiv@new_exp,w
  7876     0739  00B8               	movwf	___fldiv@bexp
  7877     073A                     l2730:
  7878     073A  1C38               	btfss	___fldiv@bexp,0
  7879     073B  2F3D               	goto	u3151
  7880     073C  2F3E               	goto	u3150
  7881     073D                     u3151:
  7882     073D  2F40               	goto	l2734
  7883     073E                     u3150:
  7884     073E                     l2732:
  7885     073E  17A6               	bsf	___fldiv@b+2,7
  7886     073F  2F44               	goto	l682
  7887     0740                     l2734:
  7888     0740  307F               	movlw	127
  7889     0741  00A8               	movwf	??___fldiv
  7890     0742  0828               	movf	??___fldiv,w
  7891     0743  05A6               	andwf	___fldiv@b+2,f
  7892     0744                     l682:
  7893     0744  3638               	lsrf	___fldiv@bexp,w
  7894     0745  00A7               	movwf	___fldiv@b+3
  7895     0746  0831               	movf	___fldiv@sign,w
  7896     0747  00A8               	movwf	??___fldiv
  7897     0748  0828               	movf	??___fldiv,w
  7898     0749  04A7               	iorwf	___fldiv@b+3,f
  7899     074A  2E0B               	goto	l2644
  7900     074B                     l660:
  7901     074B  0008               	return
  7902     074C                     __end_of___fldiv:
  7903                           
  7904                           	psect	text24
  7905     12E8                     __ptext24:	
  7906 ;; *************** function _prom_us *****************
  7907 ;; Defined at:
  7908 ;;		line 104 in file "lib.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  us1             2   10[BANK0 ] unsigned int 
  7911 ;;  us2             2   12[BANK0 ] unsigned int 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;		None
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  1    wreg      unsigned char 
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7923 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7925 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;Total ram usage:        6 bytes
  7928 ;; Hardware stack levels used: 1
  7929 ;; Hardware stack levels required when called: 2
  7930 ;; This function calls:
  7931 ;;		Nothing
  7932 ;; This function is called by:
  7933 ;;		_main
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937     12E8                     _prom_us:	
  7938                           ;psect for function _prom_us
  7939                           
  7940     12E8                     l3592:	
  7941                           ;incstack = 0
  7942                           ; Regs used in _prom_us: [wreg+status,2+status,0]
  7943                           
  7944                           
  7945                           ;lib.c: 105:     return (us1 + us2)/2;
  7946     12E8  0020               	movlb	0	; select bank0
  7947     12E9  082C               	movf	prom_us@us2,w
  7948     12EA  072A               	addwf	prom_us@us1,w
  7949     12EB  00AE               	movwf	??_prom_us
  7950     12EC  082D               	movf	prom_us@us2+1,w
  7951     12ED  3D2B               	addwfc	prom_us@us1+1,w
  7952     12EE  00AF               	movwf	??_prom_us+1
  7953     12EF  36AF               	lsrf	??_prom_us+1,f
  7954     12F0  0CAE               	rrf	??_prom_us,f
  7955     12F1  082E               	movf	??_prom_us,w
  7956     12F2                     l207:
  7957     12F2  0008               	return
  7958     12F3                     __end_of_prom_us:
  7959                           
  7960                           	psect	text25
  7961     1620                     __ptext25:	
  7962 ;; *************** function _map *****************
  7963 ;; Defined at:
  7964 ;;		line 125 in file "lib.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  x               4   27[BANK0 ] long 
  7967 ;;  in_min          4   31[BANK0 ] long 
  7968 ;;  in_max          4   35[BANK0 ] long 
  7969 ;;  out_min         4   39[BANK0 ] long 
  7970 ;;  out_max         4   43[BANK0 ] long 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  4   27[BANK0 ] long 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2, status,0, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7982 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;Total ram usage:       36 bytes
  7987 ;; Hardware stack levels used: 1
  7988 ;; Hardware stack levels required when called: 3
  7989 ;; This function calls:
  7990 ;;		___aldiv
  7991 ;;		___lmul
  7992 ;; This function is called by:
  7993 ;;		_main
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997     1620                     _map:	
  7998                           ;psect for function _map
  7999                           
  8000     1620                     l3596:	
  8001                           ;incstack = 0
  8002                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  8003                           
  8004                           
  8005                           ;lib.c: 126:   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  8006     1620  0020               	movlb	0	; select bank0
  8007     1621  083F               	movf	map@in_min,w
  8008     1622  0243               	subwf	map@in_max,w
  8009     1623  00CF               	movwf	??_map
  8010     1624  0840               	movf	map@in_min+1,w
  8011     1625  3B44               	subwfb	map@in_max+1,w
  8012     1626  00D0               	movwf	??_map+1
  8013     1627  0841               	movf	map@in_min+2,w
  8014     1628  3B45               	subwfb	map@in_max+2,w
  8015     1629  00D1               	movwf	??_map+2
  8016     162A  0842               	movf	map@in_min+3,w
  8017     162B  3B46               	subwfb	map@in_max+3,w
  8018     162C  00D2               	movwf	??_map+3
  8019     162D  0852               	movf	??_map+3,w
  8020     162E  00AF               	movwf	___aldiv@divisor+3
  8021     162F  0851               	movf	??_map+2,w
  8022     1630  00AE               	movwf	___aldiv@divisor+2
  8023     1631  0850               	movf	??_map+1,w
  8024     1632  00AD               	movwf	___aldiv@divisor+1
  8025     1633  084F               	movf	??_map,w
  8026     1634  00AC               	movwf	___aldiv@divisor
  8027     1635  083F               	movf	map@in_min,w
  8028     1636  023B               	subwf	map@x,w
  8029     1637  00D3               	movwf	??_map+4
  8030     1638  0840               	movf	map@in_min+1,w
  8031     1639  3B3C               	subwfb	map@x+1,w
  8032     163A  00D4               	movwf	??_map+5
  8033     163B  0841               	movf	map@in_min+2,w
  8034     163C  3B3D               	subwfb	map@x+2,w
  8035     163D  00D5               	movwf	??_map+6
  8036     163E  0842               	movf	map@in_min+3,w
  8037     163F  3B3E               	subwfb	map@x+3,w
  8038     1640  00D6               	movwf	??_map+7
  8039     1641  0856               	movf	??_map+7,w
  8040     1642  00A3               	movwf	___lmul@multiplier+3
  8041     1643  0855               	movf	??_map+6,w
  8042     1644  00A2               	movwf	___lmul@multiplier+2
  8043     1645  0854               	movf	??_map+5,w
  8044     1646  00A1               	movwf	___lmul@multiplier+1
  8045     1647  0853               	movf	??_map+4,w
  8046     1648  00A0               	movwf	___lmul@multiplier
  8047     1649  0847               	movf	map@out_min,w
  8048     164A  024B               	subwf	map@out_max,w
  8049     164B  00D7               	movwf	??_map+8
  8050     164C  0848               	movf	map@out_min+1,w
  8051     164D  3B4C               	subwfb	map@out_max+1,w
  8052     164E  00D8               	movwf	??_map+9
  8053     164F  0849               	movf	map@out_min+2,w
  8054     1650  3B4D               	subwfb	map@out_max+2,w
  8055     1651  00D9               	movwf	??_map+10
  8056     1652  084A               	movf	map@out_min+3,w
  8057     1653  3B4E               	subwfb	map@out_max+3,w
  8058     1654  00DA               	movwf	??_map+11
  8059     1655  085A               	movf	??_map+11,w
  8060     1656  00A7               	movwf	___lmul@multiplicand+3
  8061     1657  0859               	movf	??_map+10,w
  8062     1658  00A6               	movwf	___lmul@multiplicand+2
  8063     1659  0858               	movf	??_map+9,w
  8064     165A  00A5               	movwf	___lmul@multiplicand+1
  8065     165B  0857               	movf	??_map+8,w
  8066     165C  00A4               	movwf	___lmul@multiplicand
  8067     165D  3194  246E  3196   	fcall	___lmul
  8068     1660  0020               	movlb	0	; select bank0
  8069     1661  0823               	movf	?___lmul+3,w
  8070     1662  00B3               	movwf	___aldiv@dividend+3
  8071     1663  0822               	movf	?___lmul+2,w
  8072     1664  00B2               	movwf	___aldiv@dividend+2
  8073     1665  0821               	movf	?___lmul+1,w
  8074     1666  00B1               	movwf	___aldiv@dividend+1
  8075     1667  0820               	movf	?___lmul,w
  8076     1668  00B0               	movwf	___aldiv@dividend
  8077     1669  3197  2770  3196   	fcall	___aldiv
  8078     166C  0020               	movlb	0	; select bank0
  8079     166D  082C               	movf	?___aldiv,w
  8080     166E  0747               	addwf	map@out_min,w
  8081     166F  00DB               	movwf	??_map+12
  8082     1670  082D               	movf	?___aldiv+1,w
  8083     1671  3D48               	addwfc	map@out_min+1,w
  8084     1672  00DC               	movwf	??_map+13
  8085     1673  082E               	movf	?___aldiv+2,w
  8086     1674  3D49               	addwfc	map@out_min+2,w
  8087     1675  00DD               	movwf	??_map+14
  8088     1676  082F               	movf	?___aldiv+3,w
  8089     1677  3D4A               	addwfc	map@out_min+3,w
  8090     1678  00DE               	movwf	??_map+15
  8091     1679  085E               	movf	??_map+15,w
  8092     167A  00BE               	movwf	?_map+3
  8093     167B  085D               	movf	??_map+14,w
  8094     167C  00BD               	movwf	?_map+2
  8095     167D  085C               	movf	??_map+13,w
  8096     167E  00BC               	movwf	?_map+1
  8097     167F  085B               	movf	??_map+12,w
  8098     1680  00BB               	movwf	?_map
  8099     1681                     l217:
  8100     1681  0008               	return
  8101     1682                     __end_of_map:
  8102                           
  8103                           	psect	text26
  8104     146E                     __ptext26:	
  8105 ;; *************** function ___lmul *****************
  8106 ;; Defined at:
  8107 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8110 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  product         4    8[BANK0 ] unsigned long 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  4    0[BANK0 ] unsigned long 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8122 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;Total ram usage:       12 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 2
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_map
  8133 ;;		_strtof
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137     146E                     ___lmul:	
  8138                           ;psect for function ___lmul
  8139                           
  8140     146E                     l2546:	
  8141                           ;incstack = 0
  8142                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8143                           
  8144     146E  3000               	movlw	0
  8145     146F  0020               	movlb	0	; select bank0
  8146     1470  00AB               	movwf	___lmul@product+3
  8147     1471  3000               	movlw	0
  8148     1472  00AA               	movwf	___lmul@product+2
  8149     1473  3000               	movlw	0
  8150     1474  00A9               	movwf	___lmul@product+1
  8151     1475  3000               	movlw	0
  8152     1476  00A8               	movwf	___lmul@product
  8153     1477                     l2548:
  8154     1477  1C20               	btfss	___lmul@multiplier,0
  8155     1478  2C7A               	goto	u2741
  8156     1479  2C7B               	goto	u2740
  8157     147A                     u2741:
  8158     147A  2C83               	goto	l2552
  8159     147B                     u2740:
  8160     147B                     l2550:
  8161     147B  0824               	movf	___lmul@multiplicand,w
  8162     147C  07A8               	addwf	___lmul@product,f
  8163     147D  0825               	movf	___lmul@multiplicand+1,w
  8164     147E  3DA9               	addwfc	___lmul@product+1,f
  8165     147F  0826               	movf	___lmul@multiplicand+2,w
  8166     1480  3DAA               	addwfc	___lmul@product+2,f
  8167     1481  0827               	movf	___lmul@multiplicand+3,w
  8168     1482  3DAB               	addwfc	___lmul@product+3,f
  8169     1483                     l2552:
  8170     1483  3001               	movlw	1
  8171     1484                     u2755:
  8172     1484  35A4               	lslf	___lmul@multiplicand,f
  8173     1485  0DA5               	rlf	___lmul@multiplicand+1,f
  8174     1486  0DA6               	rlf	___lmul@multiplicand+2,f
  8175     1487  0DA7               	rlf	___lmul@multiplicand+3,f
  8176     1488  0B89               	decfsz	9,f
  8177     1489  2C84               	goto	u2755
  8178     148A                     l2554:
  8179     148A  3001               	movlw	1
  8180     148B                     u2765:
  8181     148B  36A3               	lsrf	___lmul@multiplier+3,f
  8182     148C  0CA2               	rrf	___lmul@multiplier+2,f
  8183     148D  0CA1               	rrf	___lmul@multiplier+1,f
  8184     148E  0CA0               	rrf	___lmul@multiplier,f
  8185     148F  0B89               	decfsz	9,f
  8186     1490  2C8B               	goto	u2765
  8187     1491  0823               	movf	___lmul@multiplier+3,w
  8188     1492  0422               	iorwf	___lmul@multiplier+2,w
  8189     1493  0421               	iorwf	___lmul@multiplier+1,w
  8190     1494  0420               	iorwf	___lmul@multiplier,w
  8191     1495  1D03               	skipz
  8192     1496  2C98               	goto	u2771
  8193     1497  2C99               	goto	u2770
  8194     1498                     u2771:
  8195     1498  2C77               	goto	l2548
  8196     1499                     u2770:
  8197     1499                     l2556:
  8198     1499  082B               	movf	___lmul@product+3,w
  8199     149A  00A3               	movwf	?___lmul+3
  8200     149B  082A               	movf	___lmul@product+2,w
  8201     149C  00A2               	movwf	?___lmul+2
  8202     149D  0829               	movf	___lmul@product+1,w
  8203     149E  00A1               	movwf	?___lmul+1
  8204     149F  0828               	movf	___lmul@product,w
  8205     14A0  00A0               	movwf	?___lmul
  8206     14A1                     l315:
  8207     14A1  0008               	return
  8208     14A2                     __end_of___lmul:
  8209                           
  8210                           	psect	text27
  8211     14D6                     __ptext27:	
  8212 ;; *************** function _beginSecuence *****************
  8213 ;; Defined at:
  8214 ;;		line 129 in file "lib.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  i               2    1[BANK0 ] int 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      void 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;Total ram usage:        3 bytes
  8233 ;; Hardware stack levels used: 1
  8234 ;; Hardware stack levels required when called: 2
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_main
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242     14D6                     _beginSecuence:	
  8243                           ;psect for function _beginSecuence
  8244                           
  8245     14D6                     l3542:	
  8246                           ;incstack = 0
  8247                           ; Regs used in _beginSecuence: [wreg+status,2+status,0]
  8248                           
  8249                           
  8250                           ;lib.c: 130:     PORTCbits.RC1 = 1;
  8251     14D6  0020               	movlb	0	; select bank0
  8252     14D7  148E               	bsf	14,1	;volatile
  8253     14D8                     l3544:
  8254                           
  8255                           ;lib.c: 131:     PORTA = 0xFF;
  8256     14D8  30FF               	movlw	255
  8257     14D9  008C               	movwf	12	;volatile
  8258                           
  8259                           ;lib.c: 132:     _delay((unsigned long)((50)*(4000000/4000.0)));
  8260     14DA  3041               	movlw	65
  8261     14DB  0020               	movlb	0	; select bank0
  8262     14DC  00A0               	movwf	??_beginSecuence
  8263     14DD  30EE               	movlw	238
  8264     14DE                     u5217:
  8265     14DE  0B89               	decfsz	9,f
  8266     14DF  2CDE               	goto	u5217
  8267     14E0  0BA0               	decfsz	??_beginSecuence,f
  8268     14E1  2CDE               	goto	u5217
  8269     14E2  0000               	nop
  8270     14E3                     l3546:
  8271                           
  8272                           ;lib.c: 133:     for (int i = 0; i < 8; i++){
  8273     14E3  0020               	movlb	0	; select bank0
  8274     14E4  01A1               	clrf	beginSecuence@i
  8275     14E5  01A2               	clrf	beginSecuence@i+1
  8276     14E6                     l3552:
  8277                           
  8278                           ;lib.c: 134:         PORTA = PORTA << 1;
  8279     14E6  0020               	movlb	0	; select bank0
  8280     14E7  350C               	lslf	12,w	;volatile
  8281     14E8  008C               	movwf	12	;volatile
  8282     14E9                     l3554:
  8283                           
  8284                           ;lib.c: 135:         PORTCbits.RC1 = !PORTCbits.RC1;
  8285     14E9  1003               	clrc
  8286     14EA  1C8E               	btfss	14,1	;volatile
  8287     14EB  1403               	setc
  8288     14EC  1803               	btfsc	3,0
  8289     14ED  2CEF               	goto	u4851
  8290     14EE  2CF2               	goto	u4850
  8291     14EF                     u4851:
  8292     14EF  0020               	movlb	0	; select bank0
  8293     14F0  148E               	bsf	14,1	;volatile
  8294     14F1  2CF4               	goto	u4864
  8295     14F2                     u4850:
  8296     14F2  0020               	movlb	0	; select bank0
  8297     14F3  108E               	bcf	14,1	;volatile
  8298     14F4                     u4864:
  8299     14F4                     l3556:
  8300                           
  8301                           ;lib.c: 136:         _delay((unsigned long)((50)*(4000000/4000.0)));
  8302     14F4  3041               	movlw	65
  8303     14F5  0020               	movlb	0	; select bank0
  8304     14F6  00A0               	movwf	??_beginSecuence
  8305     14F7  30EE               	movlw	238
  8306     14F8                     u5227:
  8307     14F8  0B89               	decfsz	9,f
  8308     14F9  2CF8               	goto	u5227
  8309     14FA  0BA0               	decfsz	??_beginSecuence,f
  8310     14FB  2CF8               	goto	u5227
  8311     14FC  0000               	nop
  8312     14FD                     l3558:
  8313                           
  8314                           ;lib.c: 137:     }
  8315     14FD  3001               	movlw	1
  8316     14FE  0020               	movlb	0	; select bank0
  8317     14FF  07A1               	addwf	beginSecuence@i,f
  8318     1500  3000               	movlw	0
  8319     1501  3DA2               	addwfc	beginSecuence@i+1,f
  8320     1502                     l3560:
  8321     1502  0822               	movf	beginSecuence@i+1,w
  8322     1503  3A80               	xorlw	128
  8323     1504  00A0               	movwf	??_beginSecuence
  8324     1505  3080               	movlw	128
  8325     1506  0220               	subwf	??_beginSecuence,w
  8326     1507  1D03               	skipz
  8327     1508  2D0B               	goto	u4875
  8328     1509  3008               	movlw	8
  8329     150A  0221               	subwf	beginSecuence@i,w
  8330     150B                     u4875:
  8331     150B  1C03               	skipc
  8332     150C  2D0E               	goto	u4871
  8333     150D  2D0F               	goto	u4870
  8334     150E                     u4871:
  8335     150E  2CE6               	goto	l3552
  8336     150F                     u4870:
  8337     150F                     l221:
  8338                           
  8339                           ;lib.c: 138:     PORTCbits.RC1 = 0;
  8340     150F  0020               	movlb	0	; select bank0
  8341     1510  108E               	bcf	14,1	;volatile
  8342     1511                     l222:
  8343     1511  0008               	return
  8344     1512                     __end_of_beginSecuence:
  8345                           
  8346                           	psect	text28
  8347     143A                     __ptext28:	
  8348 ;; *************** function _UARTsendString *****************
  8349 ;; Defined at:
  8350 ;;		line 69 in file "lib.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  8353 ;;		 -> STR_1(15), 
  8354 ;;  max_length      1    2[BANK0 ] const unsigned char 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  i               2    4[BANK0 ] int 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      void 
  8359 ;; Registers used:
  8360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8366 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;Total ram usage:        6 bytes
  8371 ;; Hardware stack levels used: 1
  8372 ;; Hardware stack levels required when called: 2
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_main
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380     143A                     _UARTsendString:	
  8381                           ;psect for function _UARTsendString
  8382                           
  8383     143A                     l3532:	
  8384                           ;incstack = 0
  8385                           ; Regs used in _UARTsendString: [wreg-fsr0h+status,2+status,0+pclath]
  8386                           
  8387                           
  8388                           ;lib.c: 70:     int i = 0;
  8389     143A  0020               	movlb	0	; select bank0
  8390     143B  01A4               	clrf	UARTsendString@i
  8391     143C  01A5               	clrf	UARTsendString@i+1
  8392                           
  8393                           ;lib.c: 71:     for (i = 0; i < max_length && str[i] != '\0'; i++) {
  8394     143D  01A4               	clrf	UARTsendString@i
  8395     143E  01A5               	clrf	UARTsendString@i+1
  8396     143F  2C54               	goto	l3538
  8397     1440                     l185:
  8398     1440  0023               	movlb	3	; select bank3
  8399     1441  1C9E               	btfss	30,1	;volatile
  8400     1442  2C44               	goto	u4821
  8401     1443  2C45               	goto	u4820
  8402     1444                     u4821:
  8403     1444  2C40               	goto	l185
  8404     1445                     u4820:
  8405     1445                     l3534:
  8406                           
  8407                           ;lib.c: 73:         TXREG = str[i];
  8408     1445  0020               	movlb	0	; select bank0
  8409     1446  0820               	movf	UARTsendString@str,w
  8410     1447  0724               	addwf	UARTsendString@i,w
  8411     1448  0084               	movwf	4
  8412     1449  0821               	movf	UARTsendString@str+1,w
  8413     144A  3D25               	addwfc	UARTsendString@i+1,w
  8414     144B  0085               	movwf	5
  8415     144C  0800               	movf	0,w	;code access
  8416     144D  0023               	movlb	3	; select bank3
  8417     144E  009A               	movwf	26	;volatile
  8418     144F                     l3536:
  8419                           
  8420                           ;lib.c: 74:     }
  8421     144F  3001               	movlw	1
  8422     1450  0020               	movlb	0	; select bank0
  8423     1451  07A4               	addwf	UARTsendString@i,f
  8424     1452  3000               	movlw	0
  8425     1453  3DA5               	addwfc	UARTsendString@i+1,f
  8426     1454                     l3538:
  8427     1454  0825               	movf	UARTsendString@i+1,w
  8428     1455  3A80               	xorlw	128
  8429     1456  00A3               	movwf	??_UARTsendString
  8430     1457  3080               	movlw	128
  8431     1458  0223               	subwf	??_UARTsendString,w
  8432     1459  1D03               	skipz
  8433     145A  2C5D               	goto	u4835
  8434     145B  0822               	movf	UARTsendString@max_length,w
  8435     145C  0224               	subwf	UARTsendString@i,w
  8436     145D                     u4835:
  8437     145D  1803               	skipnc
  8438     145E  2C60               	goto	u4831
  8439     145F  2C61               	goto	u4830
  8440     1460                     u4831:
  8441     1460  2C6D               	goto	l191
  8442     1461                     u4830:
  8443     1461                     l3540:
  8444     1461  0020               	movlb	0	; select bank0
  8445     1462  0820               	movf	UARTsendString@str,w
  8446     1463  0724               	addwf	UARTsendString@i,w
  8447     1464  0084               	movwf	4
  8448     1465  0821               	movf	UARTsendString@str+1,w
  8449     1466  3D25               	addwfc	UARTsendString@i+1,w
  8450     1467  0085               	movwf	5
  8451     1468  0012               	moviw fsr0++
  8452     1469  1D03               	btfss	3,2
  8453     146A  2C6C               	goto	u4841
  8454     146B  2C6D               	goto	u4840
  8455     146C                     u4841:
  8456     146C  2C40               	goto	l185
  8457     146D                     u4840:
  8458     146D                     l191:
  8459     146D  0008               	return
  8460     146E                     __end_of_UARTsendString:
  8461                           
  8462                           	psect	text29
  8463     1682                     __ptext29:	
  8464 ;; *************** function _UARTinit *****************
  8465 ;; Defined at:
  8466 ;;		line 42 in file "lib.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  baud_rate       4   27[BANK0 ] const long 
  8469 ;;  BRGH            1   31[BANK0 ] const unsigned char 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0, pclath, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8481 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;Total ram usage:        9 bytes
  8486 ;; Hardware stack levels used: 1
  8487 ;; Hardware stack levels required when called: 3
  8488 ;; This function calls:
  8489 ;;		___aldiv
  8490 ;; This function is called by:
  8491 ;;		_main
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495     1682                     _UARTinit:	
  8496                           ;psect for function _UARTinit
  8497                           
  8498     1682                     l3502:	
  8499                           ;incstack = 0
  8500                           ; Regs used in _UARTinit: [wreg+status,2+status,0+pclath+cstack]
  8501                           
  8502                           
  8503                           ;lib.c: 44:     if (BRGH == 0) {
  8504     1682  0020               	movlb	0	; select bank0
  8505     1683  083F               	movf	UARTinit@BRGH,w
  8506     1684  1D03               	btfss	3,2
  8507     1685  2E87               	goto	u4791
  8508     1686  2E88               	goto	u4790
  8509     1687                     u4791:
  8510     1687  2EB1               	goto	l3508
  8511     1688                     u4790:
  8512     1688                     l3504:
  8513                           
  8514                           ;lib.c: 45:         SPBRG = 4000000 / (64 * baud_rate) - 1;
  8515     1688  083B               	movf	UARTinit@baud_rate,w
  8516     1689  00C0               	movwf	??_UARTinit
  8517     168A  083C               	movf	UARTinit@baud_rate+1,w
  8518     168B  00C1               	movwf	??_UARTinit+1
  8519     168C  083D               	movf	UARTinit@baud_rate+2,w
  8520     168D  00C2               	movwf	??_UARTinit+2
  8521     168E  083E               	movf	UARTinit@baud_rate+3,w
  8522     168F  00C3               	movwf	??_UARTinit+3
  8523     1690  3006               	movlw	6
  8524     1691                     u4805:
  8525     1691  35C0               	lslf	??_UARTinit,f
  8526     1692  0DC1               	rlf	??_UARTinit+1,f
  8527     1693  0DC2               	rlf	??_UARTinit+2,f
  8528     1694  0DC3               	rlf	??_UARTinit+3,f
  8529     1695                     u4800:
  8530     1695  0B89               	decfsz	9,f
  8531     1696  2E91               	goto	u4805
  8532     1697  0843               	movf	??_UARTinit+3,w
  8533     1698  00AF               	movwf	___aldiv@divisor+3
  8534     1699  0842               	movf	??_UARTinit+2,w
  8535     169A  00AE               	movwf	___aldiv@divisor+2
  8536     169B  0841               	movf	??_UARTinit+1,w
  8537     169C  00AD               	movwf	___aldiv@divisor+1
  8538     169D  0840               	movf	??_UARTinit,w
  8539     169E  00AC               	movwf	___aldiv@divisor
  8540     169F  3000               	movlw	0
  8541     16A0  00B3               	movwf	___aldiv@dividend+3
  8542     16A1  303D               	movlw	61
  8543     16A2  00B2               	movwf	___aldiv@dividend+2
  8544     16A3  3009               	movlw	9
  8545     16A4  00B1               	movwf	___aldiv@dividend+1
  8546     16A5  3000               	movlw	0
  8547     16A6  00B0               	movwf	___aldiv@dividend
  8548     16A7  3197  2770  3196   	fcall	___aldiv
  8549     16AA  0020               	movlb	0	; select bank0
  8550     16AB  082C               	movf	?___aldiv,w
  8551     16AC  3EFF               	addlw	255
  8552     16AD  0023               	movlb	3	; select bank3
  8553     16AE  009B               	movwf	27	;volatile
  8554     16AF                     l3506:
  8555                           
  8556                           ;lib.c: 46:         TXSTAbits.BRGH = 0;
  8557     16AF  111E               	bcf	30,2	;volatile
  8558                           
  8559                           ;lib.c: 47:     } else {
  8560     16B0  2ED9               	goto	l3512
  8561     16B1                     l3508:
  8562                           
  8563                           ;lib.c: 48:         SPBRG = 4000000 / (16 * baud_rate) - 1;
  8564     16B1  083B               	movf	UARTinit@baud_rate,w
  8565     16B2  00C0               	movwf	??_UARTinit
  8566     16B3  083C               	movf	UARTinit@baud_rate+1,w
  8567     16B4  00C1               	movwf	??_UARTinit+1
  8568     16B5  083D               	movf	UARTinit@baud_rate+2,w
  8569     16B6  00C2               	movwf	??_UARTinit+2
  8570     16B7  083E               	movf	UARTinit@baud_rate+3,w
  8571     16B8  00C3               	movwf	??_UARTinit+3
  8572     16B9  3004               	movlw	4
  8573     16BA                     u4815:
  8574     16BA  35C0               	lslf	??_UARTinit,f
  8575     16BB  0DC1               	rlf	??_UARTinit+1,f
  8576     16BC  0DC2               	rlf	??_UARTinit+2,f
  8577     16BD  0DC3               	rlf	??_UARTinit+3,f
  8578     16BE                     u4810:
  8579     16BE  0B89               	decfsz	9,f
  8580     16BF  2EBA               	goto	u4815
  8581     16C0  0843               	movf	??_UARTinit+3,w
  8582     16C1  00AF               	movwf	___aldiv@divisor+3
  8583     16C2  0842               	movf	??_UARTinit+2,w
  8584     16C3  00AE               	movwf	___aldiv@divisor+2
  8585     16C4  0841               	movf	??_UARTinit+1,w
  8586     16C5  00AD               	movwf	___aldiv@divisor+1
  8587     16C6  0840               	movf	??_UARTinit,w
  8588     16C7  00AC               	movwf	___aldiv@divisor
  8589     16C8  3000               	movlw	0
  8590     16C9  00B3               	movwf	___aldiv@dividend+3
  8591     16CA  303D               	movlw	61
  8592     16CB  00B2               	movwf	___aldiv@dividend+2
  8593     16CC  3009               	movlw	9
  8594     16CD  00B1               	movwf	___aldiv@dividend+1
  8595     16CE  3000               	movlw	0
  8596     16CF  00B0               	movwf	___aldiv@dividend
  8597     16D0  3197  2770  3196   	fcall	___aldiv
  8598     16D3  0020               	movlb	0	; select bank0
  8599     16D4  082C               	movf	?___aldiv,w
  8600     16D5  3EFF               	addlw	255
  8601     16D6  0023               	movlb	3	; select bank3
  8602     16D7  009B               	movwf	27	;volatile
  8603     16D8                     l3510:
  8604                           
  8605                           ;lib.c: 49:         TXSTAbits.BRGH = 1;
  8606     16D8  151E               	bsf	30,2	;volatile
  8607     16D9                     l3512:
  8608                           
  8609                           ;lib.c: 53:     TXSTAbits.TX9 = 0;
  8610     16D9  131E               	bcf	30,6	;volatile
  8611     16DA                     l3514:
  8612                           
  8613                           ;lib.c: 54:     TXSTAbits.TXEN = 1;
  8614     16DA  169E               	bsf	30,5	;volatile
  8615     16DB                     l3516:
  8616                           
  8617                           ;lib.c: 55:     TXSTAbits.SYNC = 0;
  8618     16DB  121E               	bcf	30,4	;volatile
  8619     16DC                     l3518:
  8620                           
  8621                           ;lib.c: 58:     RCSTAbits.SPEN = 1;
  8622     16DC  179D               	bsf	29,7	;volatile
  8623     16DD                     l3520:
  8624                           
  8625                           ;lib.c: 59:     RCSTAbits.RX9 = 0;
  8626     16DD  131D               	bcf	29,6	;volatile
  8627     16DE                     l3522:
  8628                           
  8629                           ;lib.c: 60:     RCSTAbits.CREN = 1;
  8630     16DE  161D               	bsf	29,4	;volatile
  8631     16DF                     l3524:
  8632                           
  8633                           ;lib.c: 61:     RCSTAbits.FERR = 0;
  8634     16DF  111D               	bcf	29,2	;volatile
  8635     16E0                     l3526:
  8636                           
  8637                           ;lib.c: 62:     RCSTAbits.OERR = 0;
  8638     16E0  109D               	bcf	29,1	;volatile
  8639     16E1                     l3528:
  8640                           
  8641                           ;lib.c: 65:     TRISCbits.TRISC7 = 1;
  8642     16E1  0021               	movlb	1	; select bank1
  8643     16E2  178E               	bsf	14,7	;volatile
  8644     16E3                     l3530:
  8645                           
  8646                           ;lib.c: 66:     TRISCbits.TRISC6 = 0;
  8647     16E3  130E               	bcf	14,6	;volatile
  8648     16E4                     l180:
  8649     16E4  0008               	return
  8650     16E5                     __end_of_UARTinit:
  8651                           
  8652                           	psect	text30
  8653     1770                     __ptext30:	
  8654 ;; *************** function ___aldiv *****************
  8655 ;; Defined at:
  8656 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  divisor         4   12[BANK0 ] long 
  8659 ;;  dividend        4   16[BANK0 ] long 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;  quotient        4   23[BANK0 ] long 
  8662 ;;  sign            1   22[BANK0 ] unsigned char 
  8663 ;;  counter         1   21[BANK0 ] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  4   12[BANK0 ] long 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8673 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;Total ram usage:       15 bytes
  8678 ;; Hardware stack levels used: 1
  8679 ;; Hardware stack levels required when called: 2
  8680 ;; This function calls:
  8681 ;;		Nothing
  8682 ;; This function is called by:
  8683 ;;		_UARTinit
  8684 ;;		_map
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688     1770                     ___aldiv:	
  8689                           ;psect for function ___aldiv
  8690                           
  8691     1770                     l3436:	
  8692                           ;incstack = 0
  8693                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8694                           
  8695     1770  0020               	movlb	0	; select bank0
  8696     1771  01B6               	clrf	___aldiv@sign
  8697     1772                     l3438:
  8698     1772  1FAF               	btfss	___aldiv@divisor+3,7
  8699     1773  2F75               	goto	u4621
  8700     1774  2F76               	goto	u4620
  8701     1775                     u4621:
  8702     1775  2F83               	goto	l366
  8703     1776                     u4620:
  8704     1776                     l3440:
  8705     1776  09AC               	comf	___aldiv@divisor,f
  8706     1777  09AD               	comf	___aldiv@divisor+1,f
  8707     1778  09AE               	comf	___aldiv@divisor+2,f
  8708     1779  09AF               	comf	___aldiv@divisor+3,f
  8709     177A  0AAC               	incf	___aldiv@divisor,f
  8710     177B  1903               	skipnz
  8711     177C  0AAD               	incf	___aldiv@divisor+1,f
  8712     177D  1903               	skipnz
  8713     177E  0AAE               	incf	___aldiv@divisor+2,f
  8714     177F  1903               	skipnz
  8715     1780  0AAF               	incf	___aldiv@divisor+3,f
  8716     1781  01B6               	clrf	___aldiv@sign
  8717     1782  0AB6               	incf	___aldiv@sign,f
  8718     1783                     l366:
  8719     1783  1FB3               	btfss	___aldiv@dividend+3,7
  8720     1784  2F86               	goto	u4631
  8721     1785  2F87               	goto	u4630
  8722     1786                     u4631:
  8723     1786  2F96               	goto	l3446
  8724     1787                     u4630:
  8725     1787                     l3442:
  8726     1787  09B0               	comf	___aldiv@dividend,f
  8727     1788  09B1               	comf	___aldiv@dividend+1,f
  8728     1789  09B2               	comf	___aldiv@dividend+2,f
  8729     178A  09B3               	comf	___aldiv@dividend+3,f
  8730     178B  0AB0               	incf	___aldiv@dividend,f
  8731     178C  1903               	skipnz
  8732     178D  0AB1               	incf	___aldiv@dividend+1,f
  8733     178E  1903               	skipnz
  8734     178F  0AB2               	incf	___aldiv@dividend+2,f
  8735     1790  1903               	skipnz
  8736     1791  0AB3               	incf	___aldiv@dividend+3,f
  8737     1792                     l3444:
  8738     1792  3001               	movlw	1
  8739     1793  00B4               	movwf	??___aldiv
  8740     1794  0834               	movf	??___aldiv,w
  8741     1795  06B6               	xorwf	___aldiv@sign,f
  8742     1796                     l3446:
  8743     1796  3000               	movlw	0
  8744     1797  00BA               	movwf	___aldiv@quotient+3
  8745     1798  3000               	movlw	0
  8746     1799  00B9               	movwf	___aldiv@quotient+2
  8747     179A  3000               	movlw	0
  8748     179B  00B8               	movwf	___aldiv@quotient+1
  8749     179C  3000               	movlw	0
  8750     179D  00B7               	movwf	___aldiv@quotient
  8751     179E                     l3448:
  8752     179E  082F               	movf	___aldiv@divisor+3,w
  8753     179F  042E               	iorwf	___aldiv@divisor+2,w
  8754     17A0  042D               	iorwf	___aldiv@divisor+1,w
  8755     17A1  042C               	iorwf	___aldiv@divisor,w
  8756     17A2  1903               	skipnz
  8757     17A3  2FA5               	goto	u4641
  8758     17A4  2FA6               	goto	u4640
  8759     17A5                     u4641:
  8760     17A5  2FE7               	goto	l3468
  8761     17A6                     u4640:
  8762     17A6                     l3450:
  8763     17A6  01B5               	clrf	___aldiv@counter
  8764     17A7  0AB5               	incf	___aldiv@counter,f
  8765     17A8  2FB4               	goto	l3454
  8766     17A9                     l3452:
  8767     17A9  3001               	movlw	1
  8768     17AA                     u4655:
  8769     17AA  35AC               	lslf	___aldiv@divisor,f
  8770     17AB  0DAD               	rlf	___aldiv@divisor+1,f
  8771     17AC  0DAE               	rlf	___aldiv@divisor+2,f
  8772     17AD  0DAF               	rlf	___aldiv@divisor+3,f
  8773     17AE  0B89               	decfsz	9,f
  8774     17AF  2FAA               	goto	u4655
  8775     17B0  3001               	movlw	1
  8776     17B1  00B4               	movwf	??___aldiv
  8777     17B2  0834               	movf	??___aldiv,w
  8778     17B3  07B5               	addwf	___aldiv@counter,f
  8779     17B4                     l3454:
  8780     17B4  1FAF               	btfss	___aldiv@divisor+3,7
  8781     17B5  2FB7               	goto	u4661
  8782     17B6  2FB8               	goto	u4660
  8783     17B7                     u4661:
  8784     17B7  2FA9               	goto	l3452
  8785     17B8                     u4660:
  8786     17B8                     l3456:
  8787     17B8  3001               	movlw	1
  8788     17B9                     u4675:
  8789     17B9  35B7               	lslf	___aldiv@quotient,f
  8790     17BA  0DB8               	rlf	___aldiv@quotient+1,f
  8791     17BB  0DB9               	rlf	___aldiv@quotient+2,f
  8792     17BC  0DBA               	rlf	___aldiv@quotient+3,f
  8793     17BD  0B89               	decfsz	9,f
  8794     17BE  2FB9               	goto	u4675
  8795     17BF                     l3458:
  8796     17BF  082F               	movf	___aldiv@divisor+3,w
  8797     17C0  0233               	subwf	___aldiv@dividend+3,w
  8798     17C1  1D03               	skipz
  8799     17C2  2FCD               	goto	u4685
  8800     17C3  082E               	movf	___aldiv@divisor+2,w
  8801     17C4  0232               	subwf	___aldiv@dividend+2,w
  8802     17C5  1D03               	skipz
  8803     17C6  2FCD               	goto	u4685
  8804     17C7  082D               	movf	___aldiv@divisor+1,w
  8805     17C8  0231               	subwf	___aldiv@dividend+1,w
  8806     17C9  1D03               	skipz
  8807     17CA  2FCD               	goto	u4685
  8808     17CB  082C               	movf	___aldiv@divisor,w
  8809     17CC  0230               	subwf	___aldiv@dividend,w
  8810     17CD                     u4685:
  8811     17CD  1C03               	skipc
  8812     17CE  2FD0               	goto	u4681
  8813     17CF  2FD1               	goto	u4680
  8814     17D0                     u4681:
  8815     17D0  2FDA               	goto	l3464
  8816     17D1                     u4680:
  8817     17D1                     l3460:
  8818     17D1  082C               	movf	___aldiv@divisor,w
  8819     17D2  02B0               	subwf	___aldiv@dividend,f
  8820     17D3  082D               	movf	___aldiv@divisor+1,w
  8821     17D4  3BB1               	subwfb	___aldiv@dividend+1,f
  8822     17D5  082E               	movf	___aldiv@divisor+2,w
  8823     17D6  3BB2               	subwfb	___aldiv@dividend+2,f
  8824     17D7  082F               	movf	___aldiv@divisor+3,w
  8825     17D8  3BB3               	subwfb	___aldiv@dividend+3,f
  8826     17D9                     l3462:
  8827     17D9  1437               	bsf	___aldiv@quotient,0
  8828     17DA                     l3464:
  8829     17DA  3001               	movlw	1
  8830     17DB                     u4695:
  8831     17DB  36AF               	lsrf	___aldiv@divisor+3,f
  8832     17DC  0CAE               	rrf	___aldiv@divisor+2,f
  8833     17DD  0CAD               	rrf	___aldiv@divisor+1,f
  8834     17DE  0CAC               	rrf	___aldiv@divisor,f
  8835     17DF  0B89               	decfsz	9,f
  8836     17E0  2FDB               	goto	u4695
  8837     17E1                     l3466:
  8838     17E1  3001               	movlw	1
  8839     17E2  02B5               	subwf	___aldiv@counter,f
  8840     17E3  1D03               	btfss	3,2
  8841     17E4  2FE6               	goto	u4701
  8842     17E5  2FE7               	goto	u4700
  8843     17E6                     u4701:
  8844     17E6  2FB8               	goto	l3456
  8845     17E7                     u4700:
  8846     17E7                     l3468:
  8847     17E7  0836               	movf	___aldiv@sign,w
  8848     17E8  1903               	btfsc	3,2
  8849     17E9  2FEB               	goto	u4711
  8850     17EA  2FEC               	goto	u4710
  8851     17EB                     u4711:
  8852     17EB  2FF7               	goto	l3472
  8853     17EC                     u4710:
  8854     17EC                     l3470:
  8855     17EC  09B7               	comf	___aldiv@quotient,f
  8856     17ED  09B8               	comf	___aldiv@quotient+1,f
  8857     17EE  09B9               	comf	___aldiv@quotient+2,f
  8858     17EF  09BA               	comf	___aldiv@quotient+3,f
  8859     17F0  0AB7               	incf	___aldiv@quotient,f
  8860     17F1  1903               	skipnz
  8861     17F2  0AB8               	incf	___aldiv@quotient+1,f
  8862     17F3  1903               	skipnz
  8863     17F4  0AB9               	incf	___aldiv@quotient+2,f
  8864     17F5  1903               	skipnz
  8865     17F6  0ABA               	incf	___aldiv@quotient+3,f
  8866     17F7                     l3472:
  8867     17F7  083A               	movf	___aldiv@quotient+3,w
  8868     17F8  00AF               	movwf	?___aldiv+3
  8869     17F9  0839               	movf	___aldiv@quotient+2,w
  8870     17FA  00AE               	movwf	?___aldiv+2
  8871     17FB  0838               	movf	___aldiv@quotient+1,w
  8872     17FC  00AD               	movwf	?___aldiv+1
  8873     17FD  0837               	movf	___aldiv@quotient,w
  8874     17FE  00AC               	movwf	?___aldiv
  8875     17FF                     l376:
  8876     17FF  0008               	return
  8877     1800                     __end_of___aldiv:
  8878                           
  8879                           	psect	intentry
  8880     0004                     __pintentry:	
  8881 ;; *************** function _isr *****************
  8882 ;; Defined at:
  8883 ;;		line 167 in file "main.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  i               2    8[COMMON] int 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;Total ram usage:        6 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 1
  8904 ;; This function calls:
  8905 ;;		_UARTreadString
  8906 ;; This function is called by:
  8907 ;;		Interrupt level 1
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911     0004                     _isr:
  8912                           
  8913                           ;incstack = 0
  8914     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8915                           
  8916                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8917     0005  3180               	pagesel	$
  8918     0006                     i1l3746:
  8919                           
  8920                           ;main.c: 168:     if (INTCONbits.TMR0IF) {
  8921     0006  1D0B               	btfss	11,2	;volatile
  8922     0007  2809               	goto	u503_21
  8923     0008  280A               	goto	u503_20
  8924     0009                     u503_21:
  8925     0009  2825               	goto	i1l3762
  8926     000A                     u503_20:
  8927     000A                     i1l3748:
  8928                           
  8929                           ;main.c: 169:         static char meas = 1;;main.c: 170:         TMR0 = TMR0 + 22;
  8930     000A  0020               	movlb	0	; select bank0
  8931     000B  0815               	movf	21,w	;volatile
  8932     000C  3E16               	addlw	22
  8933     000D  0095               	movwf	21	;volatile
  8934                           
  8935                           ;main.c: 171:         if (meas) {
  8936     000E  087D               	movf	isr@meas,w
  8937     000F  1903               	btfsc	3,2
  8938     0010  2812               	goto	u504_21
  8939     0011  2813               	goto	u504_20
  8940     0012                     u504_21:
  8941     0012  281C               	goto	i1l3758
  8942     0013                     u504_20:
  8943     0013                     i1l3750:
  8944                           
  8945                           ;main.c: 172:             TMR1H = 0x00;
  8946     0013  0197               	clrf	23	;volatile
  8947                           
  8948                           ;main.c: 173:             TMR1L = 0x00;
  8949     0014  0196               	clrf	22	;volatile
  8950     0015                     i1l3752:
  8951                           
  8952                           ;main.c: 174:             PORTCbits.RC0 = 1;
  8953     0015  140E               	bsf	14,0	;volatile
  8954     0016                     i1l3754:
  8955                           
  8956                           ;main.c: 175:             _delay((unsigned long)((10)*(4000000/4000000.0)));
  8957     0016  3003               	movlw	3
  8958     0017                     u523_27:
  8959     0017  0B89               	decfsz	9,f
  8960     0018  2817               	goto	u523_27
  8961     0019  0000               	nop
  8962     001A                     i1l3756:
  8963                           
  8964                           ;main.c: 176:             PORTCbits.RC0 = 0;
  8965     001A  0020               	movlb	0	; select bank0
  8966     001B  100E               	bcf	14,0	;volatile
  8967     001C                     i1l3758:
  8968                           
  8969                           ;main.c: 178:         meas = !meas;
  8970     001C  087D               	movf	isr@meas,w
  8971     001D  1903               	btfsc	3,2
  8972     001E  2820               	goto	u505_21
  8973     001F  2822               	goto	u505_20
  8974     0020                     u505_21:
  8975     0020  3001               	movlw	1
  8976     0021  2823               	goto	u506_20
  8977     0022                     u505_20:
  8978     0022  3000               	movlw	0
  8979     0023                     u506_20:
  8980     0023  00FD               	movwf	isr@meas
  8981     0024                     i1l3760:
  8982                           
  8983                           ;main.c: 179:         INTCONbits.TMR0IF = 0;
  8984     0024  110B               	bcf	11,2	;volatile
  8985     0025                     i1l3762:
  8986                           
  8987                           ;main.c: 181:     if (INTCONbits.IOCIF) {
  8988     0025  1C0B               	btfss	11,0	;volatile
  8989     0026  2828               	goto	u507_21
  8990     0027  2829               	goto	u507_20
  8991     0028                     u507_21:
  8992     0028  2879               	goto	i1l130
  8993     0029                     u507_20:
  8994     0029                     i1l3764:
  8995                           
  8996                           ;main.c: 182:         for (int i = 0; i < 8; i++) {
  8997     0029  01F8               	clrf	isr@i
  8998     002A  01F9               	clrf	isr@i+1
  8999     002B                     i1l3770:
  9000                           
  9001                           ;main.c: 183:             us_us[i] = (((IOCBF >> i) & 0b1) == 1 ? (((TMR1H << 8) | TMR1L
      +                          ) - 471) : us_us[i]);
  9002     002B  0027               	movlb	7	; select bank7
  9003     002C  0816               	movf	22,w	;volatile
  9004     002D  00F4               	movwf	??_isr
  9005     002E  0A78               	incf	isr@i,w
  9006     002F  2831               	goto	u508_24
  9007     0030                     u508_25:
  9008     0030  36F4               	lsrf	??_isr,f
  9009     0031                     u508_24:
  9010     0031  0B89               	decfsz	9,f
  9011     0032  2830               	goto	u508_25
  9012     0033  1874               	btfsc	??_isr,0
  9013     0034  2836               	goto	u509_21
  9014     0035  2837               	goto	u509_20
  9015     0036                     u509_21:
  9016     0036  2840               	goto	i1l3774
  9017     0037                     u509_20:
  9018     0037                     i1l3772:
  9019     0037  3578               	lslf	isr@i,w
  9020     0038  3EA0               	addlw	(low (_us_us| 0))& (0+255)
  9021     0039  0086               	movwf	6
  9022     003A  0187               	clrf	7
  9023     003B  3F40               	moviw [0]fsr1
  9024     003C  00F6               	movwf	_isr$244
  9025     003D  3F41               	moviw [1]fsr1
  9026     003E  00F7               	movwf	_isr$244+1
  9027     003F  284B               	goto	i1l3776
  9028     0040                     i1l3774:
  9029     0040  0020               	movlb	0	; select bank0
  9030     0041  0816               	movf	22,w	;volatile
  9031     0042  3E29               	addlw	41
  9032     0043  00F4               	movwf	??_isr
  9033     0044  30FE               	movlw	254
  9034     0045  3D17               	addwfc	23,w	;volatile
  9035     0046  00F5               	movwf	??_isr+1
  9036     0047  0874               	movf	??_isr,w
  9037     0048  00F6               	movwf	_isr$244
  9038     0049  0875               	movf	??_isr+1,w
  9039     004A  00F7               	movwf	_isr$244+1
  9040     004B                     i1l3776:
  9041     004B  3578               	lslf	isr@i,w
  9042     004C  3EA0               	addlw	(low (_us_us| 0))& (0+255)
  9043     004D  0086               	movwf	6
  9044     004E  0187               	clrf	7
  9045     004F  0876               	movf	_isr$244,w
  9046     0050  3FC0               	movwi [0]fsr1
  9047     0051  0877               	movf	_isr$244+1,w
  9048     0052  3FC1               	movwi [1]fsr1
  9049     0053                     i1l3778:
  9050                           
  9051                           ;main.c: 184:             IOCBF = (IOCBF & (~(1 << i))) | (0 << i);
  9052     0053  3000               	movlw	0
  9053     0054  00F4               	movwf	??_isr
  9054     0055  0A78               	incf	isr@i,w
  9055     0056  2858               	goto	u510_24
  9056     0057                     u510_25:
  9057     0057  35F4               	lslf	??_isr,f
  9058     0058                     u510_24:
  9059     0058  0B89               	decfsz	9,f
  9060     0059  2857               	goto	u510_25
  9061     005A  3001               	movlw	1
  9062     005B  00F5               	movwf	??_isr+1
  9063     005C  0A78               	incf	isr@i,w
  9064     005D  285F               	goto	u511_24
  9065     005E                     u511_25:
  9066     005E  35F5               	lslf	??_isr+1,f
  9067     005F                     u511_24:
  9068     005F  0B89               	decfsz	9,f
  9069     0060  285E               	goto	u511_25
  9070     0061  0875               	movf	??_isr+1,w
  9071     0062  3AFF               	xorlw	255
  9072     0063  0027               	movlb	7	; select bank7
  9073     0064  0516               	andwf	22,w	;volatile
  9074     0065  0474               	iorwf	??_isr,w
  9075     0066  0096               	movwf	22	;volatile
  9076     0067                     i1l3780:
  9077                           
  9078                           ;main.c: 185:         }
  9079     0067  3001               	movlw	1
  9080     0068  07F8               	addwf	isr@i,f
  9081     0069  3000               	movlw	0
  9082     006A  3DF9               	addwfc	isr@i+1,f
  9083     006B                     i1l3782:
  9084     006B  0879               	movf	isr@i+1,w
  9085     006C  3A80               	xorlw	128
  9086     006D  00F4               	movwf	??_isr
  9087     006E  3080               	movlw	128
  9088     006F  0274               	subwf	??_isr,w
  9089     0070  1D03               	skipz
  9090     0071  2874               	goto	u512_25
  9091     0072  3008               	movlw	8
  9092     0073  0278               	subwf	isr@i,w
  9093     0074                     u512_25:
  9094     0074  1C03               	skipc
  9095     0075  2877               	goto	u512_21
  9096     0076  2878               	goto	u512_20
  9097     0077                     u512_21:
  9098     0077  282B               	goto	i1l3770
  9099     0078                     u512_20:
  9100     0078                     i1l132:
  9101                           
  9102                           ;main.c: 186:         INTCONbits.IOCIF = 0;
  9103     0078  100B               	bcf	11,0	;volatile
  9104     0079                     i1l130:	
  9105                           ;main.c: 187:     }
  9106                           
  9107                           
  9108                           ;main.c: 188:     if (PIR1bits.RCIF) {
  9109     0079  0020               	movlb	0	; select bank0
  9110     007A  1E91               	btfss	17,5	;volatile
  9111     007B  287D               	goto	u513_21
  9112     007C  287E               	goto	u513_20
  9113     007D                     u513_21:
  9114     007D  2886               	goto	i1l3786
  9115     007E                     u513_20:
  9116     007E                     i1l3784:
  9117                           
  9118                           ;main.c: 189:         GPSRDY = UARTreadString(NMEASentence, sizeof NMEASentence);
  9119     007E  3032               	movlw	50
  9120     007F  00F0               	movwf	UARTreadString@bufSize
  9121     0080  3020               	movlw	(low (_NMEASentence| (0+256)))& (0+255)
  9122     0081  3195  258B  3180   	fcall	_UARTreadString
  9123     0084  0021               	movlb	1	; select bank1
  9124     0085  00C4               	movwf	_GPSRDY^(0+128)
  9125     0086                     i1l3786:
  9126                           
  9127                           ;main.c: 191:     if (PIR1bits.TMR2IF){
  9128     0086  0020               	movlb	0	; select bank0
  9129     0087  1C91               	btfss	17,1	;volatile
  9130     0088  288A               	goto	u514_21
  9131     0089  288B               	goto	u514_20
  9132     008A                     u514_21:
  9133     008A  28B3               	goto	i1l143
  9134     008B                     u514_20:
  9135     008B                     i1l3788:
  9136                           
  9137                           ;main.c: 192:         static int bzzPasses = 0;;main.c: 193:         millis += 1;
  9138     008B  3001               	movlw	1
  9139     008C  0021               	movlb	1	; select bank1
  9140     008D  07BC               	addwf	_millis^(0+128),f
  9141     008E  3000               	movlw	0
  9142     008F  3DBD               	addwfc	(_millis+1)^(0+128),f
  9143     0090  3000               	movlw	0
  9144     0091  3DBE               	addwfc	(_millis+2)^(0+128),f
  9145     0092  3000               	movlw	0
  9146     0093  3DBF               	addwfc	(_millis+3)^(0+128),f
  9147     0094                     i1l3790:
  9148                           
  9149                           ;main.c: 194:         if (bzzEn){
  9150     0094  087C               	movf	_bzzEn,w
  9151     0095  1903               	btfsc	3,2
  9152     0096  2898               	goto	u515_21
  9153     0097  2899               	goto	u515_20
  9154     0098                     u515_21:
  9155     0098  28B1               	goto	i1l3800
  9156     0099                     u515_20:
  9157     0099                     i1l3792:
  9158                           
  9159                           ;main.c: 195:             PORTCbits.RC1 = 1;
  9160     0099  0020               	movlb	0	; select bank0
  9161     009A  148E               	bsf	14,1	;volatile
  9162     009B                     i1l3794:
  9163                           
  9164                           ;main.c: 196:             bzzPasses++;
  9165     009B  3001               	movlw	1
  9166     009C  07EA               	addwf	isr@bzzPasses,f
  9167     009D  3000               	movlw	0
  9168     009E  3DEB               	addwfc	isr@bzzPasses+1,f
  9169                           
  9170                           ;main.c: 197:             if (bzzPasses >= 40){
  9171     009F  086B               	movf	isr@bzzPasses+1,w
  9172     00A0  3A80               	xorlw	128
  9173     00A1  00F4               	movwf	??_isr
  9174     00A2  3080               	movlw	128
  9175     00A3  0274               	subwf	??_isr,w
  9176     00A4  1D03               	skipz
  9177     00A5  28A8               	goto	u516_25
  9178     00A6  3028               	movlw	40
  9179     00A7  026A               	subwf	isr@bzzPasses,w
  9180     00A8                     u516_25:
  9181     00A8  1C03               	skipc
  9182     00A9  28AB               	goto	u516_21
  9183     00AA  28AC               	goto	u516_20
  9184     00AB                     u516_21:
  9185     00AB  28B1               	goto	i1l3800
  9186     00AC                     u516_20:
  9187     00AC                     i1l3796:
  9188                           
  9189                           ;main.c: 198:                 PORTCbits.RC1 = 0;
  9190     00AC  0020               	movlb	0	; select bank0
  9191     00AD  108E               	bcf	14,1	;volatile
  9192     00AE                     i1l3798:
  9193                           
  9194                           ;main.c: 199:                 bzzEn = 0;
  9195     00AE  01FC               	clrf	_bzzEn
  9196                           
  9197                           ;main.c: 200:                 bzzPasses = 0;
  9198     00AF  01EA               	clrf	isr@bzzPasses
  9199     00B0  01EB               	clrf	isr@bzzPasses+1
  9200     00B1                     i1l3800:
  9201                           
  9202                           ;main.c: 203:         PIR1bits.TMR2IF = 0;
  9203     00B1  0020               	movlb	0	; select bank0
  9204     00B2  1091               	bcf	17,1	;volatile
  9205     00B3                     i1l143:
  9206     00B3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9207     00B4  0009               	retfie
  9208     00B5                     __end_of_isr:
  9209                           
  9210                           	psect	text32
  9211     158B                     __ptext32:	
  9212 ;; *************** function _UARTreadString *****************
  9213 ;; Defined at:
  9214 ;;		line 77 in file "lib.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  buf             1    wreg     PTR unsigned char 
  9217 ;;		 -> NMEASentence(50), 
  9218 ;;  bufSize         1    0[COMMON] unsigned char 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  buf             1    2[COMMON] PTR unsigned char 
  9221 ;;		 -> NMEASentence(50), 
  9222 ;;  tmp             1    0        unsigned char 
  9223 ;;  tmp             1    3[COMMON] unsigned char 
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      unsigned char 
  9226 ;; Registers used:
  9227 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9233 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;Total ram usage:        4 bytes
  9238 ;; Hardware stack levels used: 1
  9239 ;; This function calls:
  9240 ;;		Nothing
  9241 ;; This function is called by:
  9242 ;;		_isr
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246     158B                     _UARTreadString:	
  9247                           ;psect for function _UARTreadString
  9248                           
  9249                           
  9250                           ;incstack = 0
  9251                           ; Regs used in _UARTreadString: [wreg+fsr1l+fsr1h+status,2+status,0]
  9252                           ;UARTreadString@buf stored from wreg
  9253     158B  00F2               	movwf	UARTreadString@buf
  9254     158C                     i1l3600:
  9255                           
  9256                           ;lib.c: 78:     static int i = 0;;lib.c: 79:     if (RCSTAbits.OERR) {
  9257     158C  0023               	movlb	3	; select bank3
  9258     158D  1C9D               	btfss	29,1	;volatile
  9259     158E  2D90               	goto	u491_21
  9260     158F  2D91               	goto	u491_20
  9261     1590                     u491_21:
  9262     1590  2D96               	goto	i1l3610
  9263     1591                     u491_20:
  9264     1591                     i1l3602:
  9265     1591  0819               	movf	25,w	;volatile
  9266     1592                     i1l3604:
  9267                           
  9268                           ;lib.c: 81:         RCSTAbits.CREN = 0;
  9269     1592  121D               	bcf	29,4	;volatile
  9270     1593                     i1l3606:
  9271                           
  9272                           ;lib.c: 82:         RCSTAbits.CREN = 1;
  9273     1593  161D               	bsf	29,4	;volatile
  9274                           
  9275                           ;lib.c: 83:         return 0;
  9276     1594  3000               	movlw	0
  9277     1595  2DD0               	goto	i1l197
  9278     1596                     i1l3610:
  9279                           
  9280                           ;lib.c: 85:     char tmp = RCREG;
  9281     1596  0819               	movf	25,w	;volatile
  9282     1597  00F3               	movwf	UARTreadString@tmp_392
  9283                           
  9284                           ;lib.c: 87:     if (i < bufSize){
  9285     1598  087B               	movf	UARTreadString@i+1,w
  9286     1599  3A80               	xorlw	128
  9287     159A  00F1               	movwf	??_UARTreadString
  9288     159B  3080               	movlw	128
  9289     159C  0271               	subwf	??_UARTreadString,w
  9290     159D  1D03               	skipz
  9291     159E  2DA1               	goto	u492_25
  9292     159F  0870               	movf	UARTreadString@bufSize,w
  9293     15A0  027A               	subwf	UARTreadString@i,w
  9294     15A1                     u492_25:
  9295     15A1  1803               	skipnc
  9296     15A2  2DA4               	goto	u492_21
  9297     15A3  2DA5               	goto	u492_20
  9298     15A4                     u492_21:
  9299     15A4  2DCF               	goto	i1l3630
  9300     15A5                     u492_20:
  9301     15A5                     i1l3612:
  9302                           
  9303                           ;lib.c: 88:         if (tmp == '\0' || tmp == '\n' || tmp == '\r') {
  9304     15A5  0873               	movf	UARTreadString@tmp_392,w
  9305     15A6  1903               	btfsc	3,2
  9306     15A7  2DA9               	goto	u493_21
  9307     15A8  2DAA               	goto	u493_20
  9308     15A9                     u493_21:
  9309     15A9  2DB6               	goto	i1l3618
  9310     15AA                     u493_20:
  9311     15AA                     i1l3614:
  9312     15AA  300A               	movlw	10
  9313     15AB  0673               	xorwf	UARTreadString@tmp_392,w
  9314     15AC  1903               	btfsc	3,2
  9315     15AD  2DAF               	goto	u494_21
  9316     15AE  2DB0               	goto	u494_20
  9317     15AF                     u494_21:
  9318     15AF  2DB6               	goto	i1l3618
  9319     15B0                     u494_20:
  9320     15B0                     i1l3616:
  9321     15B0  300D               	movlw	13
  9322     15B1  0673               	xorwf	UARTreadString@tmp_392,w
  9323     15B2  1D03               	btfss	3,2
  9324     15B3  2DB5               	goto	u495_21
  9325     15B4  2DB6               	goto	u495_20
  9326     15B5                     u495_21:
  9327     15B5  2DC2               	goto	i1l3626
  9328     15B6                     u495_20:
  9329     15B6                     i1l3618:
  9330                           
  9331                           ;lib.c: 89:             buf[i + 1] = '\0';
  9332     15B6  087A               	movf	UARTreadString@i,w
  9333     15B7  0772               	addwf	UARTreadString@buf,w
  9334     15B8  00F1               	movwf	??_UARTreadString
  9335     15B9  0A71               	incf	??_UARTreadString,w
  9336     15BA  0086               	movwf	6
  9337     15BB  3001               	movlw	1	; select bank2/3
  9338     15BC  0087               	movwf	7
  9339     15BD  0181               	clrf	1
  9340     15BE                     i1l3620:
  9341                           
  9342                           ;lib.c: 90:             i = 0;
  9343     15BE  01FA               	clrf	UARTreadString@i
  9344     15BF  01FB               	clrf	UARTreadString@i+1
  9345     15C0                     i1l3622:
  9346                           
  9347                           ;lib.c: 91:             return 1;
  9348     15C0  3001               	movlw	1
  9349     15C1  2DD0               	goto	i1l197
  9350     15C2                     i1l3626:
  9351                           
  9352                           ;lib.c: 93:         buf[i] = tmp;
  9353     15C2  087A               	movf	UARTreadString@i,w
  9354     15C3  0772               	addwf	UARTreadString@buf,w
  9355     15C4  00F1               	movwf	??_UARTreadString
  9356     15C5  0871               	movf	??_UARTreadString,w
  9357     15C6  0086               	movwf	6
  9358     15C7  3001               	movlw	1	; select bank2/3
  9359     15C8  0087               	movwf	7
  9360     15C9  0873               	movf	UARTreadString@tmp_392,w
  9361     15CA  0081               	movwf	1
  9362     15CB                     i1l3628:
  9363                           
  9364                           ;lib.c: 94:         i++;
  9365     15CB  3001               	movlw	1
  9366     15CC  07FA               	addwf	UARTreadString@i,f
  9367     15CD  3000               	movlw	0
  9368     15CE  3DFB               	addwfc	UARTreadString@i+1,f
  9369     15CF                     i1l3630:
  9370                           
  9371                           ;lib.c: 95:         return 0;
  9372     15CF  3000               	movlw	0
  9373     15D0                     i1l197:
  9374     15D0  0008               	return
  9375     15D1                     __end_of_UARTreadString:
  9376     007E                     btemp	set	126	;btemp
  9377     007E                     int$flags	set	126
  9378     007E                     wtemp0	set	126
  9379                           
  9380                           	psect	idloc
  9381                           
  9382                           ;Config register IDLOC0 @ 0x8000
  9383                           ;	unspecified, using default values
  9384     8000                     	org	32768
  9385     8000  3FFF               	dw	16383
  9386                           
  9387                           ;Config register IDLOC1 @ 0x8001
  9388                           ;	unspecified, using default values
  9389     8001                     	org	32769
  9390     8001  3FFF               	dw	16383
  9391                           
  9392                           ;Config register IDLOC2 @ 0x8002
  9393                           ;	unspecified, using default values
  9394     8002                     	org	32770
  9395     8002  3FFF               	dw	16383
  9396                           
  9397                           ;Config register IDLOC3 @ 0x8003
  9398                           ;	unspecified, using default values
  9399     8003                     	org	32771
  9400     8003  3FFF               	dw	16383
  9401                           
  9402                           	psect	config
  9403                           
  9404                           ;Config register CONFIG1 @ 0x8007
  9405                           ;	Oscillator Selection
  9406                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9407                           ;	Watchdog Timer Enable
  9408                           ;	WDTE = OFF, WDT disabled
  9409                           ;	Power-up Timer Enable
  9410                           ;	PWRTE = ON, PWRT enabled
  9411                           ;	MCLR Pin Function Select
  9412                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9413                           ;	Flash Program Memory Code Protection
  9414                           ;	CP = OFF, Program memory code protection is disabled
  9415                           ;	Brown-out Reset Enable
  9416                           ;	BOREN = ON, Brown-out Reset enabled
  9417                           ;	Clock Out Enable
  9418                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9419                           ;	Internal/External Switchover
  9420                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9421                           ;	Fail-Safe Clock Monitor Enable
  9422                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9423     8007                     	org	32775
  9424     8007  3FC4               	dw	16324
  9425                           
  9426                           ;Config register CONFIG2 @ 0x8008
  9427                           ;	Flash Memory Self-Write Protection
  9428                           ;	WRT = OFF, Write protection off
  9429                           ;	Voltage Regulator Capacitor Enable bit
  9430                           ;	VCAPEN = OFF, VCAP pin function disabled
  9431                           ;	Stack Overflow/Underflow Reset Enable
  9432                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9433                           ;	Brown-out Reset Voltage Selection
  9434                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9435                           ;	Low-Power Brown Out Reset
  9436                           ;	LPBOR = OFF, Low-Power BOR is disabled
  9437                           ;	Low-Voltage Programming Enable
  9438                           ;	LVP = ON, Low-voltage programming enabled
  9439     8008                     	org	32776
  9440     8008  3FFF               	dw	16383

Data Sizes:
    Strings     47
    Constant    0
    Data        1
    BSS         93
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     74      77
    BANK1            80     20      57
    BANK2            80      0      50
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_13(CODE[1]), 

    atof@s	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    strtof@s	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    strtof@res	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    strpbrk@b	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strpbrk@s	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    updateSpeed@v	PTR float  size(1) Largest target is 4
		 -> speed(BANK1[4]), 

    updateSpeed@string	PTR unsigned char  size(1) Largest target is 50
		 -> NMEASentence(BANK2[50]), 

    updateSpeed@DRDY	PTR unsigned char  size(1) Largest target is 1
		 -> GPSRDY(BANK1[1]), 

    UARTreadString@buf	PTR unsigned char  size(1) Largest target is 50
		 -> NMEASentence(BANK2[50]), 

    UARTsendString@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sp__strpbrk	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    strtok_single@delims	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strtok_single@p	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    sp__strtok_single	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    strtok_single@src	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    strtok_single@str	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 

    strtok_single@ret	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), NMEASentence(BANK2[50]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_UARTreadString

Critical Paths under _main in BANK0

    _main->_updateSpeed
    _us_to_cm->___lwdiv
    _updateSpeed->_atof
    _strtok_single->_strpbrk
    _strpbrk->_strcspn
    _strcspn->_strchr
    _atof->_strtof
    _strtof->___flmul
    _toupper->_islower
    _isxdigit->_isdigit
    ___flmul->__Umul8_16
    _prom_us->_us_to_cm
    _map->___aldiv
    _UARTinit->___aldiv
    ___aldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   21895
                                              0 BANK1     20    20      0
                           _UARTinit
                     _UARTsendString
                             ___flge
                      _beginSecuence
                                _map
                            _prom_us
                        _updateSpeed
                           _us_to_cm
 ---------------------------------------------------------------------------------
 (1) _us_to_cm                                             2     0      2     792
                                              8 BANK0      2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _updateSpeed                                         10     8      2   15814
                                             64 BANK0     10     8      2
                             ___fleq
                               _atof
                      _strtok_single
 ---------------------------------------------------------------------------------
 (2) _strtok_single                                        6     4      2    1101
                                             18 BANK0      6     4      2
                            _strpbrk
 ---------------------------------------------------------------------------------
 (3) _strpbrk                                              4     2      2     638
                                             14 BANK0      4     2      2
                            _strcspn
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     5      2     440
                                              7 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strchr                                               7     3      4     240
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _atof                                                 5     1      4   13955
                                             59 BANK0      5     1      4
                             _strtof
 ---------------------------------------------------------------------------------
 (3) _strtof                                              24    20      4   13900
                                             35 BANK0     24    20      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              4     2      2     464
                                              6 BANK0      4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              6     4      2     161
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4      99
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _isxdigit                                             8     6      2    1000
                                              6 BANK0      7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     693
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _isspace                                              5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    2569
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1246
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _prom_us                                              6     2      4     196
                                             10 BANK0      6     2      4
                           _us_to_cm (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    2446
                                             27 BANK0     36    16     20
                            ___aldiv
                             ___lmul
                            _prom_us (ARG)
                           _us_to_cm (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _beginSecuence                                        3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UARTsendString                                       6     3      3     287
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _UARTinit                                             9     4      5     974
                                             27 BANK0      9     4      5
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     756
                                             12 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  6     6      0     445
                                              4 COMMON     6     6      0
                     _UARTreadString
 ---------------------------------------------------------------------------------
 (7) _UARTreadString                                       5     4      1     265
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTinit
     ___aldiv
       ___lmul (ARG)
   _UARTsendString
   ___flge
   _beginSecuence
   _map
     ___aldiv
     ___lmul
     _prom_us (ARG)
       _us_to_cm (ARG)
         ___lwdiv
     _us_to_cm (ARG)
   _prom_us
   _updateSpeed
     ___fleq
     _atof
       _strtof
         ___fldiv
         ___fleq
         ___flge
         ___flmul
           __Umul8_16
         ___flneg
         ___lmul
         ___wmul
         ___xxtofl
         _isdigit
         _isspace
         _isxdigit
           _isdigit
         _nanf
         _toupper
           _islower
     _strtok_single
       _strpbrk
         _strcspn
           _strchr
   _us_to_cm

 _isr (ROOT)
   _UARTreadString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      39       7       71.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 30 19:29:02 2022

            ___fldiv@aexp 0039              ___fldiv@bexp 0038              ___fldiv@sign 0031  
                      l99 0232       ___wmul@multiplicand 0022       __Umul8_16@word_mpld 0026  
                     l100 0217                       l110 030A                       l102 022F  
                     l111 030F                       l113 032E                       l105 035D  
                     l115 0333                       l107 0300                       l204 130D  
                     l116 0338                       l221 150F                       l301 13AF  
                     l117 033D                       l109 0305                       l222 1511  
                     l214 0883                       l207 12F2                       l303 13C3  
                     l217 1681                       l315 14A1                       l180 16E4  
                     l172 154D                       l191 146D                       l185 1440  
                     l366 1783                       l470 15EE                       l710 0595  
                     l471 160A                       l376 17FF                       l704 0521  
                     l482 1756                       l491 12FE                       l660 074B  
                     l476 161F                       l717 13F9                       l901 0D62  
                     l813 0FDE                       l581 158A                       l742 076F  
                     l487 176F                       l479 1702                       l719 1409  
                     l680 0737                       l744 07F6                       l905 0DA5  
                     l682 0744                       l674 06D1                       l658 05F3  
                     l906 0D72                       l755 07C2                       l756 07CE  
                     l748 07A8                       l781 13A3                       l766 1384  
                     l679 071D                       l952 131E                       l776 14D5  
                     l961 134F                       l929 0EC2                       l857 0FFF  
                     l698 05A1                       l875 0BF6                       l779 1385  
                     l981 1439                       l887 0C60                       l992 1336  
                     l969 13E5                       l978 140A                       l898 0D39  
                     l987 0815                       l995 1336                       _PR2 001B  
        ??_UARTreadString 0071                       _map 1620                       _isr 0004  
                     wreg 0009              ___flmul@aexp 003B              ___flmul@bexp 003C  
            ___flmul@sign 0036              ___flmul@temp 0041              ___flmul@prod 003D  
                    l1001 1368                      l3000 08C7                      l3002 08C8  
                    l3020 0906                      l3012 08DE                      l3004 08CF  
                    l3110 0A61                      l3102 0A4E                      l3030 0935  
                    l3022 091C                      l3014 08E0                      l3006 08D1  
                    l3200 0C15                      l3120 0A9C                      l3112 0A79  
                    l3104 0A5B                      l3040 0950                      l3032 0937  
                    l3024 0922                      l3016 08E4                      l3008 08D6  
                    l4000 0348                      l3210 0C52                      l3202 0C25  
                    l3122 0AB1                      l3130 0AE7                      l3106 0A5C  
                    l3050 0997                      l3042 0966                      l3026 092A  
                    l3034 093E                      l3018 08F0                      l4002 0358  
                    l2500 13E8                      l3300 0DE3                      l3220 0C72  
                    l3212 0C57                      l3204 0C37                      l3124 0ABE  
                    l3116 0A7A                      l3060 09B7                      l3052 099B  
                    l3044 097C                      l3036 0940                      l3028 092F  
                    l4004 034D                      l2510 1405                      l2502 13EA  
                    l3230 0CA4                      l3222 0C78                      l3150 0B40  
                    l3142 0B10                      l3134 0AF0                      l3126 0ADD  
                    l3118 0A91                      l3070 09DE                      l3062 09C4  
                    l3054 09A5                      l3046 0982                      l3038 0944  
                    l2600 05A2                      l2504 13F1                      l3320 0E43  
                    l3312 0E11                      l3304 0DED                      l3240 0CCB  
                    l3232 0CAE                      l3224 0C80                      l3216 0C64  
                    l3208 0C3B                      l3160 0B78                      l3144 0B1D  
                    l3136 0AF5                      l3128 0AE2                      l3080 09FB  
                    l3072 09E6                      l3064 09D1                      l3056 09A7  
                    l3048 0992                      l2520 13A1                      l2610 05B2  
                    l2602 05A6                      l2506 13F5                      l3330 0E83  
                    l3322 0E57                      l3314 0E25                      l3306 0E01  
                    l3250 0CFA                      l3242 0CD8                      l3234 0CB5  
                    l3218 0C69                      l3162 0B85                      l3154 0B41  
                    l3146 0B23                      l3138 0B02                      l3170 0BAE  
                    l3090 0A21                      l3082 0A00                      l3074 09E8  
                    l3058 09AB                      l3066 09D6                      l2514 1385  
                    l3410 1521                      l3402 1514                      l2700 06B5  
                    l2620 05CA                      l2612 05B7                      l2604 05A8  
                    l2508 1400                      l2540 13B9                      l2532 13A4  
                    l2524 1337                      l3332 0E87                      l3316 0E3F  
                    l3308 0E0D                      l3324 0E71                      l3260 0D48  
                    l3252 0D07                      l3244 0CE2                      l3236 0CB9  
                    l3228 0C89                      l3180 0BD5                      l3172 0BBB  
                    l3164 0BA4                      l3156 0B58                      l3148 0B28  
                    l3092 0A25                      l3084 0A0D                      l3076 09EA  
                    l3068 09DC                      l2516 1390                      l3420 1539  
                    l3404 1515                      l3510 16D8                      l3502 1682  
                    l2550 147B                      l2710 06D6                      l2702 06B6  
                    l2630 05DB                      l2622 05CF                      l2614 05BF  
                    l2606 05AC                      l2542 13BF                      l2534 13A7  
                    l3350 0EFC                      l3342 0EC7                      l3334 0E8C  
                    l3326 0E75                      l3270 0D6A                      l3254 0D0F  
                    l3246 0CE9                      l3238 0CBE                      l3190 0BFA  
                    l3182 0BE2                      l3174 0BC8                      l3158 0B63  
                    l3094 0A32                      l3086 0A1A                      l3078 09EE  
                    l2518 1391                      l3422 1540                      l3414 1523  
                    l3406 151A                      l3440 1776                      l3520 16DD  
                    l3512 16D9                      l3504 1688                      l2552 1483  
                    l2712 06DB                      l2720 0703                      l2704 06BA  
                    l2640 05FB                      l2632 05E0                      l2624 05D1  
                    l2616 05C0                      l2608 05AD                      l2560 15D1  
                    l2800 043F                      l2536 13AB                      l2528 1350  
                    l3360 0F3F                      l3352 0F18                      l3344 0ECD  
                    l3336 0EA1                      l3328 0E7A                      l3272 0D6E  
                    l3256 0D3D                      l3264 0D4D                      l3248 0CED  
                    l3192 0BFC                      l3184 0BE7                      l3168 0BAA  
                    l3096 0A33                      l3088 0A1F                      l3432 1310  
                    l3424 1549                      l3416 1532                      l3408 151C  
                    l3450 17A6                      l3442 1787                      l3530 16E3  
                    l3522 16DE                      l3514 16DA                      l3506 16AF  
                    l2554 148A                      l2546 146E                      l2730 073A  
                    l2722 0710                      l2714 06E3                      l2706 06CE  
                    l2650 0619                      l2642 0607                      l2634 05E8  
                    l2626 05D5                      l2618 05C2                      l2562 15E6  
                    l2810 0475                      l2802 044A                      l2538 13B4  
                    l3354 0F1C                      l3346 0EEA                      l3338 0EB8  
                    l3290 0DD2                      l3274 0D76                      l3282 0DAE  
                    l3258 0D47                      l3194 0C00                      l3186 0BF4  
                    l3178 0BD1                      l3098 0A40                      l3426 154B  
                    l3418 1537                      l3460 17D1                      l3452 17A9  
                    l3444 1792                      l3436 1770                      l3524 16DF  
                    l3516 16DB                      l3508 16B1                      l3540 1461  
                    l3532 143A                      l2556 1499                      l2548 1477  
                    l2732 073E                      l2724 072B                      l2716 06E7  
                    l2660 0642                      l2644 060B                      l2636 05E9  
                    l2628 05D6                      l2564 1602                      l2580 1722  
                    l2572 16E5                      l2820 04C0                      l2812 047C  
                    l2804 0451                      l2740 0367                      l2900 0799  
                    l3380 0FA6                      l3372 0F5F                      l3364 0F48  
                    l3356 0F23                      l3348 0EEE                      l3292 0DD3  
                    l3284 0DB0                      l3276 0D92                      l3268 0D63  
                    l3196 0C0D                      l3428 154C                      l3700 02AE  
                    l3470 17EC                      l3462 17D9                      l3454 17B4  
                    l3446 1796                      l3438 1772                      l3526 16E0  
                    l3518 16DC                      l3534 1445                      l3542 14D6  
                    l2734 0740                      l2726 072E                      l2718 06FF  
                    l2670 0663                      l2662 064A                      l2654 0622  
                    l2638 05EB                      l2566 161C                      l2582 173A  
                    l2574 16FA                      l2830 04F5                      l2822 04D7  
                    l2814 048E                      l2806 045C                      l2750 0377  
                    l2742 036B                      l2910 07C6                      l2902 07A1  
                    l3382 0FAA                      l3374 0F7B                      l3358 0F3A  
                    l3294 0DD8                      l3286 0DBA                      l3278 0DA9  
                    l3198 0C10                      l3472 17F7                      l3464 17DA  
                    l3456 17B8                      l3448 179E                      l3528 16E1  
                    l3536 144F                      l3560 1502                      l3552 14E6  
                    l3544 14D8                      l2728 0736                      l2680 0686  
                    l2672 0664                      l2664 064C                      l2656 0632  
                    l2648 0614                      l2568 161E                      l2584 173E  
                    l2576 1716                      l2840 0506                      l2832 04F6  
                    l2824 04DE                      l2816 0499                      l2808 0463  
                    l2760 0393                      l2752 037C                      l2744 036D  
                    l2592 12F3                      l2920 07EE                      l2912 07D0  
                    l2904 07AF                      l3392 0FD5                      l3384 0FB0  
                    l3376 0F7F                      l3368 0F51                      l3288 0DC4  
                    l3480 1557                      l3704 0314                      l3640 00D8  
                    l3466 17E1                      l3458 17BF                      l3538 1454  
                    l3554 14E9                      l3546 14E3                      l2690 06A1  
                    l2666 0651                      l2674 066B                      l2682 068A  
                    l2658 063A                      l2586 176C                      l2578 171E  
                    l2850 052B                      l2842 050A                      l2834 04FD  
                    l2826 04EA                      l2818 04AB                      l2770 03A4  
                    l2762 0395                      l2754 0384                      l2746 0371  
                    l2594 12FC                      l2914 07E4                      l2906 07B8  
                    l3386 0FC7                      l3378 0F8A                      l2930 14B8  
                    l3562 0818                      l3490 1576                      l3482 155A  
                    l3650 00EF                      l3642 00D9                      l3468 17E7  
                    l3556 14F4                      l2692 06A5                      l2684 0690  
                    l2676 067D                      l2668 065F                      l2588 176E  
                    l2860 0560                      l2852 0533                      l2844 051E  
                    l2828 04F1                      l2836 0501                      l2780 03C0  
                    l2772 03AC                      l2764 0399                      l2756 0386  
                    l2748 0372                      l2596 12FE                      l2916 07E9  
                    l2908 07BC                      l2940 13CE                      l3396 0FE3  
                    l3388 0FCC                      l2932 14D1                      l2924 14A4  
                    l3580 084B                      l3564 0820                      l3492 157A  
                    l3484 155F                      l3476 154E                      l3708 0342  
                    l3660 00FB                      l3652 00F2                      l3644 00E7  
                    l3558 14FD                      l2694 06A6                      l2686 0698  
                    l2678 067E                      l2870 058E                      l2862 056A  
                    l2854 0537                      l2838 0505                      l2790 03F9  
                    l2774 03AE                      l2766 039A                      l2758 038E  
                    l2918 07ED                      l2942 13DD                      l3398 0FF7  
                    l2926 14A7                      l3582 0860                      l3574 0830  
                    l3566 0824                      l3494 157B                      l3486 1563  
                    l3478 1551                      l3670 013E                      l3662 0108  
                    l3654 00F5                      l3646 00E9                      l3638 00D5  
                    ?_map 003B                      l3592 12E8                      l2696 06AD  
                    l2688 069A                      l2872 0592                      l2864 0578  
                    l2856 054F                      l2848 0526                      l2792 0406  
                    l2784 03C9                      l2776 03B6                      l2768 039F  
                    l2880 074E                      l2944 13DE                      l2936 13C4  
                    l2960 141C                      l2952 140A                      l2928 14AF  
                    l3584 0877                      l3576 0839                      l3568 082D  
                    l3496 1580                      l3488 1567                      l3680 01DC  
                    l3672 013E                      l3664 0112                      l3656 00F7  
                    l3648 00EC                      l2698 06B1                      l2874 0593  
                    l2866 0581                      l2858 0553                      l2794 041E  
                    l2786 03D4                      l2778 03BB                      l2882 0753  
                    l2938 13C7                      l2962 1431                      l3578 083E  
                    l3498 1586                      l3690 0219                      l3682 01E0  
                    l3674 01B4                      l3666 0115                      l3658 00F9  
                    l3596 1620                      l2876 0599                      l2868 0583  
                    l2796 042B                      l2788 03E1                      l2892 0780  
                    l2884 0757                      l2964 1432                      l2948 0804  
                    l2972 131F                      l2980 1378                      l3588 12FF  
                    l3692 022C                      l3676 01D2                      l3684 01E2  
                    l3668 011E                      l2798 0438                      l2894 0783  
                    l2886 0767                      l2958 140D                      l2974 132F  
                    l2990 088B                      l2982 1381                      l3694 0235  
                    l3686 0201                      l3678 01D4                      l2896 078E  
                    l2888 0777                      l2968 131F                      l2992 0891  
                    l2984 1383                      l3696 0254                      l3688 0214  
                    l2898 0795                      l2978 136B                      l3698 025D  
                    l2996 0895                      l2988 0886                      l2998 08AD  
                    l3994 0319                      l3996 0329                      ?_isr 0070  
                    l3998 031E                      STR_1 1800                      STR_2 182D  
                    STR_3 182D                      STR_4 182D                      STR_5 1818  
                    STR_6 180F                      STR_7 1825           updateSpeed@DRDY 0069  
                    u3000 067D                      u3001 067C                      u3010 0690  
                    u3011 068F                      u3100 06DB                      u3020 0698  
                    u3101 06DA                      u3021 0697                      u3005 0679  
                    u3110 06E7                      u3111 06E6                      u3120 06F5  
                    u3040 06A5                      u3200 039F                      u4000 0B0F  
                    u3041 06A4                      u3201 039E                      u4001 0B0E  
                    u3130 0710                      u3210 03A4                      u4010 0B1D  
                    u3131 070F                      u3035 069B                      u3211 03A3  
                    u4011 0B1C                      u3140 072B                      u3060 06B5  
                    u3300 04F5                      u3220 03BB                      u4100 0BC8  
                    u4020 0B23                      u3141 072A                      u3125 06F1  
                    u3061 06B4                      u3301 04F4                      u3221 03BA  
                    u4101 0BC7                      u4021 0B22                      u3150 073E  
                    u3070 06BA                      u3230 03C0                      u4110 0BE2  
                    u4030 0B40                      u3151 073D                      u3135 070C  
                    u3071 06B9                      u3055 06A7                      u3231 03BF  
                    u4111 0BE1                      u4031 0B3F                      u3080 06CE  
                    u3400 0578                      u3320 0505                      u3160 0371  
                    u4200 0CA4                      u4120 0BF4                      u4040 0B58  
                    u5000 0214                      u3145 0727                      u3081 06CD  
                    u3401 0577                      u3321 0504                      u3161 0370  
                    u4201 0CA3                      u4121 0BF3                      u4041 0B57  
                    u5001 0213                      u3090 06D5                      u2610 13F5  
                    u3410 0592                      u3330 050A                      u3170 0377  
                    u4130 0C0D                      u4050 0B85                      u5010 022C  
                    u3091 06D4                      u2611 13F4                      u3411 0591  
                    u3331 0509                      u3315 04F7                      u3171 0376  
                    u4131 0C0C                      u4051 0B84                      u5011 022B  
                    u3340 051E                      u3260 04B6                      u3180 037C  
                    u2700 13AB                      u3500 07BC                      u3420 0753  
                    u4300 0D47                      u4220 0CBE                      u4140 0C15  
                    u5020 0254                      u3405 0574                      u3341 051D  
                    u3245 0439                      u3181 037B                      u2701 13AA  
                    u3501 07BB                      u3421 0752                      u4301 0D46  
                    u4221 0CBD                      u4141 0C14                      u5021 0253  
                    u2630 1405                      u3350 0525                      u3270 04CD  
                    u3190 0399                      u3510 07C2                      u3430 0757  
                    u4310 0D61                      u4230 0CCB                      u4150 0C52  
                    u4070 0B9A                      u2631 1404                      u3351 0524  
                    u3255 0464                      u3191 0398                      u3511 07C1  
                    u3431 0756                      u4311 0D60                      u4231 0CCA  
                    u4215 0CAF                      u4151 0C51                      u4055 0B81  
                    _PIE1 0091                      u2800 161C                      u3360 052B  
                    u3520 07C6                      u3440 0777                      u3600 141C  
                    u4400 0E01                      u4320 0D6A                      u4240 0CE2  
                    u4160 0C57                      u4080 0BAE                      u2640 1390  
                    u2801 161B                      u2625 13FA                      u3361 052A  
                    u3265 04B2                      u3521 07C5                      u3441 0776  
                    u3601 141B                      u4401 0E00                      u4321 0D69  
                    u4241 0CE1                      u4161 0C56                      u4081 0BAD  
                    u4065 0B8F                      u2641 138F                      u2810 16FA  
                    u3370 0537                      u2730 13BF                      u3530 07DA  
                    u3610 1431                      u4410 0E25                      u4330 0D6E  
                    u4170 0C64                      u4090 0BBB                      u2650 13A1  
                    u2811 16F9                      u3371 0536                      u3275 04C9  
                    u2731 13BE                      u2715 13B0                      u3611 1430  
                    u4411 0E24                      u4331 0D6D                      u4235 0CC7  
                    u4171 0C63                      u4091 0BBA                      u4075 0B96  
                    u2651 13A0                      u2740 147B                      u2900 05D5  
                    u2820 1716                      u3380 0545                      u3540 07E9  
                    u3460 0794                      u2660 1348                      u3620 132F  
                    u4500 0F3A                      u4420 0E57                      u4340 0DA9  
                    u4260 0CFA                      u4180 0C72                      u3700 08DD  
                    u2741 147A                      u2901 05D4                      u2805 1618  
                    u2821 1715                      u3285 04D8                      u2725 13B5  
                    u3541 07E8                      u3461 0793                      u2661 1346  
                    u3621 132E                      u4501 0F39                      u4421 0E56  
                    u4341 0DA8                      u4261 0CF9                      u4181 0C71  
                    u3701 08DC                      u2910 05DB                      u2830 1722  
                    u3390 0560                      u3550 07ED                      u2670 1349  
                    u4510 0F3F                      u4430 0E75                      u4350 0DBA  
                    u4190 0C80                      u3710 08F0                      u3630 1381  
                    u2911 05DA                      u2831 1721                      u3391 055F  
                    u3295 04EB                      u3551 07EC                      u3535 07D6  
                    u3455 0788                      u4511 0F3E                      u4431 0E74  
                    u4351 0DB9                      u4255 0CE3                      u4191 0C7F  
                    u3711 08EF                      u3631 1380                      u2920 05E0  
                    u2840 173E                      u3480 07AE                      u2680 1361  
                    u4520 0F5E                      u4440 0E83                      u4360 0DC4  
                    u4280 0D2E                      u3800 0982                      u3720 0906  
                    u3640 088B                      u3560 14B8                      u4600 1532  
                    u5217 14DE                      u2921 05DF                      u2841 173D  
                    u3385 0541                      u3481 07AD                      u2681 135F  
                    u4521 0F5D                      u4441 0E82                      u4361 0DC3  
                    u4265 0CF6                      u3801 0981                      u3721 0905  
                    u3641 088A                      u3561 14B7                      u4601 1531  
                    u2770 1499                      u2930 05FB                      u2850 176C  
                    u2690 1362                      u4530 0F89                      u4450 0E87  
                    u4370 0DD2                      u4290 0D3D                      u3810 0997  
                    u3730 091C                      u3650 08A0                      u3570 14D1  
                    u4610 1549                      u5227 14F8                      u2771 1498  
                    u2755 1484                      u2931 05FA                      u2851 176B  
                    u3395 055C                      u3475 07A2                      u4531 0F88  
                    u4451 0E86                      u4371 0DD1                      u4291 0D3C  
                    u4275 0D08                      u3811 0996                      u3731 091B  
                    u3651 089E                      u3571 14D0                      u4611 1548  
                    u4700 17E7                      u4620 1776                      u2940 0619  
                    u2780 15E6                      u2860 12FC                      u3580 13CE  
                    u4540 0FB0                      u4460 0EB8                      u4380 0DE2  
                    u3900 0A32                      u3820 09A5                      u3740 0922  
                    u3660 08A1                      u4701 17E6                      u4621 1775  
                    u2765 148B                      u2941 0618                      u2781 15E5  
                    u2861 12FB                      u3581 13CD                      u4541 0FAF  
                    u4525 0F5A                      u4461 0EB7                      u4381 0DE1  
                    u4285 0D2A                      u3901 0A31                      u3821 09A4  
                    u3741 0921                      u4710 17EC                      u4630 1787  
                    u2950 0651                      u2870 05AC                      u2790 1602  
                    u3590 13DD                      u4550 0FC7                      u4470 0EC7  
                    u4390 0DED                      u3910 0A40                      u3830 09B7  
                    u3750 092F                      u3670 08AD                      u4711 17EB  
                    u4631 1786                      u2951 0650                      u2871 05AB  
                    u2791 1601                      u2855 1768                      u3495 07B2  
                    u3591 13DC                      u4551 0FC6                      u4471 0EC6  
                    u4391 0DEC                      u3911 0A3F                      u3831 09B6  
                    u3751 092E                      u3671 08AC                      u4640 17A6  
                    u4800 1695                      u2880 05B2                      u4560 0FCC  
                    u4480 0EFB                      u3920 0A4D                      u3840 09C4  
                    u3760 0935                      u3680 08C7                      u4720 1557  
                    u4641 17A5                      u2881 05B1                      u4561 0FCB  
                    u4481 0EFA                      u3921 0A4C                      u3841 09C3  
                    u3761 0934                      u3681 08C6                      u4721 1556  
                    u4810 16BE                      u2890 05B7                      u4570 0FE3  
                    u4490 0F23                      u3930 0A5B                      u3850 09D1  
                    u3770 0950                      u3690 08CF                      u2891 05B6  
                    u4571 0FE2                      u4491 0F22                      u3931 0A5A  
                    u3851 09D0                      u3771 094F                      u3691 08CE  
                    u4660 17B8                      u4820 1445                      u2980 0663  
                    u3940 0A79                      u3860 09FB                      u3780 0966  
                    u4580 151A                      u4900 0877                      u4740 1567  
                    u4661 17B7                      u4805 1691                      u4821 1444  
                    u2981 0662                      u2965 0652                      u4485 0EF7  
                    u3941 0A78                      u3861 09FA                      u3781 0965  
                    u4581 1519                      u4901 0876                      u4741 1566  
                    u4830 1461                      u3950 0A91                      u3870 0A00  
                    u3790 097C                      u4590 1521                      u4655 17AA  
                    u4815 16BA                      u4831 1460                      u2975 0659  
                    u3951 0A90                      u3871 09FF                      u3791 097B  
                    u4591 1520                      u4735 155B                      u4680 17D1  
                    u4840 146D                      u3960 0ABE                      u3880 0A0D  
                    u4760 1576                      u4681 17D0                      u4841 146C  
                    u3961 0ABD                      u3881 0A0C                      u4761 1575  
                    u4850 14F2                      u3890 0A1A                      u4675 17B9  
                    u4835 145D                      u4851 14EF                      u2995 0665  
                    u3891 0A19                      u4755 1568                      u3980 0AD3  
                    u4780 1586                      u4685 17CD                      u3965 0ABA  
                    u4781 1585                      u4765 1572                      u4790 1688  
                    u4870 150F                      u3990 0B02                      u4695 17DB  
                    u4791 1687                      u4871 150E                      u3991 0B01  
                    u3975 0AC8                      u4775 157C                      u4864 14F4  
                    u4880 0820                      u4960 013E                      u3985 0ACF  
                    u4881 081F                      u4961 013D                      u4890 084B  
                    u4970 01D2                      u4875 150B                      u4891 084A  
                    u4971 01D1                      u4980 01E0                      u4981 01DF  
                    u4990 0201                      u4895 0847                      u4991 0200  
                    u4975 01CE                      _TMR0 0015               main@bzzTime 00D5  
                    _atof 130E                      _main 00D5                      _nanf 0804  
         updateSpeed@temp 0063                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      map@x 003B                      btemp 007E  
                    isr@i 0078                      start 00B5          ??_UARTsendString 0023  
         ___fldiv@new_exp 0032                     ??_map 004F                     ??_isr 0074  
         __end_of___aldiv 1800                     ?_atof 005B                     ?_main 0070  
                   ?_nanf 0020           __end_of___fldiv 074C           __end_of___flneg 12FF  
                   STR_10 1829                     STR_11 1821                     STR_13 180E  
         __end_of___flmul 05A2                     _T1CON 0018                     _T2CON 001C  
                   _IOCBF 0396                     _IOCBN 0395           __end_of___lwdiv 158B  
                   i1l130 0079                     i1l132 0078                     i1l143 00B3  
                   i1l197 15D0                     _RCREG 0199                     _TMR1H 0017  
                   _TMR1L 0016                     _SPBRG 019B                     _PORTA 000C  
                   _PORTB 000D                     _PORTC 000E                     _PORTD 000F  
                   _TRISA 008C                     _TRISB 008D                     _TRISC 008E  
                   _TRISD 008F                     _TXREG 019A       ___lmul@multiplicand 0024  
        __end_of_UARTinit 16E5                     _bzzEn 007C           __end_of_isdigit 1350  
                   _speed 00C0                     atof@s 005F                     _us_us 00A0  
                   nanf@s 0020                     nanf@u 0024           __end_of_islower 1369  
         __end_of_isspace 13E6           __end_of_prom_us 12F3                     status 0003  
                   wtemp0 007E           __end_of_strcspn 14D6           __end_of_toupper 1337  
         __end_of_strpbrk 1385              updateSpeed@i 0067              updateSpeed@v 0060  
         __initialization 00B7              __end_of_atof 131F              __end_of_main 0367  
            __end_of_nanf 0816                    ??_atof 005F                    ??_main 00C5  
                  ??_nanf 0024            strtok_single@p 0036             main@ledIntenD 00CD  
           main@ledIntenP 00D1                    _ANSELA 018C                    _ANSELB 018D  
                  _ANSELC 018E                    _ANSELD 018F                    _T1GCON 0019  
                  i1l3600 158C                    i1l3602 1591                    i1l3610 1596  
                  i1l3620 15BE                    i1l3612 15A5                    i1l3604 1592  
                  i1l3622 15C0                    i1l3614 15AA                    i1l3630 15CF  
                  i1l3606 1593                    i1l3616 15B0                    i1l3800 00B1  
                  i1l3626 15C2                    i1l3618 15B6                    i1l3628 15CB  
                  i1l3750 0013                    i1l3760 0024                    i1l3752 0015  
                  i1l3770 002B                    i1l3754 0016                    i1l3762 0025  
                  i1l3746 0006                    i1l3780 0067                    i1l3772 0037  
                  i1l3764 0029                    i1l3756 001A                    i1l3748 000A  
                  i1l3790 0094                    i1l3782 006B                    i1l3774 0040  
                  i1l3758 001C                    i1l3792 0099                    i1l3784 007E  
                  i1l3776 004B                    i1l3794 009B                    i1l3786 0086  
                  i1l3778 0053                    i1l3796 00AC                    i1l3788 008B  
                  i1l3798 00AE                    _INTCON 000B                    _GPSRDY 00C4  
                  u510_24 0058                    u510_25 0057                    u503_20 000A  
                  u503_21 0009                    u511_24 005F                    u511_25 005E  
                  u512_20 0078                    u504_20 0013                    u512_21 0077  
                  u504_21 0012                    u512_25 0074            beginSecuence@i 0021  
                  u513_20 007E                    u505_20 0022                    u513_21 007D  
                  u505_21 0020                    u514_20 008B                    u506_20 0023  
                  u514_21 008A                    u515_20 0099                    u507_20 0029  
                  u515_21 0098                    u507_21 0028                    u523_27 0017  
                  u516_20 00AC                    u516_21 00AB                    u508_24 0031  
                  u516_25 00A8                    u508_25 0030                    u509_20 0037  
                  u509_21 0036                    _OSCCON 0099                    u491_20 1591  
                  u491_21 1590                    u492_20 15A5                    u492_21 15A4  
                  u492_25 15A1                    u493_20 15AA                    u493_21 15A9  
                  u494_20 15B0                    u494_21 15AF                    u495_20 15B6  
                  u495_21 15B5          __end_of___xxtofl 07F7         debugSS@prevMillis 00B4  
                  ___flge 16E5                    ___fleq 15D1                    ___lmul 146E  
               ??___aldiv 0034                    ___wmul 13A4                 ??___fldiv 0028  
               ??___flneg 0024                 ??___flmul 0031                 ??___lwdiv 0024  
                  _millis 00BC         updateSpeed@string 0061                    _strchr 1385  
                  _strtof 0884          __end_of_isxdigit 143A              __pdataCOMMON 007D  
               ??_isdigit 0022                 ??_islower 0022                 ??_isspace 0022  
               ??_prom_us 002E          __end_of_us_to_cm 130E                 ??_strcspn 0029  
               ??_toupper 0028                 ??_strpbrk 0030         UARTsendString@str 0020  
              ___flge@ff1 0020                ___flge@ff2 0024              ___xxtofl@arg 002A  
            ___xxtofl@exp 0029              ___xxtofl@val 0020                ___fleq@ff1 0020  
              ___fleq@ff2 0024   __end_of__initialization 00D1                ___flneg@f1 0020  
            ?_updateSpeed 0060            __pcstackCOMMON 0070                 ?_UARTinit 003B  
    debugSS@revMillis_420 00B0                __pbssBANK0 006A                __pbssBANK1 00A0  
              __pbssBANK2 0120         __end_of__Umul8_16 140A                __pmaintext 00D5  
                 ?___flge 0020                   ?___fleq 0020         UARTinit@baud_rate 003B  
                 ?___lmul 0020                   ?___wmul 0020                __pintentry 0004  
              ??_UARTinit 0040            ___lmul@product 0028                   ?_strchr 0020  
                 ?_strtof 0043                 ?___xxtofl 0020              isr@bzzPasses 006A  
               ?_isxdigit 0026             _strtok_single 1512                   ___aldiv 1770  
                 ___fldiv 05A2                   ___flneg 12F3                   ___flmul 0367  
                 ___lwdiv 154E             _beginSecuence 14D6                 ?_us_to_cm 0028  
                 _isr$244 0076                   __ptext1 12FF                   __ptext2 154E  
                 __ptext3 0816                   __ptext4 1512                   __ptext5 1369  
                 __ptext6 14A2                   __ptext7 1385                   __ptext8 130E  
                 __ptext9 0884                   _isdigit 1337                ??___xxtofl 0024  
        ___aldiv@dividend 0030                   _islower 1350                   _isspace 13C4  
                 _prom_us 12E8                   clrloop0 07F8                   _strcspn 14A2  
                 _toupper 131F                   _strpbrk 1369      end_of_initialization 00D1  
                 isr@meas 007D                ??_isxdigit 0028            ?_strtok_single 0032  
               _RCSTAbits 019D          ___aldiv@quotient 0037            ?_beginSecuence 0070  
              _prevMillis 00B8                   strchr@c 0022                   strchr@s 0020  
              ??_us_to_cm 002A                   strtof@i 0059                   strtof@s 005A  
               _PORTAbits 000C                 _PORTCbits 000E             ___xxtofl@sign 0028  
               _TRISCbits 008E               ___fldiv@grs 0034               ___fldiv@rem 002D  
              map@out_max 004B                map@out_min 0047               ___flmul@grs 0037  
               _TXSTAbits 019E            __end_of___flge 1770            __end_of___fleq 1620  
          __end_of___lmul 14A2            __end_of___wmul 13C4             __pidataCOMMON 07FD  
          __end_of_strchr 13A4            __end_of_strtof 1000       start_initialization 00B7  
             __end_of_map 1682               __end_of_isr 00B5           ??_strtok_single 0034  
         ??_beginSecuence 0020                  ??___flge 0028                  ??___fleq 0028  
                ??___lmul 0028                  ??___wmul 0024                 __Umul8_16 13E6  
        strtok_single@ret 0035          strtok_single@src 006C          strtok_single@str 0037  
                ??_strchr 0024                  ??_strtof 0047                 ___fldiv@a 0020  
               ___fldiv@b 0024                 ___flmul@a 002D                 ___flmul@b 0029  
             __pbssCOMMON 007A                 ___latbits 0003             __pcstackBANK0 0020  
           __pcstackBANK1 00C5              _NMEASentence 0120            _UARTreadString 158B  
   UARTreadString@bufSize 0070          ___lwdiv@dividend 0022         UARTreadString@buf 0072  
         UARTreadString@i 007A     UARTreadString@tmp_392 0073                  ?___aldiv 002C  
                ?___fldiv 0020                  ?___flneg 0020                  ?___flmul 0029  
              ?__Umul8_16 0020                  ?___lwdiv 0020            _UARTsendString 143A  
                ?_isdigit 0020                  ?_islower 0020                  ?_isspace 0020  
                ?_prom_us 002A          ___lwdiv@quotient 0025    __end_of_UARTreadString 15D1  
                ?_strcspn 0027                  ?_toupper 0026                  ?_strpbrk 002E  
         ___aldiv@divisor 002C           ___aldiv@counter 0035            ___wmul@product 0024  
               clear_ram0 07F7                  _PIR1bits 0011    __end_of_UARTsendString 146E  
             strtof@digit 004F               strtof@flags 0050                  _UARTinit 1682  
             strtof@expon 0051                 map@in_max 0043                 map@in_min 003F  
       ___wmul@multiplier 0020           ?_UARTreadString 0070         ___lmul@multiplier 0020  
              prom_us@us1 002A                prom_us@us2 002C             ??_updateSpeed 0062  
            _isxdigit$846 002C           ?_UARTsendString 0020               ??__Umul8_16 0022  
         UARTsendString@i 0024                us_to_cm@us 0028                  ___xxtofl 074C  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0027                  __ptext10 131F  
                __ptext11 1350                  __ptext20 13E6                  __ptext12 0804  
                __ptext21 16E5                  __ptext13 140A                  __ptext30 1770  
                __ptext22 15D1                  __ptext14 1337                  __ptext23 05A2  
                __ptext15 13C4                  __ptext32 158B                  __ptext24 12E8  
                __ptext16 074C                  __ptext25 1620                  __ptext17 13A4  
                __ptext26 146E                  __ptext18 12F3                  __ptext27 14D6  
                __ptext19 0367                  __ptext28 143A                  __ptext29 1682  
               isxdigit@c 0026                  _isxdigit 140A                strtof@eexp 0053  
                int$flags 007E                  _us_to_cm 12FF       __end_of_updateSpeed 0884  
             _isspace$834 0024                _INTCONbits 000B                  isdigit@c 0020  
                intlevel1 0000                  islower@c 0020                  isspace@c 0020  
   __end_of_strtok_single 154E                 strtof@res 0043     __end_of_beginSecuence 1512  
            UARTinit@BRGH 003F       strtok_single@delims 0032             __pstringtext1 1800  
           __pstringtext2 180F             __pstringtext3 1818             __pstringtext4 1821  
           __pstringtext5 1825             __pstringtext6 1829             __pstringtext7 182D  
           __pstringtext8 0000    __Umul8_16@multiplicand 0020                _OPTION_REG 0095  
                strcspn@c 0027                  strcspn@i 002B                  strcspn@s 002D  
                toupper@c 0026                  strpbrk@b 002E                  strpbrk@s 0031  
            ___aldiv@sign 0036                  strtof@_u 0055  UARTsendString@max_length 0022  
    __Umul8_16@multiplier 0028         __Umul8_16@product 0024               _updateSpeed 0816  
